#pragma once

// Name: roguecompany, Version: 425


/*!!DEFINE!!*/

/*!!HELPER_DEF!!*/

/*!!HELPER_INC!!*/

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
//---------------------------------------------------------------------------
// Classes
//---------------------------------------------------------------------------

// Class Killstreak.AkPoolComponent
// 0x0078 (FullSize[0x0148] - InheritedSize[0x00D0])
class UAkPoolComponent : public UBasePoolComponent
{
public:
	unsigned char                                      UnknownData_KUNA[0x8];                                     // 0x00D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      PooledAkComponentClass;                                    // 0x00D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UAkComponent*>                        UnusedComponentsArray;                                     // 0x00E0(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UsedComponentsSet[0x50];                                   // 0x00F0(0x0050) UNKNOWN PROPERTY: SetProperty
	class UAkComponent*                                PeekedAkComponent;                                         // 0x0140(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(797);
		return ptr;
	}



};

// Class Killstreak.AnimNotifyState_DirectionSwap
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAnimNotifyState_DirectionSwap : public UAnimNotifyState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(798);
		return ptr;
	}



};

// Class Killstreak.AnimNotifyState_LeftHandIKOff
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAnimNotifyState_LeftHandIKOff : public UAnimNotifyState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(799);
		return ptr;
	}



};

// Class Killstreak.ApparelCollection
// 0x0040 (FullSize[0x00D8] - InheritedSize[0x0098])
class UApparelCollection : public UItemCollection
{
public:
	struct FText                                       ApparelCollectionName;                                     // 0x0098(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       ApparelCollectionDescription;                              // 0x00B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AOWW[0x10];                                    // 0x00C8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(800);
		return ptr;
	}



};

// Class Killstreak.AttachmentCollection
// 0x00B0 (FullSize[0x0148] - InheritedSize[0x0098])
class UAttachmentCollection : public UItemCollection
{
public:
	struct FText                                       AttachmentCollectionName;                                  // 0x0098(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       AttachmentCollectionDescription;                           // 0x00B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DULE[0x80];                                    // 0x00C8(0x0080) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(801);
		return ptr;
	}



	void GetCompatibleAttachmentsForWeaponType(const struct FGameplayTag& WeaponType);
};

// Class Killstreak.KSPunishmentConfig
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UKSPunishmentConfig : public UDataAsset
{
public:
	TArray<struct FPunishmentConfigEntry>              GoodBehaviorConfig;                                        // 0x0030(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBadBehaviorConfigEntry>             BadBehaviorConfig;                                         // 0x0040(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEndMatchPunishConfigEntry>          EndMatchPunishConfig;                                      // 0x0050(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1623);
		return ptr;
	}



};

// Class Killstreak.KSActivityManagerBase
// 0x01E8 (FullSize[0x0210] - InheritedSize[0x0028])
class UKSActivityManagerBase : public UObject
{
public:
	TWeakObjectPtr<class UKSGameInstance>              GameInstance;                                              // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AKSGameMode>                  GameMode;                                                  // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_43IA[0xA0];                                    // 0x0038(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<int64_t, class UKSPlayerActivityInstanceContainer*> ActivityInstancesPerPlayer;                                // 0x00D8(0x0050) (Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1JCU[0x50];                                    // 0x0128(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                VendorsLoadGroupId;                                        // 0x0178(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E2Y4[0x4];                                     // 0x017C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      Activities[0x10];                                          // 0x017C(0x0010) UNKNOWN PROPERTY: ArrayProperty
	TArray<TWeakObjectPtr<class AKSPlayerController>>  PlayerControllers;                                         // 0x0190(0x0010) (ZeroConstructor, Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_U4K6[0x50];                                    // 0x01A0(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Killstreak_EKSActivityManagerSetupPhase            SetupPhase;                                                // 0x01F0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Y23M[0x1F];                                    // 0x01F1(0x001F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(838);
		return ptr;
	}



	void RequestActivitiesLoad();
	bool QueryActivityInstancesByTime(TArray<class UKSActivityInstance*> ActivityInstances, const struct FTimespan& TimeWindow, TArray<class UKSActivityInstance*>* Results, Killstreak_EKSActivityTimeQueryType QueryType);
	bool QueryActivityInstances(TArray<class UKSActivityInstance*> ActivityInstances, Killstreak_EKSActivityInstanceQueryType QueryType, TArray<class UKSActivityInstance*>* Results);
	void OnStoreVendorsLoaded(int GroupId, TArray<int> VendorIds);
	void OnSetupPhaseStarted(Killstreak_EKSActivityManagerSetupPhase Phase);
	void OnSetupPhaseFinished(Killstreak_EKSActivityManagerSetupPhase Phase);
	void OnServerPlayerPostLogin(class AGameModeBase* InGameMode, class APlayerController* NewPlayer);
	void OnServerPlayerLogout(class AGameModeBase* InGameMode, class AController* Player);
	void OnGameModePhaseChanged(const struct FMatchPhase& PreviousPhase, const struct FMatchPhase& NewPhase);
	void OnGameModeInitialized(class AGameModeBase* InGameMode);
	void OnClientLoggedIn();
	void OnAllActivitiesLoaded();
	bool IsSetupFinished();
	void GoToNextSetupPhase();
	bool GetActivityInstancesByTags(TArray<struct FGameplayTag> ActivityTags, TArray<class UKSActivityInstance*>* OutActivityInstances, class AKSPlayerController* Player, class AKSPlayerState* PlayerState);
	bool GetActivityInstancesByTagAndString(const struct FGameplayTag& ActivityTag, const struct FString& Value, TArray<class UKSActivityInstance*>* OutActivityInstances, class AKSPlayerController* Player, class AKSPlayerState* PlayerState);
	bool GetActivityInstancesByTagAndInt(const struct FGameplayTag& ActivityTag, int Value, TArray<class UKSActivityInstance*>* OutActivityInstances, class AKSPlayerController* Player, class AKSPlayerState* PlayerState);
	bool GetActivityInstancesByTag(const struct FGameplayTag& ActivityTag, TArray<class UKSActivityInstance*>* OutActivityInstances, class AKSPlayerController* Player, class AKSPlayerState* PlayerState);
	class UKSActivityInstance* GetActivityInstanceByTags(TArray<struct FGameplayTag> ActivityTags, class AKSPlayerController* Player, class AKSPlayerState* PlayerState);
	class UKSActivityInstance* GetActivityInstanceByTagAndString(const struct FGameplayTag& ActivityTag, const struct FString& Value, class AKSPlayerController* Player, class AKSPlayerState* PlayerState);
	class UKSActivityInstance* GetActivityInstanceByTagAndInt(const struct FGameplayTag& ActivityTag, int Value, class AKSPlayerController* Player, class AKSPlayerState* PlayerState);
	class UKSActivityInstance* GetActivityInstanceByTag(const struct FGameplayTag& ActivityTag, class AKSPlayerController* Player, class AKSPlayerState* PlayerState);
	class UKSActivityInstance* GetActivityInstanceByItemId(int64_t ItemId, class AKSPlayerController* Player, int64_t InPlayerNetId);
	class UKSActivityInstance* GetActivityInstanceByInventoryId(const struct FInventoryId& InventoryId);
	class UKSActivity* GetActivityByTags(TArray<struct FGameplayTag> ActivityTags);
	class UKSActivity* GetActivityByTagAndString(const struct FGameplayTag& ActivityTag, const struct FString& Value);
	class UKSActivity* GetActivityByTagAndInt(const struct FGameplayTag& ActivityTag, int Value);
	class UKSActivity* GetActivityByTag(const struct FGameplayTag& ActivityTag);
	bool GetActivitiesByTags(TArray<struct FGameplayTag> ActivityTags, TArray<class UKSActivity*>* OutActivities);
	bool GetActivitiesByTagAndString(const struct FGameplayTag& ActivityTag, const struct FString& Value, TArray<class UKSActivity*>* OutActivities);
	bool GetActivitiesByTagAndInt(const struct FGameplayTag& ActivityTag, int Value, TArray<class UKSActivity*>* OutActivities);
	bool GetActivitiesByTag(const struct FGameplayTag& ActivityTag, TArray<class UKSActivity*>* OutActivities);
	bool GetActiveActivityInstancesByTag(const struct FGameplayTag& ActivityTag, TArray<class UKSActivityInstance*>* OutActivityInstances, class AKSPlayerController* Player, class AKSPlayerState* PlayerState);
	bool DoesRequireSetupPhase(Killstreak_EKSActivityManagerSetupPhase Phase);
	void CompleteActivityByTag(const struct FGameplayTag& ActivityTag);
	void AttemptInitialActivityCreation();
};

// Class Killstreak.KSPunishmentManager
// 0x0068 (FullSize[0x0278] - InheritedSize[0x0210])
class UKSPunishmentManager : public UKSActivityManagerBase
{
public:
	unsigned char                                      UnknownData_DBPU[0x68];                                    // 0x0210(0x0068) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1624);
		return ptr;
	}



};

// Class Killstreak.KSGameRuleComponent
// 0x0000 (FullSize[0x00B0] - InheritedSize[0x00B0])
class UKSGameRuleComponent : public UActorComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(995);
		return ptr;
	}



	void OnTeamSidesFlipped();
	void OnTeamChanged(class AKSPlayerState* Player, class AKSTeamState* OldTeam, class AKSTeamState* NewTeam);
	void OnLogout(class AController* Controller);
	void NewPlayerStarting(class APlayerController* NewPlayer);
	void NewBotStarting(class AKSAIController* NewBot);
};

// Class Killstreak.KSPunishmentRuleComponent
// 0x0068 (FullSize[0x0118] - InheritedSize[0x00B0])
class UKSPunishmentRuleComponent : public UKSGameRuleComponent
{
public:
	class UClass*                                      PunishmentConfigClass;                                     // 0x00B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSPunishmentConfig*                         PunishmentConfig;                                          // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               UseDeserterPenalty;                                        // 0x00C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UX0A[0x7];                                     // 0x00C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<int64_t, struct FPlayerPunishmentTracker>     PlayerPunishmentTrackers;                                  // 0x00C8(0x0050) (Transient, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1625);
		return ptr;
	}



};

// Class Killstreak.KSWaterFXVolume
// 0x0078 (FullSize[0x02D0] - InheritedSize[0x0258])
class AKSWaterFXVolume : public ATriggerVolume
{
public:
	float                                              WaterFXUpdatePeriod;                                       // 0x0258(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurfaceOffsetZ;                                            // 0x025C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class AActor*, float>                         ActorCountdownMap;                                         // 0x0260(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	struct FBoxSphereBounds                            CachedBounds;                                              // 0x02B0(0x001C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XQAF[0x4];                                     // 0x02CC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1720);
		return ptr;
	}



	void OnWaterFXTriggered(class AActor* TriggeringActor, const struct FVector& SurfaceRelevantLocation, bool bIsFullySubmerged);
	void OnWaterExited(class AActor* TriggeringActor, const struct FVector& SurfaceRelevantLocation, bool bIsFullySubmerged);
	void OnWaterEntered(class AActor* TriggeringActor, const struct FVector& SurfaceRelevantLocation, bool bIsFullySubmerged);
};

// Class Killstreak.KSEquipmentCosmeticComponent
// 0x0070 (FullSize[0x0120] - InheritedSize[0x00B0])
class UKSEquipmentCosmeticComponent : public UActorComponent
{
public:
	bool                                               bHasBeenUnequipped;                                        // 0x00B0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_E3RW[0x7];                                     // 0x00B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      EquipmentContainerOwner[0x10];                             // 0x00B1(0x0010) UNKNOWN PROPERTY: InterfaceProperty
	struct FKSEquipmentId                              EquipmentId;                                               // 0x00C8(0x0004) (Net, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FKSEquipmentId                              AuthorityEquipmentId;                                      // 0x00CC(0x0004) (Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                                EquipPoint;                                                // 0x00D0(0x0008) (Edit, Net, DisableEditOnTemplate, EditConst, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bNoEquipPoint;                                             // 0x00D8(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2JN5[0x7];                                     // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      SkinTagAssetOwner[0x10];                                   // 0x00D9(0x0010) UNKNOWN PROPERTY: InterfaceProperty
	unsigned char                                      UnknownData_9PHO[0x8];                                     // 0x00F0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSCharacter*                                CharacterOwner;                                            // 0x00F8(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IJ2B[0x18];                                    // 0x0100(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bPropSpawner;                                              // 0x0118(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LHTO[0x7];                                     // 0x0119(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(978);
		return ptr;
	}



	void OnRep_EquipPoint();
	void OnRep_EquipmentId();
	bool IsOwnerDeadOrDestroyed();
	bool IsLocallyViewed();
	bool IsLocallyManaged();
	bool IsInAction();
	bool IsAPropSpawner();
	struct FGameplayTag GetEquipPoint();
	class UKSCharacterAnimInst* GetCharAnimInstance();
	class AKSCharacter* GetCharacterOwner();
	class USkeletalMeshComponent* GetCharacterMesh();
	void BlueprintOwnerSkinTagContainerChanged();
};

// Class Killstreak.KSWeaponAttachmentCosmeticInst
// 0x0090 (FullSize[0x01B0] - InheritedSize[0x0120])
class UKSWeaponAttachmentCosmeticInst : public UKSEquipmentCosmeticComponent
{
public:
	unsigned char                                      UnknownData_I6XX[0x18];                                    // 0x0120(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDataTable*                                  DefaultAssetDataTable;                                     // 0x0138(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                DefaulAssetDataTablePriority;                              // 0x0140(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y89D[0x4];                                     // 0x0144(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      SkinDetailsPtr[0x28];                                      // 0x0144(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      UnknownData_RJC4[0x10];                                    // 0x0170(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponAttachment*                         AttachmentAsset;                                           // 0x0180(0x0008) (Edit, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                                AttachPoint;                                               // 0x0188(0x0008) (Edit, Net, DisableEditOnTemplate, Transient, EditConst, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSWeaponComponent*                          ParentComponent;                                           // 0x0190(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FKSEquipmentId                              ParentEquipmentId;                                         // 0x0198(0x0004) (Net, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X0JW[0x4];                                     // 0x019C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponAsset*                              ParentWeaponAsset;                                         // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bInitialized;                                              // 0x01A8(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1WOI[0x7];                                     // 0x01A9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(979);
		return ptr;
	}



	void OnRep_ParentEquipmentId();
	void OnRep_AttachPoint();
	void OnRep_AttachmentAsset();
	void OnParentWeaponComponentInitialized();
	void OnParentWeaponComponentCosmeticUpdate();
	void OnComponentCosmeticUpdate(class UKSWeaponComponent* InComponent);
	bool IsInitialized();
	class UKSWeaponComponent* GetParentComponent();
	bool GetLoadedMeshAnimAnimOverrideData(struct FLoadedWeaponAttachmentAnimationData* OutData);
	struct FGameplayTag GetAttachPoint();
	class UKSWeaponAttachment* GetAttachmentAsset();
	void GetAccumulatedMeshAndAnimOverrideData(class UKSWeaponAsset* InWeaponAsset, struct FWeaponAttachmentAnimationData* OutData);
	void EventOnInitialized();
};

// Class Killstreak.KSWAttachmentCosmetic_VarScope
// 0x0010 (FullSize[0x01C0] - InheritedSize[0x01B0])
class UKSWAttachmentCosmetic_VarScope : public UKSWeaponAttachmentCosmeticInst
{
public:
	class UKSWeaponAttachment_VarScope*                VariableScopeAsset;                                        // 0x01B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      ScopeZoomIndex;                                            // 0x01B8(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XAW4[0x7];                                     // 0x01B9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1721);
		return ptr;
	}



	void OnRep_ScopeZoomIndex();
};

// Class Killstreak.KSMapPoint
// 0x0038 (FullSize[0x0258] - InheritedSize[0x0220])
class AKSMapPoint : public AActor
{
public:
	struct FGameplayTagContainer                       MapPointTypes;                                             // 0x0220(0x0020) (Edit, Protected, NativeAccessSpecifierProtected)
	TArray<int>                                        ValidSides;                                                // 0x0240(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldCrouch;                                             // 0x0250(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0IW3[0x7];                                     // 0x0251(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1202);
		return ptr;
	}



	bool ShouldCrouch();
	bool MatchesTags(const struct FGameplayTagContainer& InMapPointTypes);
	bool MatchesTag(const struct FGameplayTag& InMapPointType);
	bool IsFriendly(class AActor* InActor);
	bool IsAvailable(class AActor* InActor);
	bool IsActive();
};

// Class Killstreak.KSWayPoint
// 0x00A0 (FullSize[0x02F8] - InheritedSize[0x0258])
class AKSWayPoint : public AKSMapPoint
{
public:
	TMap<class AKSWayPointSet*, struct FKSWayPointLink> WayPointSetLinks;                                          // 0x0258(0x0050) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FKSWayPointLink                             DefaultWayPointLinks;                                      // 0x02A8(0x0020) (Edit, Protected, NativeAccessSpecifierProtected)
	float                                              DefensePointProbability;                                   // 0x02C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DefensePointWaitTimeMin;                                   // 0x02CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DefensePointWaitTimeMax;                                   // 0x02D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Z4UV[0x4];                                     // 0x02D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AKSDefensePoint*>                     DefensePointsForward;                                      // 0x02D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AKSDefensePoint*>                     DefensePointsReverse;                                      // 0x02E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1722);
		return ptr;
	}



	TArray<class AKSWayPoint*> GetNextWayPoints(class AKSWayPointSet* WayPointSet);
};

// Class Killstreak.KSWayPointSet
// 0x0038 (FullSize[0x0258] - InheritedSize[0x0220])
class AKSWayPointSet : public AActor
{
public:
	int                                                WayPointSet;                                               // 0x0220(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3E8Y[0x4];                                     // 0x0224(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AKSWayPoint*>                         Waypoints;                                                 // 0x0228(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int>                                        ForwardSides;                                              // 0x0238(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int>                                        ReversingSides;                                            // 0x0248(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1723);
		return ptr;
	}



	void UpdateWayPointVisuals();
	bool ShouldSideReverseOnThisWaypointSet(int SideNum);
	void LinkWayPoints();
	bool CanSideUseThisWaypointSet(int SideNum);
};

// Class Killstreak.KSWayPointSetCollection
// 0x00A0 (FullSize[0x00C8] - InheritedSize[0x0028])
class UKSWayPointSetCollection : public UObject
{
public:
	unsigned char                                      UnknownData_2B19[0xA0];                                    // 0x0028(0x00A0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1724);
		return ptr;
	}



};

// Class Killstreak.KSEquipment
// 0x00A0 (FullSize[0x02C0] - InheritedSize[0x0220])
class AKSEquipment : public AInfo
{
public:
	bool                                               bInitialized;                                              // 0x0220(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OHG0[0x3];                                     // 0x0221(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSEquipRepInfo                             EquipInfo;                                                 // 0x0224(0x0014) (Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2531[0x18];                                    // 0x0238(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      EquipmentManagerOwner[0x10];                               // 0x0238(0x0010) UNKNOWN PROPERTY: InterfaceProperty
	class UKSEquipmentManagerComponent*                EquipmentManagerComponent;                                 // 0x0260(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_E5B6[0x18];                                    // 0x0268(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGiveItemParameters                         GiveParameters;                                            // 0x0280(0x001C) (Net, Transient, DuplicateTransient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint16_t                                           EquipmentId;                                               // 0x029C(0x0002) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OPBA[0x2];                                     // 0x029E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSEquipmentCosmeticComponent*               EquipmentCosmeticComponent;                                // 0x02A0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Z01X[0x8];                                     // 0x02A8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCosmeticComponentCreated;                                // 0x02B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(963);
		return ptr;
	}



	void Unequip(bool bLocal, bool bWillReequip);
	bool SetEquipPoint(const struct FGameplayTag& InEquipPoint);
	bool RequiresAnEquipSlot();
	void OnUnequipped(bool bWillReequip);
	void OnRep_GiveParameters();
	void OnRep_EquipPoint();
	void OnRep_EquipmentId();
	void OnEquipped();
	bool IsInitialized();
	bool IsInAction();
	bool IsEquipped();
	class UKSItem* GetKSItem();
	struct FGiveItemParameters GetGiveParameters();
	struct FGameplayTag GetEquipPoint();
	uint16_t GetEquipmentId();
	class UKSEquipmentCosmeticComponent* GetCosmeticComponent();
	bool EquipNoPoint();
	void Drop();
};

// Class Killstreak.KSWeapon
// 0x0468 (FullSize[0x0728] - InheritedSize[0x02C0])
class AKSWeapon : public AKSEquipment
{
public:
	bool                                               bCanSwapOnFire;                                            // 0x02C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanSwapOnDown;                                            // 0x02C1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanSwapOutOnInteraction;                                  // 0x02C2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanSwapOutWhileAimingDownSights;                          // 0x02C3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KQ8L[0x14];                                    // 0x02C4(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      LoadedDropClass;                                           // 0x02D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LHIH[0x8];                                     // 0x02E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bNoWeaponAsset;                                            // 0x02E8(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D0MO[0x7];                                     // 0x02E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      WeaponAssetPtr[0x28];                                      // 0x02E9(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UKSWeaponAsset*                              WeaponAsset;                                               // 0x0318(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0TU3[0x10];                                    // 0x0320(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint32_t                                           AutoSwapOutWeaponId;                                       // 0x0330(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FAI7[0x4];                                     // 0x0334(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FAuxiliaryWeaponInfo                        AuxiliaryWeaponInfo;                                       // 0x0338(0x0010) (Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TMap<struct FName, class AKSWeapon*>               AuxiliaryWeapons;                                          // 0x0348(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnCreatedDeployable;                                       // 0x0398(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, BlueprintCallable, NativeAccessSpecifierProtected)
	Killstreak_EKSWeaponDestroyReason                  DestroyReason;                                             // 0x03A8(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IVLD[0x7];                                     // 0x03A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSCharacter*                                CharacterOwner;                                            // 0x03B0(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSPlayerState*                              PlayerStateInstigator;                                     // 0x03B8(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseCompressStateTransmission;                             // 0x03C0(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PCMB[0x17];                                    // 0x03C1(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Killstreak_EWeaponStateNew                         WeaponState;                                               // 0x03D8(0x0001) (Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EWeaponStateNew                         LocalWeaponState;                                          // 0x03D9(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FFEH[0x2];                                     // 0x03DA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastStateChangeTimeStamp;                                  // 0x03DC(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FWeaponStateChangeRequest>           PendingStateChangeRequests;                                // 0x03E0(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_COMM[0x2];                                     // 0x03F0(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint16_t                                           NextStateRequestId;                                        // 0x03F2(0x0002) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LH7A[0x4];                                     // 0x03F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnWeaponStateChangedDel;                                   // 0x03F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2NWP[0x31];                                    // 0x0408(0x0031) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bPendingFire;                                              // 0x0439(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bBotPendingFire;                                           // 0x043A(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFireOnce;                                                 // 0x043B(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                KickbackShotIndex;                                         // 0x043C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              KickbackResetTimeLeft;                                     // 0x0440(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                BurstShotIndex;                                            // 0x0444(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinCookTimeStamp;                                          // 0x0448(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUsingPostFireForgiveness;                                 // 0x044C(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0Y7F[0x3];                                     // 0x044D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PrefireStartTime;                                          // 0x0450(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKSActionRestrictor                         FireLockout;                                               // 0x0454(0x0008) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O1NM[0x4];                                     // 0x045C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnFire;                                                    // 0x0460(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnReloadFailed;                                            // 0x0470(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	float                                              DeathShotForgivenessTime;                                  // 0x0480(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTryToReloadEveryTickOnEmpty;                              // 0x0484(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E2N5[0x3];                                     // 0x0485(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CachedReloadSize;                                          // 0x0488(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                AmmoInClip;                                                // 0x048C(0x0004) (Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ClipSize;                                                  // 0x0490(0x0004) (Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                AmmoConsumedSinceLastReload;                               // 0x0494(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FWeaponStateChangeRequest                   LastReloadRequest;                                         // 0x0498(0x0010) (NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bWeaponStartsLoaded;                                       // 0x04A8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EReloadReplicationFlags                 ReloadReplicationFlags;                                    // 0x04A9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_V25H[0x6];                                     // 0x04AA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnExhaustedDel;                                            // 0x04B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                               bShouldResumeReload;                                       // 0x04C0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFirstReload;                                              // 0x04C1(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LYEA[0x6];                                     // 0x04C2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnAmmoChangedDel;                                          // 0x04C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9V99[0x18];                                    // 0x04D8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnAmmoInClipConsumed;                                      // 0x04F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IWOI[0x8];                                     // 0x0500(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      LoadedDamageTypeClass;                                     // 0x0508(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnHiddenInteractableUpdate;                                // 0x0510(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AActor*                                      CachedHiddenInteractable;                                  // 0x0520(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_I3C5[0x18];                                    // 0x0528(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              NextExpectedTimerEndTime;                                  // 0x0540(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ORCA[0x4];                                     // 0x0544(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                ActiveTimer;                                               // 0x0548(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bCanEverInterruptSprinting;                                // 0x0550(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H52H[0x3];                                     // 0x0551(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SprintRecoveryRemaining;                                   // 0x0554(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bReleasedFireInSprintRecovery;                             // 0x0558(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDodgeRollInterruptedReload;                               // 0x0559(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSprintCanInterruptReload;                                 // 0x055A(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDodgeRollCanInterruptReload;                              // 0x055B(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DodgeRollRecoveryRemaining;                                // 0x055C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PZH8[0x18];                                    // 0x0560(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bInLockon;                                                 // 0x0578(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_326K[0x3];                                     // 0x0579(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LockonProgress;                                            // 0x057C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LockonDuration;                                            // 0x0580(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    LockonStartRotation;                                       // 0x0584(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    LockonEndRotation;                                         // 0x0590(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ONFL[0x58];                                    // 0x059C(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRandomStream                               WeaponRandomStream;                                        // 0x05F4(0x0008) (BlueprintVisible, Net, ZeroConstructor, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QGOG[0x54];                                    // 0x05FC(0x0054) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSAimFrictionData*                          AimAssistFrictionData;                                     // 0x0650(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSAimMagnetismData*                         AimAssistMagnetismData;                                    // 0x0658(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSAimLockData*                              AimAssistLockData;                                         // 0x0660(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSAimSnapData*                              AimAssistSnapData;                                         // 0x0668(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRequireInputForAimAssistFriction;                         // 0x0670(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRequireInputForAimAssistMagnetism;                        // 0x0671(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRequireInputForAimAssistLock;                             // 0x0672(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DXV2[0x5];                                     // 0x0673(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveVector*                                AimAssistFrictionCurve;                                    // 0x0678(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 AimAssistFrictionDistanceCurve;                            // 0x0680(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveVector*                                AimAssistMagnetismCurve;                                   // 0x0688(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 AimAssistMagnetismDistanceCurve;                           // 0x0690(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveVector*                                AimAssistLockCurve;                                        // 0x0698(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 AimAssistLockDistanceCurve;                                // 0x06A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRequireInputForHipAimAssistFriction;                      // 0x06A8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRequireInputForHipAimAssistMagnetism;                     // 0x06A9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRequireInputForHipAimAssistLock;                          // 0x06AA(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FK1K[0x5];                                     // 0x06AB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveVector*                                HipAimAssistFrictionCurve;                                 // 0x06B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 HipAimAssistFrictionDistanceCurve;                         // 0x06B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveVector*                                HipAimAssistMagnetismCurve;                                // 0x06C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 HipAimAssistMagnetismDistanceCurve;                        // 0x06C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveVector*                                HipAimAssistLockCurve;                                     // 0x06D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 HipAimAssistLockDistanceCurve;                             // 0x06D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    MaxAimAssistSnapRotation;                                  // 0x06E0(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AJ9D[0x4];                                     // 0x06EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 AimAssistSnapDistanceCurve;                                // 0x06F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveVector*                                AimAssistSnapCurve;                                        // 0x06F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RPBE[0x28];                                    // 0x0700(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(964);
		return ptr;
	}



	bool WasRemoved();
	bool WasDropped();
	bool UsingAccuracyLoss();
	void UpdateHiddenInteractable();
	bool StopFireOnRelease();
	void StopFire();
	void StopDefaultAim();
	bool StopAltFire();
	void StopAimOverShoulder();
	void StopAimDownSights();
	void StateRequestTimeoutExpired();
	bool StartRetrieving(bool bInstant);
	bool StartReload();
	bool StartHolstering();
	bool StartFire();
	void StartDefaultAim();
	bool StartAltFire();
	void StartAimOverShoulder();
	void StartAimDownSights();
	void SimulateConsumeAmmo(int* AmmoInClipAfterConsume, int* AmmoToConsumeFromInventory);
	bool ShouldSwapOffBeInstant();
	bool ShouldStartReloadInterruptSprinting();
	bool ShouldStartHolsterInterruptSprinting();
	bool ShouldStartFireInterruptSprinting();
	bool ShouldStartFireInterruptAimDownSights();
	bool ShouldQuickMeleeAsBackupFire();
	bool ShouldLimitCameraRotation();
	bool ShouldEACRecordAsMeleeAttackNow();
	bool ShouldConsumeAmmoDirectlyFromInventory();
	bool ShouldBeRemovedWhenExhausted();
	void SetAutoSwapOutWeaponId(uint32_t OtherWeaponId);
	void ServerStartForcedVariableFireRateUpdate();
	void ServerRetrieveActiveWeaponCompressed(const struct FWeaponStateChangeRequest& request, uint16_t LastRequestId);
	void ServerRetrieveActiveWeapon(const struct FWeaponStateChangeRequest& request);
	void ServerRequestStateChangeCompressed(const struct FWeaponStateChangeRequest& request, uint16_t LastRequestId);
	void ServerRequestStateChange(const struct FWeaponStateChangeRequest& request);
	void ServerPostReloadCompressed(const struct FWeaponStateChangeRequest& request, int AmmoDelta, uint16_t LastRequestId);
	void ServerPostReload(const struct FWeaponStateChangeRequest& request, int AmmoDelta);
	void ServerEndForcedVariableFireRateUpdate();
	void ServerCookReleasedCompressed(const struct FWeaponStateChangeRequest& request, float AdditionalCookTime, uint16_t LastRequestId);
	void ServerCookReleased(const struct FWeaponStateChangeRequest& request, float AdditionalCookTime);
	void Reload(bool bBonusAmmo);
	void RecoverBackToIdleOnUnpossess();
	void ProcessHits(const struct FAimData& ReceivedAim, TArray<struct FHitResult> Hits);
	void PreLoadAmmo();
	bool OwnerIsTransitioningAimState();
	bool OwnerIsSwimming();
	bool OwnerIsSprinting();
	bool OwnerIsReloadingAnyWeapon();
	bool OwnerIsMovingOnGround();
	bool OwnerIsLocallyViewed();
	bool OwnerIsFreeFalling();
	bool OwnerIsFiringMeleeWeapon();
	bool OwnerIsDowned();
	bool OwnerIsAlive();
	bool OwnerHasAmmo();
	float OnStartRetrieving(Killstreak_EWeaponStateNew PreviousState);
	float OnStartReloadCooldown(Killstreak_EWeaponStateNew PreviousState);
	float OnStartPreReload(Killstreak_EWeaponStateNew PreviousState);
	float OnStartPreFire(Killstreak_EWeaponStateNew PreviousState);
	float OnStartPostReload(Killstreak_EWeaponStateNew PreviousState);
	float OnStartPostFire(Killstreak_EWeaponStateNew PreviousState);
	void OnStartInactive(Killstreak_EWeaponStateNew PreviousState);
	float OnStartHolstering(Killstreak_EWeaponStateNew PreviousState);
	float OnStartCooldown(Killstreak_EWeaponStateNew PreviousState);
	float OnStartBuildup(Killstreak_EWeaponStateNew PreviousState);
	void OnRep_WeaponState();
	void OnRep_WeaponAsset();
	void OnRep_AuxiliaryWeaponInfo();
	void OnRep_AutoSwapOutWeaponId();
	void OnRep_Ammo();
	void OnPostMantleLockoutEnd();
	void OnOwnerMovementModeChangedNative(TEnumAsByte<Engine_EMovementMode> OldMode, unsigned char OldCustomMode, TEnumAsByte<Engine_EMovementMode> NewMode, unsigned char NewCustomMode);
	void OnOwnerMovementModeChanged(TEnumAsByte<Engine_EMovementMode> OldMode, unsigned char OldCustomMode, TEnumAsByte<Engine_EMovementMode> NewMode, unsigned char NewCustomMode);
	void OnEndRetrieving(Killstreak_EWeaponStateNew NextState);
	void OnEndReloadCooldown(Killstreak_EWeaponStateNew NewState);
	void OnEndPreReload(Killstreak_EWeaponStateNew NextState);
	void OnEndPreFire(Killstreak_EWeaponStateNew NextState);
	void OnEndPostReload(Killstreak_EWeaponStateNew NextState);
	void OnEndPostFire(Killstreak_EWeaponStateNew NextState);
	void OnEndInactive(Killstreak_EWeaponStateNew NextState);
	void OnEndIdleState(Killstreak_EWeaponStateNew NextState);
	void OnEndHolstering(Killstreak_EWeaponStateNew NextState);
	void OnEndCooldown(Killstreak_EWeaponStateNew NextState);
	void OnEndBuildup(Killstreak_EWeaponStateNew NextState);
	void OnDecayFireRateTimerElapsed();
	void OnBeginIdleState(Killstreak_EWeaponStateNew PreviousState);
	float ModifyDamageDealt(float DamageAmount, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class AActor* DamagedActor);
	bool IsRetrieving();
	bool IsReloading();
	bool IsInSprintRecovery();
	bool IsInReloadingLoop();
	bool IsInFiringLoop();
	bool IsInDodgeRollRecovery();
	bool IsHolstering();
	bool IsFiring();
	bool IsExhausted();
	bool IsEquippedMelee();
	bool IsEquippedMainWeapon();
	bool IsEquippedGrenade();
	bool IsCooking();
	bool IsClipFull();
	bool IsClipEmpty();
	bool IsActiveWeapon();
	bool InstantReload(bool bBonusAmmo);
	bool HasAttachment(class UKSWeaponAttachmentInstance* InAttachment);
	void HandleExhausted();
	Killstreak_EWeaponStateNew GetWeaponState();
	class UKSWeaponComponent* GetWeaponComponent();
	class UKSWeaponAsset* GetWeaponAsset();
	float GetWalkSpeedModifier();
	float GetReloadCooldownTime();
	float GetPreReloadTime();
	float GetPostReloadTime();
	float GetMovementAccuracyPenalty();
	float GetMaxHipFireAccuracy();
	float GetMaxFiringAccuracyLoss();
	float GetMaxFiringAccuracyGain();
	float GetMaxAimedFiringAccuracyGain();
	float GetMaxAimedAccuracy();
	float GetLimbDamageAmount();
	class AKSPlayerState* GetKSPlayerStateInstigator();
	class AKSPlayerState* GetKSPlayerState();
	float GetInAirAccuracyModifier();
	class AActor* GetHiddenInteractable();
	float GetHeadDamageAmount();
	class AController* GetDamageInstigator();
	float GetDamageFalloffRangeScaler();
	float GetCrouchAccuracyModifier();
	int GetClipSize();
	class AKSCharacter* GetCharacterOwner();
	bool GetCanUseOffGround();
	void GetCalculatedCameraYawLimits(float* MinYaw, float* MaxYaw);
	void GetCalculatedCameraPitchLimits(float* MinPitch, float* MaxPitch);
	float GetBaseDamageAmount();
	float GetBaseAccuracy();
	void GetAttachments(TArray<class UKSWeaponAttachment*>* OutWeaponAttachments);
	void GetAttachmentInstances(TArray<class UKSWeaponAttachmentInstance*>* OutWeaponAttachmentInstances);
	class UKSWeaponAttachmentInstance* GetAttachment(const struct FGameplayTag& InAttachPoint);
	Killstreak_EAmmoType GetAmmoType();
	int GetAmmoInOwnerInventory();
	int GetAmmoInClip();
	float GetAimOverShoulderAccuracyModifier();
	float GetAimDownSightsFOV();
	float GetAccuracyReturnRate();
	float GetAccuracyReturnDelay();
	float GetAccuracyLossPerShot();
	float GetAccuracyGainPerShot();
	float GetAccuracyDecayRate();
	void FireWeapon();
	void EndState(Killstreak_EWeaponStateNew NextState);
	void ConsumePendingFire();
	int ConsumeAmmo();
	void ClientStateChangeRejected(uint16_t nRequestId, Killstreak_EWeaponStateNew RestoreState);
	void ClientStateChangeAccepted(uint16_t nRequestId);
	void ClientSetVariableFireRateState(Killstreak_EVariableFireRateState State, float Timestamp, float PostFireTime);
	void ClientRecoverSeedMisalignment(uint16_t RequestID, const struct FRandomStream& ServerStream);
	void ClientNotifyRecoveryFinish();
	void ClientForceUpdateAmmoInClip(int NewAmmo, bool bBonusAmmo);
	void ClientForceIdleFromFire();
	void ClientFixLastReload(uint16_t RequestID, int InAmmoInClip);
	void ClientFireWeaponRejected(uint16_t nRequestId);
	void CheckExhausted();
	bool CheckDeathShotForgiveness();
	bool CanUseAnAimStateNow();
	bool CanToggleOutOfAimDownSightsNow();
	bool CanToggleIntoAimDownSightsNow();
	bool CanStartReloadNow();
	bool CanStartFireNow();
	bool CanRetrieveNow();
	bool CanReloadNowCommon();
	bool CanRefireNow();
	bool CanReceiveAttachment(class UKSWeaponAttachment* InAttachment, struct FGameplayTagContainer* AvailableAttachPoints);
	bool CanInteractWith(class AActor* InteractableTarget);
	bool CanHolsterNow();
	bool CanFireNowCommon();
	bool CanEverReload();
	bool CanEverAimOverShoulder();
	bool CanEverAimDownSights();
	bool CanEverAimAlternate();
	bool CanDropNow();
	bool CanCookNow();
	bool CanContinueReloadNow();
	bool CancelHolstering();
	bool CanBeSwappedTo(bool bByForce);
	bool CanBeSwappedFrom();
	bool CanBeInterruptedNow();
	float CalculateDamageFromHitInfo(const struct FHitResult& HitInfo);
	float CalculateDamageFalloffFromHitResults(const struct FHitResult& HitInfo);
	float CalculateDamageFalloffFromDistance(float Distance);
	void BeginState(Killstreak_EWeaponStateNew PreviousState);
	void AltFireInitiated();
	void AltFireEnded();
	bool AllowZiplineRightNow();
	bool AllowSprintingRightNow();
	bool AllowDodgeRollRightNow();
	void AimTransitionComplete(Killstreak_EKSCharacterAimMode NewAimState);
	int AddAmmoDirectlyToClip(int AddedAmmo, bool bBonusAmmo);
	bool AbortReload();
	void AbortFire();
};

// Class Killstreak.KSWeapon_Aimed
// 0x0140 (FullSize[0x0868] - InheritedSize[0x0728])
class AKSWeapon_Aimed : public AKSWeapon
{
public:
	struct FAimData                                    CachedAim;                                                 // 0x0728(0x0050) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint16_t                                           LastHitValidationRequestId;                                // 0x0778(0x0002) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DSU4[0x6];                                     // 0x077A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<uint16_t, struct FHitValidationRecoveryInfo>  HitValidationRecoveryList;                                 // 0x0780(0x0050) (Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                               bAimOverShoulder;                                          // 0x07D0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AMFU[0x3];                                     // 0x07D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CachedAimBonus;                                            // 0x07D4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bApplyAccuracyServerSide;                                  // 0x07D8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LYWZ[0x2B];                                    // 0x07D9(0x002B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Range;                                                     // 0x0804(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EFiredReplicationFlags                  FiredReplicationFlags;                                     // 0x0808(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9MZK[0x7];                                     // 0x0809(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSAimCorrectionData*                        AimAssistCorrectionData;                                   // 0x0810(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowAimCorrection;                                       // 0x0818(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_G6F0[0x3];                                     // 0x0819(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HeadAimCorrectionOffset;                                   // 0x081C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HeadAimCorrectionOffsetPC;                                 // 0x0820(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HeadAimCorrectionRange;                                    // 0x0824(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BodyAimCorrectionOffset;                                   // 0x0828(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BodyAimCorrectionOffsetPC;                                 // 0x082C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BodyAimCorrectionRange;                                    // 0x0830(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowHipAimCorrection;                                    // 0x0834(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_G3XM[0x3];                                     // 0x0835(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HeadHipAimCorrectionOffset;                                // 0x0838(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HeadHipMouseAimCorrectionOffset;                           // 0x083C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HeadHipAimCorrectionRange;                                 // 0x0840(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BodyHipAimCorrectionOffset;                                // 0x0844(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BodyHipMouseAimCorrectionOffset;                           // 0x0848(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BodyHipAimCorrectionRange;                                 // 0x084C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ValidationSweepRadius;                                     // 0x0850(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimOriginOffsetLenience;                                   // 0x0854(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimOriginAngularLenience;                                  // 0x0858(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimumShotDirCoincidence;                                 // 0x085C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CosAngularLenience;                                        // 0x0860(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GQ2L[0x4];                                     // 0x0864(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1725);
		return ptr;
	}



	void ValidateReceivedAimData(struct FAimData* ReceivedAim);
	void ValidateHitWithAimData(struct FHitResult* Hit, const struct FAimData& ReceivedAim);
	struct FAimData STATIC_StaticDefaultGetAimFromOrigin(const struct FTransform& InOrigin);
	struct FAimData STATIC_StaticDefaultGetAim(class UKSWeaponAsset* InWeaponAsset, class AActor* InWeaponOwner, Killstreak_EKSCharacterAimMode InAimMode);
	void ServerSetAimOverShoulder(bool bNewAimDownSights);
	void ServerReFireWeaponAimed(const struct FWeaponStateChangeRequest& request, const struct FAimData& ReceivedAim);
	void ServerProcessHits(const struct FAimData& ReceivedAim, TArray<struct FKSCompressedHit> CompressedHits, uint16_t RequestID);
	void ServerFireWeaponAimedCompressed(const struct FWeaponStateChangeRequest& request, const struct FAimData& ReceivedAim, uint16_t LastRequestId);
	void ServerFireWeaponAimed(const struct FWeaponStateChangeRequest& request, const struct FAimData& ReceivedAim);
	bool IsInOrTransitioningToAOS();
	bool IsInOrTransitioningToAlternate();
	bool IsInOrTransitioningToADS();
	bool IsAimingOverShoulder();
	bool IsAimingDownSights();
	bool IsAimingAlternate();
	bool IsAiming();
	void InternalGetActorsToIgnore(TArray<class AActor*>* ActorsToIgnore);
	float GetRange();
	Killstreak_EKSCharacterAimMode GetOwnerAimMode();
	float GetHeadAimCorrectionRange();
	float GetHeadAimCorrectionOffset(bool bMouse);
	struct FFullFireRepData GetFullFireRepData();
	float GetCurrentAccuracy();
	struct FAimData GetCachedAim();
	struct FAimData GetAim();
	TArray<class AActor*> GetActorsToIgnore();
	void ApplyView(const struct FAimData& InAim, struct FAimData* OutAim);
	bool ApplyAimAssist(struct FAimData* InOutAim);
	void ApplyAccuracy(const struct FAimData& InAim, struct FAimData* OutAim);
	bool AllowAimCorrection();
};

// Class Killstreak.KSWeapon_Build
// 0x00C8 (FullSize[0x0930] - InheritedSize[0x0868])
class AKSWeapon_Build : public AKSWeapon_Aimed
{
public:
	unsigned char                                      UnknownData_5R2D[0x18];                                    // 0x0868(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnInvalidBuildPlacementDel;                                // 0x0880(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HU40[0x18];                                    // 0x0890(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnValidBuildPlacementDel;                                  // 0x08A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     BuildLocationOffset;                                       // 0x08B8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxAdjustBuildDistanceHorizontal;                          // 0x08C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxAdjustBuildDistanceVertical;                            // 0x08C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxAdjustBuildDistanceOffGround;                           // 0x08CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSBuildPreview*                             BuildPreviewActor;                                         // 0x08D0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSBuildState                           BuildState;                                                // 0x08D8(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LECZ[0x3F];                                    // 0x08D9(0x003F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnBuildSpawned;                                            // 0x0918(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0UB6[0x8];                                     // 0x0928(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1726);
		return ptr;
	}



	void OnRep_BuildState();
	void GetDesiredBuildLocationAndRotation(struct FVector* OutLocation, struct FRotator* OutRotation);
	class UClass* GetBuildPreviewActorClass();
	class UClass* GetBuildActorClass();
};

// Class Killstreak.BakedOcclusionLUT
// 0x0070 (FullSize[0x0098] - InheritedSize[0x0028])
class UBakedOcclusionLUT : public UObject
{
public:
	unsigned char                                      LUT[0x50];                                                 // 0x0028(0x0050) UNKNOWN PROPERTY: SetProperty
	TArray<uint16_t>                                   OctreeSampleMap;                                           // 0x0078(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FIntVector>                          OctreeLocations;                                           // 0x0088(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(802);
		return ptr;
	}



};

// Class Killstreak.AudioOcclusionComponent
// 0x0008 (FullSize[0x00B8] - InheritedSize[0x00B0])
class UAudioOcclusionComponent : public UActorComponent
{
public:
	class UBakedOcclusionLUT*                          LUT;                                                       // 0x00B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(803);
		return ptr;
	}



	bool GetPathedOcclusion(const struct FVector& Other);
};

// Class Killstreak.EchoBlueprintLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UEchoBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(804);
		return ptr;
	}



	void STATIC_RequestEchoFromActor(class UObject* WorldContextObject, class UAkAudioEvent* EchoEvent, class AActor* OriginActor, float ZOffset, float SpeedOfSound, int NumberOfEchosToTrace, float EchoTraceRange, bool bAllowPostAtMaxDistance);
	void STATIC_RequestEcho(class UObject* WorldContextObject, class UAkAudioEvent* EchoEvent, const struct FVector& EchoOrigin, const struct FRotator& EchoOrientation, float SpeedOfSound, int NumberOfEchosToTrace, float EchoTraceRange, bool bAllowPostAtMaxDistance);
};

// Class Killstreak.EnvironmentActorInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UEnvironmentActorInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(805);
		return ptr;
	}



	void TrackerLeave(class UEnvironmentTrackerComponent* Tracker);
	void TrackerEnter(class UEnvironmentTrackerComponent* Tracker);
	struct FName GetEnvironmentTag();
};

// Class Killstreak.EnvironmentListenerComponent
// 0x0018 (FullSize[0x00C8] - InheritedSize[0x00B0])
class UEnvironmentListenerComponent : public UActorComponent
{
public:
	struct FName                                       CurrentEnvironmentTag;                                     // 0x00B0(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       StartingEnvironment;                                       // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UEnvironmentTrackerComponent> LastTrackerComponent;                                      // 0x00C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(806);
		return ptr;
	}



	void ViewTargetEnvironmentChanged(const struct FName& OldEnvironmentTag, const struct FName& NewEnvironmentTag);
	void OnEnvironmentChanged(const struct FName& OldEnvironmentTag);
	struct FName GetCurrentEnvironment();
};

// Class Killstreak.EnvironmentTrackerComponent
// 0x0088 (FullSize[0x0138] - InheritedSize[0x00B0])
class UEnvironmentTrackerComponent : public UActorComponent
{
public:
	TArray<class UObject*>                             EnvironmentVolumes;                                        // 0x00B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FName, int>                            CachedEnvironmentCounts;                                   // 0x00C0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, Protected, NativeAccessSpecifierProtected)
	struct FName                                       CachedCurrentEnvironment;                                  // 0x0110(0x0008) (Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       LastEnvironment;                                           // 0x0118(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       DefaultEnvironment;                                        // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnEnvironmentChanged;                                      // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(807);
		return ptr;
	}



	struct FName ReevalulateEnvironment();
	void OnRep_CurrentEnvironment();
	struct FName GetCurrentEnvironment();
	void EndTouchingOwnerUpdatedComponent(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void BlueprintEnvironmentChanged(const struct FName& OldEnvironment);
	void BeginTouchingOwnerUpdatedComponent(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};

// Class Killstreak.EnvironmentVolume
// 0x0010 (FullSize[0x0268] - InheritedSize[0x0258])
class AEnvironmentVolume : public ATriggerVolume
{
public:
	unsigned char                                      UnknownData_V73S[0x8];                                     // 0x0258(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       EnvironmentTag;                                            // 0x0260(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(809);
		return ptr;
	}



};

// Class Killstreak.PreviewActorLoadoutComponent
// 0x0008 (FullSize[0x00B8] - InheritedSize[0x00B0])
class UPreviewActorLoadoutComponent : public UActorComponent
{
public:
	class AKSJobSelectPreviewActor*                    PreviewActorOwner;                                         // 0x00B0(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(810);
		return ptr;
	}



};

// Class Killstreak.RogueScreenLoadoutComponent
// 0x0068 (FullSize[0x0120] - InheritedSize[0x00B8])
class URogueScreenLoadoutComponent : public UPreviewActorLoadoutComponent
{
public:
	class UKSJobItem*                                  CurrentJob;                                                // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSSkinBundle*                               OverrideSkin;                                              // 0x00C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class UKSItem*, class UKSItem*>               SkinMap;                                                   // 0x00C8(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	bool                                               bBoundToLoadoutFactory;                                    // 0x0118(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YG33[0x3];                                     // 0x0119(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                LastLoadoutId;                                             // 0x011C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(811);
		return ptr;
	}



	void LoadoutDeleted(int InLoadoutId);
	void LoadoutChanged(class UPUMG_Loadout* InLoadout);
};

// Class Killstreak.FavoritePreviewLoadoutComponent
// 0x0028 (FullSize[0x0148] - InheritedSize[0x0120])
class UFavoritePreviewLoadoutComponent : public URogueScreenLoadoutComponent
{
public:
	unsigned char                                      FailSafeFavoriteJob[0x28];                                 // 0x0120(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(812);
		return ptr;
	}



	void CheckForPreferredJobChange(class UPUMG_Loadout* InLoadout);
};

// Class Killstreak.IconInfo
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UIconInfo : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(813);
		return ptr;
	}



};

// Class Killstreak.ImageIconInfo
// 0x0048 (FullSize[0x0070] - InheritedSize[0x0028])
class UImageIconInfo : public UIconInfo
{
public:
	struct FSoftObjectPath                             IconImage;                                                 // 0x0028(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      LegacyIconTexture[0x28];                                   // 0x0040(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      UnknownData_7TAC[0x8];                                     // 0x0068(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(814);
		return ptr;
	}



};

// Class Killstreak.JobCollection
// 0x0040 (FullSize[0x00D8] - InheritedSize[0x0098])
class UJobCollection : public UItemCollection
{
public:
	struct FText                                       CollectionName;                                            // 0x0098(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       CollectionDescription;                                     // 0x00B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LPE9[0x10];                                    // 0x00C8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(815);
		return ptr;
	}



};

// Class Killstreak.KSJobRole
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class UKSJobRole : public UDataAsset
{
public:
	struct FText                                       JobRoleDisplayName;                                        // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FName                                       JobRoleName;                                               // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       JobRoleDescription;                                        // 0x0050(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                JobRoleSortOrder;                                          // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D0ZW[0x4];                                     // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  JobRoleIcon;                                               // 0x0070(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(816);
		return ptr;
	}



	class UTexture2D* GetRoleIcon();
};

// Class Killstreak.KickbackModule
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKickbackModule : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(817);
		return ptr;
	}



	struct FInterpCurveVector2D MakeKickbackInstance(int ShotIndex, float AbsoluteMaxDuration);
	float GetMaximumVerticalKick();
	float GetMaximumHorizontalKick();
};

// Class Killstreak.KickbackModuleRandom
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UKickbackModuleRandom : public UKickbackModule
{
public:
	float                                              MinAmplitude;                                              // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxAmplitude;                                              // 0x002C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinDuration;                                               // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDuration;                                               // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxOffsetFromVertical;                                     // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QLAS[0x4];                                     // 0x003C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(818);
		return ptr;
	}



};

// Class Killstreak.Killstreak_ShippingConsole
// 0x0000 (FullSize[0x0138] - InheritedSize[0x0138])
class UKillstreak_ShippingConsole : public UPGame_ShippingConsole
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(819);
		return ptr;
	}



};

// Class Killstreak.KillstreakGameSingleton
// 0x0060 (FullSize[0x0088] - InheritedSize[0x0028])
class UKillstreakGameSingleton : public UPlatformGameSingleton
{
public:
	unsigned char                                      UnknownData_MJ2R[0x60];                                    // 0x0028(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(820);
		return ptr;
	}



};

// Class Killstreak.KSAccoladeTracker
// 0x0078 (FullSize[0x00A0] - InheritedSize[0x0028])
class UKSAccoladeTracker : public UObject
{
public:
	unsigned char                                      UnknownData_G91U[0x10];                                    // 0x0028(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FAccoladeDisplayInfo                        AccoladeDisplayInfo;                                       // 0x0038(0x0068) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(821);
		return ptr;
	}



	void StartTracking();
	void ResetTracker();
	void NativeHandleElimEvent(const struct FCombatEventInfo& ElimEvent);
	void NativeHandleDownEvent(const struct FCombatEventInfo& DownEvent);
	void HandleElimEvent(const struct FCombatEventInfo& ElimEvent);
	void HandleDownEvent(const struct FCombatEventInfo& DownEvent);
	struct FAccoladeDisplayInfo GetPrimaryAccoladeDisplayInfo();
	bool GetOwningGameMode(class AKSGameMode** OutGameMode);
	void DispatchGameStateAccoladeDisplay(class AKSPlayerState* RelevantPlayer, const struct FAccoladeDisplayInfo& AccoladeToDisplay, bool IgnoreRelevantPlayerId);
};

// Class Killstreak.AcquisitionItemData
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UAcquisitionItemData : public UObject
{
public:
	class UPUMG_StoreItem*                             StoreItem;                                                 // 0x0028(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Quantity;                                                  // 0x0030(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JS18[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(822);
		return ptr;
	}



};

// Class Killstreak.KSEquipOnAcquisitionData
// 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
class UKSEquipOnAcquisitionData : public UObject
{
public:
	int                                                LoadoutTypeId;                                             // 0x0028(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LoadoutSlotTypeId;                                         // 0x002C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LoadoutSlotPosition;                                       // 0x0030(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_20MP[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSJobItem*                                  JobToEquipTo;                                              // 0x0038(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UKSWeaponAsset*                              WeaponToEquipTo;                                           // 0x0040(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UKSItem*                                     ItemToEquip;                                               // 0x0048(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(823);
		return ptr;
	}



};

// Class Killstreak.KSAcquisition
// 0x0038 (FullSize[0x0060] - InheritedSize[0x0028])
class UKSAcquisition : public UObject
{
public:
	Killstreak_EKSAcquisitionType                      AcquisitionType;                                           // 0x0028(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TQLN[0x7];                                     // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UAcquisitionItemData*>                AcquisitionItems;                                          // 0x0030(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UKSJobItem*                                  DisplayedJob;                                              // 0x0040(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_781N[0x18];                                    // 0x0048(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(824);
		return ptr;
	}



	void SortAcquisitionItemsBySortOrder();
	void SortAcquisitionItemsByBattlePassDisplayOrder();
	bool IsPurchase();
	bool IsBundleAcquisition();
};

// Class Killstreak.KSAcquisitionManager
// 0x0050 (FullSize[0x00A0] - InheritedSize[0x0050])
class UKSAcquisitionManager : public UPUMG_AcquisitionManager
{
public:
	unsigned char                                      UnknownData_5HOY[0x8];                                     // 0x0050(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnAcquisitionReady;                                        // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_COG7[0x10];                                    // 0x0068(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UKSAcquisition*>                      QueuedAcquisitions;                                        // 0x0078(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSAcquisition*                              PendingAcquisition;                                        // 0x0088(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKSEquipOnAcquisitionData*>           PendingEquipables;                                         // 0x0090(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(825);
		return ptr;
	}



	void SetupEventGrandPrizeTestAcquisition();
	void SetupBattlePassTestAcquisition(int StartTier, int EndTier);
	class UKSAcquisition* GetNextAcquistion();
	void CreateAcquisitionForItem(class UPUMG_StoreItem* StoreItem);
};

// Class Killstreak.KSActivity
// 0x0210 (FullSize[0x03C8] - InheritedSize[0x01B8])
class UKSActivity : public UPlatformInventoryItem
{
public:
	struct FText                                       ItemDescriptionSingular;                                   // 0x01B8(0x0018) (Edit, DisableEditOnInstance, DuplicateTransient, NativeAccessSpecifierPublic)
	int64_t                                            ProgressLootId;                                            // 0x01D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64_t                                            RemoveProgressLootId;                                      // 0x01D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64_t                                            SetProgressLootId;                                         // 0x01E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64_t                                            ResetProgressLootId;                                       // 0x01E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64_t                                            SpecialLootId;                                             // 0x01F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64_t                                            RewardVendorId;                                            // 0x01F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64_t                                            RewardXpTableId;                                           // 0x0200(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64_t                                            SortOrder;                                                 // 0x0208(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int64_t>                                    EntitlementItemIds;                                        // 0x0210(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      TrackerClass[0x28];                                        // 0x0220(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	TMap<struct FString, float>                        TrackerConfig;                                             // 0x0248(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<struct FString, struct FString>               TrackerStringConfig;                                       // 0x0298(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                ProgressInterval;                                          // 0x02E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxProgressPerMatch;                                       // 0x02EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowMultipleProgressFromTriggerEvent;                    // 0x02F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bResetAccumulationAfterTriggerEvent;                       // 0x02F1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bResetAccumulationAfterProgressIncrease;                   // 0x02F2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsClientAuthority;                                        // 0x02F3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCreateTrackerIfFinished;                                  // 0x02F4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCreateInstanceIfInvalid;                                  // 0x02F5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAlwaysPackageActivityIfCreated;                           // 0x02F6(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanPackageActivityWithoutTracker;                         // 0x02F7(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowLastTierToRepeat;                                    // 0x02F8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_45C5[0x7];                                     // 0x02F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FActivityAchievementInfo                    AchievementInfo;                                           // 0x0300(0x0058) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	Killstreak_EKSActivityProgressDisplayType          ProgressDisplayPreference;                                 // 0x0358(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EKSActivityClientNotifyFrequency        ClientNotifyFrequency;                                     // 0x0359(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1FLS[0x6];                                     // 0x035A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FActivityTierStructure>              ActivityTierData;                                          // 0x0360(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowInPostMatchLobby;                                     // 0x0370(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableAfterJobChange;                                    // 0x0371(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsOwnableItem;                                            // 0x0372(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldDisplay;                                            // 0x0373(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_11N4[0x4];                                     // 0x0374(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UKSActivityComponent*>                ActivityComponents;                                        // 0x0378(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UKSActivityRequirement*>              ActivityRequirements;                                      // 0x0388(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UKSActivityRewardCondition*>          ActivityRewardConditions;                                  // 0x0398(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      ActivityBehaviors[0x10];                                   // 0x03A8(0x0010) UNKNOWN PROPERTY: ArrayProperty
	TArray<struct FGameplayTag>                        ActivityTypes;                                             // 0x03B8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(826);
		return ptr;
	}



	bool MatchesTags(TArray<struct FGameplayTag> ActivityTags);
	bool MatchesTagAndString(const struct FGameplayTag& ActivityTag, const struct FString& Value);
	bool MatchesTagAndInt(const struct FGameplayTag& ActivityTag, int Value);
	bool MatchesTag(const struct FGameplayTag& ActivityTag);
	bool IsUnlocked(class AKSPlayerController* PlayerController);
	bool IsTriggerConditionMet(int64_t PlayerId, class UWorld* World);
	bool IsShopPurchaseConditionMet(const struct FShopSubItem& ShopSubItem);
	bool IsItemPickedUpConditionMet(class UKSItem* ItemPickedUp);
	bool IsCombatConditionMet(const struct FCombatEventInfo& DamageInfo);
	class UKSActivityComponent_WeaponMastery_Milestone* GetWeaponMilestoneComponent();
	bool GetTierDataForProgress(int Progress, struct FActivityTierStructure* TierData);
	class UKSActivityComponent_MercMastery* GetMercMasteryComponent();
	class UKSActivityComponent_LoginReward* GetLoginRewardComponent();
	class UKSActivityComponent_Job* GetJobComponent();
	class UKSActivityInstance* GetInstanceForPlayer(class UObject* WorldContextObject, class AKSPlayerController* Player);
	struct FText GetFormattedDescriptionForTier(const struct FActivityTier& ActivityTier);
	class UKSActivityComponent_Challenge* GetChallengeComponent();
	class UKSActivityComponent_BattlePass* GetBattlePassComponent();
	class UKSActivityComponent_Achievement* GetAchievementComponent();
	bool CanSubtractProgress(int64_t PlayerId, class UWorld* World);
	bool CanAddProgress(int64_t PlayerId, class UWorld* World);
};

// Class Killstreak.KSActivityBehavior
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UKSActivityBehavior : public UObject
{
public:
	TWeakObjectPtr<class AKSPlayerController>          PlayerController;                                          // 0x0028(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UKSActivityInstance>          WeakActivityInstance;                                      // 0x0030(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(827);
		return ptr;
	}



	void HandleLostPlayerController();
	void HandleBehaviorInitialized();
	class AKSGameState* GetKSGameState();
};

// Class Killstreak.KSActivityComponent
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UKSActivityComponent : public UDataAsset
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(828);
		return ptr;
	}



};

// Class Killstreak.KSActivityComponent_Achievement
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UKSActivityComponent_Achievement : public UKSActivityComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(829);
		return ptr;
	}



};

// Class Killstreak.KSActivityComponent_BattlePass
// 0x0098 (FullSize[0x00C8] - InheritedSize[0x0030])
class UKSActivityComponent_BattlePass : public UKSActivityComponent
{
public:
	Killstreak_EKSBattlePassProgressionActivityType    ReferenceType;                                             // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6Z1Z[0x3];                                     // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTag                                SeasonTag;                                                 // 0x0034(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UDEH[0x4];                                     // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       SeasonalChallengesDescription;                             // 0x0040(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int64_t                                            PremiumPassItemId;                                         // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64_t                                            PremiumRewardVendorId;                                     // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64_t                                            LevelPurchaseLootId;                                       // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64_t                                            InstantUnlockRewardVendorId;                               // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      FreeIcon[0x28];                                            // 0x0078(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      PremiumIcon[0x28];                                         // 0x00A0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(830);
		return ptr;
	}



};

// Class Killstreak.KSActivityComponent_Challenge
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityComponent_Challenge : public UKSActivityComponent
{
public:
	bool                                               DailyChallenge;                                            // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZNF1[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(831);
		return ptr;
	}



	bool IsDailyChallenge();
	int GetRerollLootId(class UKSActivity* OwningActivity);
};

// Class Killstreak.KSActivityComponent_Job
// 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
class UKSActivityComponent_Job : public UKSActivityComponent
{
public:
	unsigned char                                      JobItem[0x28];                                             // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(832);
		return ptr;
	}



	void LoadJobItem();
	class UKSJobItem* GetJobItem();
};

// Class Killstreak.KSActivityComponent_LoginReward
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UKSActivityComponent_LoginReward : public UKSActivityComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(833);
		return ptr;
	}



	bool CanGrabNewLoginReward();
	void AttemptClaimLoginReward();
};

// Class Killstreak.KSActivityComponent_MercMastery
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class UKSActivityComponent_MercMastery : public UKSActivityComponent
{
public:
	struct FGameplayTag                                MercMasteryStatTag;                                        // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Icon[0x28];                                                // 0x0038(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	struct FText                                       DisplayName;                                               // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(834);
		return ptr;
	}



};

// Class Killstreak.KSActivityComponent_WeaponMastery_Milestone
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityComponent_WeaponMastery_Milestone : public UKSActivityComponent
{
public:
	int                                                MilestoneTier;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_17WN[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(835);
		return ptr;
	}



};

// Class Killstreak.KSActivityInstance
// 0x0258 (FullSize[0x0280] - InheritedSize[0x0028])
class UKSActivityInstance : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnProgressIncremented;                                     // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnProgressTierReached;                                     // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnProgressCompleted;                                       // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnProgressInitialized;                                     // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UKSEventTracker*                             TrackerInstance;                                           // 0x0068(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKSActivityBehavior*>                 BehaviorInstances;                                         // 0x0070(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ProgressCount;                                             // 0x0080(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               HasProgressBeenInitialized;                                // 0x0084(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D06V[0x3];                                     // 0x0085(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FActivityTier>                       ActivityTiers;                                             // 0x0088(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9JIP[0x20];                                    // 0x0098(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AKSPlayerController>          PlayerController;                                          // 0x00B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSActivity*                                 Activity;                                                  // 0x00C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UKSActivityManagerBase>       ActivityManager;                                           // 0x00C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsInitialized;                                            // 0x00D0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_869E[0x3];                                     // 0x00D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                InitialProgress;                                           // 0x00D4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               InitialUnlocked;                                           // 0x00D8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NO96[0x3];                                     // 0x00D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CurrentProgressEarned;                                     // 0x00DC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                TotalProgressEarned;                                       // 0x00E0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ShouldSetProgress;                                         // 0x00E4(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZZD7[0x3];                                     // 0x00E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FString, double>                       PlatformProgressPerAchievement;                            // 0x00E8(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_ERewardSource, float>              TotalProgressEarnedBySource;                               // 0x0138(0x0050) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	TMap<struct FString, float>                        TotalProgressEarnedByEvent;                                // 0x0188(0x0050) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	TMap<struct FString, float>                        TotalProgressEarnedByBooster;                              // 0x01D8(0x0050) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	TMap<struct FString, float>                        ExtraData;                                                 // 0x0228(0x0050) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3A7A[0x8];                                     // 0x0278(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(836);
		return ptr;
	}



	void UpdateActivityTiers();
	void SyncProgressToInventoryCount();
	bool SetProgress(int Count);
	bool ResetProgress();
	void ResetAccumulatedProgress();
	void RerollActivity();
	void PromptRerollActivity(class APUMG_HUD* HUD);
	void ProcessExtraData();
	void OnEventTrackerTriggered(int Count);
	bool IsUnlocked();
	bool IsTriggerConditionMet();
	bool IsFinished();
	bool IsActive();
	bool IncrementProgress(int Count);
	bool HasAuthority();
	int GetTotalProgressForCurrentTier();
	int GetTotalProgressEarned();
	void GetTiersForXpRange(TArray<struct FActivityTier>* Tiers, int StartingCount, int EndingCount);
	void GetTiers(TArray<struct FActivityTier>* Tiers);
	bool GetTierDataForProgress(int Progress, struct FActivityTierStructure* TierData);
	bool GetTierCompletionTime(class UObject* WorldContextObject, const struct FActivityTier& Tier, struct FDateTime* TimeCompleted);
	struct FActivityTier GetProgressTierForSpecifiedProgressCount(int SpecifiedCount);
	struct FActivityTier GetProgressTier();
	bool GetProgressPercentageToNextTier(float* ProgressPercentage);
	bool GetProgressPercentageToMaxTier(float* ProgressPercentage);
	float GetProgressFromSource(Killstreak_ERewardSource Source);
	float GetProgressFromEvent(const struct FString& EventName);
	float GetProgressFromBooster(const struct FString& BoosterName);
	struct FText GetProgressDisplayText(Killstreak_EKSActivityProgressDisplayType DisplayType);
	int GetProgressCount();
	int64_t GetPlayerId();
	struct FActivityTier GetNextTierForSpecifiedProgressCount(int SpecifiedCount, bool RepeatFinalTier);
	struct FActivityTier GetNextTier();
	bool GetMaxTier(struct FActivityTier* MaxTier);
	struct FDateTime GetLastProgressTime();
	int GetInventoryProgressCount();
	struct FInventoryId GetInventoryId();
	bool GetInitialUnlocked();
	int GetInitialProgress();
	struct FText GetFormattedDescriptionForTier(const struct FActivityTier& ActivityTier);
	struct FText GetFormattedDescriptionForNextTier();
	float GetExtraDataEntry(const struct FString& ExtraDataKey);
	int GetDisplayProgess();
	int GetDisplayCompletionProgress();
	int GetCurrentProgressEarned();
	int GetAccumulatedProgress();
	void CreateTracker();
	bool CanRerollActivity();
};

// Class Killstreak.KSActivityInstanceManager
// 0x00A0 (FullSize[0x00C8] - InheritedSize[0x0028])
class UKSActivityInstanceManager : public UObject
{
public:
	unsigned char                                      UnknownData_GAIQ[0xA0];                                    // 0x0028(0x00A0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(837);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UKSActivityRequirement : public UDataAsset
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(839);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_Achievements
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityRequirement_Achievements : public UKSActivityRequirement
{
public:
	bool                                               RequireEnabled;                                            // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NLFE[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(840);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_ActivitySelected
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSActivityRequirement_ActivitySelected : public UKSActivityRequirement
{
public:
	TArray<int>                                        SelectedStatusItemIds;                                     // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(841);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_AiPvp
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityRequirement_AiPvp : public UKSActivityRequirement
{
public:
	bool                                               RequireEnabled;                                            // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BG4K[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(842);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_BattlePass
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UKSActivityRequirement_BattlePass : public UKSActivityRequirement
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(843);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_Booster
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityRequirement_Booster : public UKSActivityRequirement
{
public:
	int                                                RequiredActiveBoosterId;                                   // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2M97[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(844);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_CustomMatch
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityRequirement_CustomMatch : public UKSActivityRequirement
{
public:
	bool                                               RequireEnabled;                                            // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NJOA[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(845);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_DailyChallenge
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UKSActivityRequirement_DailyChallenge : public UKSActivityRequirement
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(846);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_Event
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSActivityRequirement_Event : public UKSActivityRequirement
{
public:
	struct FString                                     RequiredEventName;                                         // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(847);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_Experiment
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UKSActivityRequirement_Experiment : public UKSActivityRequirement
{
public:
	struct FString                                     ExperimentName;                                            // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               RequireEnabled;                                            // 0x0040(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FZOB[0x7];                                     // 0x0041(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(848);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_GameMode
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSActivityRequirement_GameMode : public UKSActivityRequirement
{
public:
	struct FString                                     RequiredGameMode;                                          // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(849);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_GameModeTag
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSActivityRequirement_GameModeTag : public UKSActivityRequirement
{
public:
	struct FGameplayTag                                RequiredGameModeTag;                                       // 0x0030(0x0008) (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               TrueIfMatches;                                             // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_J7H0[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(850);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_Item
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityRequirement_Item : public UKSActivityRequirement
{
public:
	int                                                RequiredOwnedItemId;                                       // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                RequiredItemQuantity;                                      // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(851);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_Job
// 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
class UKSActivityRequirement_Job : public UKSActivityRequirement
{
public:
	unsigned char                                      RequiredJob[0x28];                                         // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(852);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_JobTag
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityRequirement_JobTag : public UKSActivityRequirement
{
public:
	struct FGameplayTag                                RequiredJobTag;                                            // 0x0030(0x0008) (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(853);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_Map
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSActivityRequirement_Map : public UKSActivityRequirement
{
public:
	struct FString                                     RequiredMap;                                               // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(854);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_MapTag
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityRequirement_MapTag : public UKSActivityRequirement
{
public:
	struct FGameplayTag                                RequiredMapTag;                                            // 0x0030(0x0008) (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(855);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_MiniBattlePass
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UKSActivityRequirement_MiniBattlePass : public UKSActivityRequirement
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(856);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_MultiGameMode
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSActivityRequirement_MultiGameMode : public UKSActivityRequirement
{
public:
	TArray<struct FString>                             RequiredGameModes;                                         // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(857);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_MultiItem
// 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
class UKSActivityRequirement_MultiItem : public UKSActivityRequirement
{
public:
	int                                                RequiredEntries;                                           // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_27AM[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<int, int>                                     RequiredOwnedItems;                                        // 0x0038(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(858);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_Queue
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityRequirement_Queue : public UKSActivityRequirement
{
public:
	int                                                RequiredActiveQueueId;                                     // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_H5PP[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(859);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_Ranked
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityRequirement_Ranked : public UKSActivityRequirement
{
public:
	bool                                               RequireEnabled;                                            // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FBC6[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(860);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_RankedSeason
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSActivityRequirement_RankedSeason : public UKSActivityRequirement
{
public:
	struct FString                                     RequiredRankedSeason;                                      // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(861);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_Rewards
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityRequirement_Rewards : public UKSActivityRequirement
{
public:
	bool                                               RequireEnabled;                                            // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_654V[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(862);
		return ptr;
	}



};

// Class Killstreak.KSActivityRequirement_Sequence
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityRequirement_Sequence : public UKSActivityRequirement
{
public:
	struct FName                                       ActivitySequenceName;                                      // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(863);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UKSActivityRewardCondition : public UDataAsset
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(864);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_AffectedByGadgetOrMod
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UKSActivityRewardCondition_AffectedByGadgetOrMod : public UKSActivityRewardCondition
{
public:
	bool                                               RequireAffected;                                           // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XU31[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      ModsToIgnore[0x10];                                        // 0x0031(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(865);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_Affiliation
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityRewardCondition_Affiliation : public UKSActivityRewardCondition
{
public:
	struct FKSAffiliationFilter                        AffiliationFilter;                                         // 0x0030(0x0004) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_D9QP[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(866);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_AimModeUsed
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSActivityRewardCondition_AimModeUsed : public UKSActivityRewardCondition
{
public:
	TArray<Killstreak_EKSCharacterAimMode>             MatchingAimModes;                                          // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(867);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_DamageType
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSActivityRewardCondition_DamageType : public UKSActivityRewardCondition
{
public:
	TArray<class UClass*>                              MatchingDamageTypes;                                       // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(868);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_Deserter
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityRewardCondition_Deserter : public UKSActivityRewardCondition
{
public:
	bool                                               bAllowProgressionIfDeserter;                               // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bAllowRegressionIfDeserter;                                // 0x0031(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DTC3[0x6];                                     // 0x0032(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(869);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_Distance
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityRewardCondition_Distance : public UKSActivityRewardCondition
{
public:
	float                                              MaxDistance;                                               // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MinDistance;                                               // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(870);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_Down
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityRewardCondition_Down : public UKSActivityRewardCondition
{
public:
	bool                                               IsDown;                                                    // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WYXN[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(871);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_Elimination
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityRewardCondition_Elimination : public UKSActivityRewardCondition
{
public:
	bool                                               IsElimination;                                             // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_J35R[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(872);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_Headshot
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityRewardCondition_Headshot : public UKSActivityRewardCondition
{
public:
	bool                                               IsHeadshot;                                                // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F5Y4[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(873);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_HealthPercent
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSActivityRewardCondition_HealthPercent : public UKSActivityRewardCondition
{
public:
	float                                              MinHealthPercent;                                          // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxHealthPercent;                                          // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               CheckInstigator;                                           // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               CheckTarget;                                               // 0x0039(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9JWM[0x6];                                     // 0x003A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(874);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_ItemPickedUp
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSActivityRewardCondition_ItemPickedUp : public UKSActivityRewardCondition
{
public:
	unsigned char                                      MatchingItemTypes[0x10];                                   // 0x0030(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(875);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_ItemPurchased
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSActivityRewardCondition_ItemPurchased : public UKSActivityRewardCondition
{
public:
	unsigned char                                      MatchingItems[0x10];                                       // 0x0030(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(876);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_ItemTagPurchased
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSActivityRewardCondition_ItemTagPurchased : public UKSActivityRewardCondition
{
public:
	TArray<struct FGameplayTag>                        MatchingItemTags;                                          // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(877);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_Operator_And
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSActivityRewardCondition_Operator_And : public UKSActivityRewardCondition
{
public:
	TArray<class UKSActivityRewardCondition*>          SubConditions;                                             // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(878);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_Operator_Or
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSActivityRewardCondition_Operator_Or : public UKSActivityRewardCondition
{
public:
	TArray<class UKSActivityRewardCondition*>          SubConditions;                                             // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(879);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_PreviousHit
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UKSActivityRewardCondition_PreviousHit : public UKSActivityRewardCondition
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(880);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_Revive
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityRewardCondition_Revive : public UKSActivityRewardCondition
{
public:
	bool                                               IsBeingRevived;                                            // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_902N[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(881);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_Sequence
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityRewardCondition_Sequence : public UKSActivityRewardCondition
{
public:
	struct FName                                       ActivitySequenceName;                                      // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(882);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_TimeSinceDamagedByVictim
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSActivityRewardCondition_TimeSinceDamagedByVictim : public UKSActivityRewardCondition
{
public:
	float                                              MinSecondsSinceLastDamage;                                 // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxSecondsSinceLastDamage;                                 // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               SucceedIfNeverDamaged;                                     // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4B6E[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(883);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_TimeSinceFireStarted
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityRewardCondition_TimeSinceFireStarted : public UKSActivityRewardCondition
{
public:
	float                                              MinSecondsSinceFireStarted;                                // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxSecondsSinceFireStarted;                                // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(884);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_TimeSinceHeadshot
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSActivityRewardCondition_TimeSinceHeadshot : public UKSActivityRewardCondition
{
public:
	float                                              MinSecondsSinceLastHeadshot;                               // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxSecondsSinceLastHeadshot;                               // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               SucceedIfNeverHeadshot;                                    // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Q7T4[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(885);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_TimeSinceReload
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSActivityRewardCondition_TimeSinceReload : public UKSActivityRewardCondition
{
public:
	float                                              MinSecondsSinceLastReload;                                 // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxSecondsSinceLastReload;                                 // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               SucceedIfNeverReloaded;                                    // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_C9YZ[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(886);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_WeaponEquippedByVictim
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSActivityRewardCondition_WeaponEquippedByVictim : public UKSActivityRewardCondition
{
public:
	unsigned char                                      MatchingWeapons[0x10];                                     // 0x0030(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(887);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_WeaponTagEquippedByVictim
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSActivityRewardCondition_WeaponTagEquippedByVictim : public UKSActivityRewardCondition
{
public:
	TArray<struct FGameplayTag>                        MatchingWeaponTags;                                        // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(888);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_WeaponTagUsed
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSActivityRewardCondition_WeaponTagUsed : public UKSActivityRewardCondition
{
public:
	TArray<struct FGameplayTag>                        MatchingWeaponTags;                                        // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(889);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_WeaponUsed
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSActivityRewardCondition_WeaponUsed : public UKSActivityRewardCondition
{
public:
	unsigned char                                      MatchingWeapons[0x10];                                     // 0x0030(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(890);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_WeaponUsed_OriginalAffiliation
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityRewardCondition_WeaponUsed_OriginalAffiliation : public UKSActivityRewardCondition
{
public:
	struct FKSAffiliationFilter                        AffiliationFilter;                                         // 0x0030(0x0004) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AVSS[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(891);
		return ptr;
	}



};

// Class Killstreak.KSActivityRewardCondition_Ziplining
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSActivityRewardCondition_Ziplining : public UKSActivityRewardCondition
{
public:
	bool                                               IsZipLining;                                               // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               CheckInstigator;                                           // 0x0031(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               CheckTarget;                                               // 0x0032(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RT97[0x5];                                     // 0x0033(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(892);
		return ptr;
	}



};

// Class Killstreak.KSActivitySequenceManager
// 0x0008 (FullSize[0x0218] - InheritedSize[0x0210])
class UKSActivitySequenceManager : public UKSActivityManagerBase
{
public:
	unsigned char                                      UnknownData_K11H[0x8];                                     // 0x0210(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(893);
		return ptr;
	}



	bool IsActivitySequenceUnlocked(const struct FActivitySequenceRow& ActivitySequence, class AKSPlayerController* PlayerController);
	bool IsActivitySequenceComplete(const struct FActivitySequenceRow& ActivitySequence, class AKSPlayerController* PlayerController);
	bool IsActivityFirstInSequence(class UKSActivity* Activity, const struct FName& SequenceRowName);
	bool GetPrecedingActivityInSequence(class UKSActivity* Activity, const struct FName& SequenceRowName, class UKSActivity** OutPrecedingActivity);
	bool GetFirstIncompleteInSequence(const struct FActivitySequenceRow& ActivitySequence, class AKSPlayerController* PlayerController, class UKSActivityInstance** IncompleteActivityInstance);
	int GetCompletedCountInSequence(const struct FActivitySequenceRow& ActivitySequence, class AKSPlayerController* PlayerController);
	bool GetActivitySequence(const struct FName& SequenceRowName, struct FActivitySequenceRow* OutActivitySequenceRow);
};

// Class Killstreak.KSActivityTestManager
// 0x0028 (FullSize[0x0248] - InheritedSize[0x0220])
class AKSActivityTestManager : public AActor
{
public:
	TArray<class UKSActivity*>                         Activities;                                                // 0x0220(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bInitializeOnBeginPlay;                                    // 0x0230(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZFWJ[0x7];                                     // 0x0231(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UKSActivityInstance*>                 ActivityInstances;                                         // 0x0238(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(894);
		return ptr;
	}



	void DirectlySetupActivityTrackingForPlayer(class AKSPlayerController* PlayerController);
};

// Class Killstreak.KSLagCompensatedActor
// 0x0040 (FullSize[0x0260] - InheritedSize[0x0220])
class AKSLagCompensatedActor : public AActor
{
public:
	class AKSLagCompensatedActor*                      RealActor;                                                 // 0x0220(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSLagCompensatedActor*                      FakeActor;                                                 // 0x0228(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PredictedSpawnTimeoutTime;                                 // 0x0230(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDestroyFakeOnYieldToReal;                                 // 0x0234(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_51U4[0x3];                                     // 0x0235(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                DefaultTeamNum;                                            // 0x0238(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NZKC[0x4];                                     // 0x023C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSerializedMctsNetId                        InstigatorId;                                              // 0x0240(0x0008) (Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint64_t                                           LagCompActorID;                                            // 0x0248(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_B672[0x10];                                    // 0x0250(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(895);
		return ptr;
	}



	void YieldToRealActor();
	void TryToDestroy();
	void SetLagCompActorIDFromWeapon(class AKSWeapon* SpawningWeapon);
	void SetLagCompActorIDFromParentProjectile(class AKSProjectile* ParentProjectile, int Index);
	void SetLagCompActorIDFromParentAgent(class AKSAgentBase* ParentAgent, int Index);
	void SetLagCompActorIDFromModInstance(class UKSPlayerModInstance* SpawningModInst);
	void RealActorTakeOver();
	void RealActorDestroyed(class AActor* Real);
	void OnTakeOverAsRealActor();
	void OnRep_LagCompActorID();
	void OnRealActorSpawn(class AKSLagCompensatedActor* Real);
	void OnPlayerStateChanged(class APlayerState* InPlayerState);
	void OnPlayerSpawned(class AKSCharacterBase* InCharacter);
	bool IsClientPredictedActor();
	bool IsActiveRealActor();
	void InitializeRealActor();
	void InitializeFakeActor();
	void FakeDestroyCleanup();
};

// Class Killstreak.KSAgentBase
// 0x00A8 (FullSize[0x0308] - InheritedSize[0x0260])
class AKSAgentBase : public AKSLagCompensatedActor
{
public:
	unsigned char                                      UnknownData_28LP[0x8];                                     // 0x0260(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnAgentRefund;                                             // 0x0268(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               BeginMissionOnPlay;                                        // 0x0278(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1ZAN[0x7];                                     // 0x0279(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UInterpToMovementComponent*                  MovementComponent;                                         // 0x0280(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                               CollisionBox;                                              // 0x0288(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AController>                  OwningPlayer;                                              // 0x0290(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkinnableMergedMeshComponent*               MeshComponent;                                             // 0x0298(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMultiSkinObject*                            SkinObject;                                                // 0x02A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               ApparelObjectsToListenTo;                                  // 0x02A8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               FullKeywordList;                                           // 0x02B8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxHealth;                                                 // 0x02C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EAgentRefundMethod                      RefundMethod;                                              // 0x02CC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WCPB[0x3];                                     // 0x02CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponAsset*                              AssociatedWeaponAsset;                                     // 0x02D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentHealth;                                             // 0x02D8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UCV3[0x4];                                     // 0x02DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnHealthUpdate;                                            // 0x02E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAgentMissionBegin;                                       // 0x02F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int                                                OriginalOwnerId;                                           // 0x0300(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HXGK[0x4];                                     // 0x0304(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(896);
		return ptr;
	}



	void RefundAgentAsset();
	void OnRep_CurrentHealth();
	void OnOwnerControlTransferred(class AKSPlayerState* OldPlayerState, class AKSPlayerState* NewPlayerState);
	void OnMissionBegin();
	void MovementPlaybackStop(const struct FHitResult& ImpactResult, float Time);
	bool IsOwnerLocal();
	class AKSPlayerState* GetPlayerStateOwner();
	class AKSCharacter* GetCharacterOwner();
	class UKSWeaponAsset* GetAssociatedWeaponAsset();
	void BroadcastMissionBegin();
};

// Class Killstreak.KSAgent_Aimed
// 0x0168 (FullSize[0x0470] - InheritedSize[0x0308])
class AKSAgent_Aimed : public AKSAgentBase
{
public:
	struct FScriptMulticastDelegate                    OnAgentStartFire;                                          // 0x0308(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bDisplayAimTargeter;                                       // 0x0318(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WDAZ[0x7];                                     // 0x0319(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      AimTargeterWidget[0x28];                                   // 0x0319(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	struct FAimData                                    CachedAim;                                                 // 0x0348(0x0050) (Net, Transient, Protected, NativeAccessSpecifierProtected)
	class UKSWeaponAsset*                              WeaponAsset;                                               // 0x0398(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSWeaponAsset_WithProjectile*               CachedProjectileAsset;                                     // 0x03A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                                StateTransitionHandle;                                     // 0x03A8(0x0008) (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ExpectedTransitionEndTime;                                 // 0x03B0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CurrentAmmo;                                               // 0x03B4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CurrentBurstCount;                                         // 0x03B8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EWeaponStateNew                         FiringState;                                               // 0x03BC(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_T5EL[0x3];                                     // 0x03BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FAgentStateChangeList                       ReplicatedStateChanges;                                    // 0x03C0(0x0088) (Net, Transient, Protected, NativeAccessSpecifierProtected)
	int                                                NextShotId;                                                // 0x0448(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     TargeterLocation;                                          // 0x044C(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ProjectileSimFrequency;                                    // 0x0458(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxSimTime;                                                // 0x045C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       CollisionProfileName;                                      // 0x0460(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P9UF[0x8];                                     // 0x0468(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(897);
		return ptr;
	}



	void StartPreFire();
	void StartPostFire();
	void StartIdle();
	void StartFire();
	void StartCooldown();
	void StartBuildup();
	bool ShouldShowTargeter();
	void SetWeaponAsset(class UKSWeaponAsset* InAsset);
	void SetCachedAim(const struct FAimData& NewAim);
	void RefillAmmo();
	void OnRep_WeaponAsset();
	void OnFiringStateChanged(Killstreak_EWeaponStateNew NewState);
	void OnFiringComplete();
	bool IsFiring();
	struct FVector GetWorldTargetingLocation();
	void EndPostFire();
	void ClearCachedAim();
	bool BlueprintWantsToKeepFiring();
	class AKSProjectile* AgentFire(const struct FAimData& AimData);
};

// Class Killstreak.KSAgent_RevealDrone
// 0x00A8 (FullSize[0x03B0] - InheritedSize[0x0308])
class AKSAgent_RevealDrone : public AKSAgentBase
{
public:
	float                                              MaxFlightSpeed;                                            // 0x0308(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DistanceToFly;                                             // 0x030C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeBetweenPings;                                          // 0x0310(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RevealPeriodDuration;                                      // 0x0314(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPGame_ReplicatedTimer                      ReplicatedRevealTimer;                                     // 0x0318(0x0038) (Edit, Net, DisableEditOnTemplate, EditConst, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              UpdateReplicatedTimerPeriod;                               // 0x0350(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAppliesScrambleEffectToEnemies;                           // 0x0354(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JZUE[0x43];                                    // 0x0355(0x0043) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AKSCharacter*>                        CurrentSweepFoundChars;                                    // 0x0398(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8DFJ[0x8];                                     // 0x03A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(898);
		return ptr;
	}



	void UpdateReplicatedTimer();
	void StartNextReveal();
	void SetPlayerOwner(class AKSCharacter* InOwner);
	void ScrambleEnemies();
	void RevealOpposingTeam(class AKSPlayerController* PlayerController, float Threshold);
	void Ping(int Team, float Threshold, float SweepSpeed, float SweepTimeRemaining);
	void GetRevealPeriodDuration(float* Duration, float* RemainingTime);
	void EndRevealPeriod();
};

// Class Killstreak.KSAgent_RevivalDrone
// 0x00D8 (FullSize[0x03E0] - InheritedSize[0x0308])
class AKSAgent_RevivalDrone : public AKSAgentBase
{
public:
	unsigned char                                      UnknownData_PQ2Q[0x68];                                    // 0x0308(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnArrive;                                                  // 0x0370(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              MaxFlightSpeed;                                            // 0x0380(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InvisibleMovementTime;                                     // 0x0384(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReviveTime;                                                // 0x0388(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReviveHealth;                                              // 0x038C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDroneVisibility;                                          // 0x0390(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDroneVulnerability;                                       // 0x0391(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bOngoingReviveEffectsActive;                               // 0x0392(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5EFJ[0x1];                                     // 0x0393(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AKSCharacter>                 TargetCharacter;                                           // 0x0394(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EReviveDroneState                       MovementStage;                                             // 0x039C(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EReviveDroneFlightPath                  FlightPath;                                                // 0x039D(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JG3Y[0x2];                                     // 0x039E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PreferredHoverHeight;                                      // 0x03A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TransitHeight;                                             // 0x03A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HoverCorrectionTime;                                       // 0x03A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DepartureHeight;                                           // 0x03AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseCustomReviveTime;                                      // 0x03B0(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IIV4[0x3];                                     // 0x03B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CustomReviveTime;                                          // 0x03B4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bInheritReviveTimeMods;                                    // 0x03B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               DrawOutline;                                               // 0x03B9(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      OutlineStencilColor;                                       // 0x03BA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0R8Q[0x5];                                     // 0x03BB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSPlayerMod*                                ApplyOnReleaseMod;                                         // 0x03C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0YZ2[0x8];                                     // 0x03C8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bDrawEnemyDroneOutline;                                    // 0x03D0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GL8Z[0x7];                                     // 0x03D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSItemStimuliSourceComponent*               StimuliSourceComponent;                                    // 0x03D8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(899);
		return ptr;
	}



	void TargetStartRevive(class AKSCharacter* Reviver, class AKSCharacter* Revivee, float TimeToRevive, bool Remote);
	void StartReviveEffects();
	void SetOutlineVisibility(bool UseOutline);
	void SetFriendlyOutlineVisibility(bool UseOutline);
	void OnTargetKilled(class AKSCharacterFoundation* Killer, class AKSCharacterFoundation* Killed);
	void OnReviveEnd(class AKSCharacter* RevivingCharacter, bool SuccessfulRevive);
	void OnRep_OngoingReviveEffectsActive();
	void OnRep_DroneVulnerability();
	void OnRep_DroneVisibility();
	float GetReviveProgress();
	Killstreak_EReviveDroneState GetMovementStage();
	Killstreak_EReviveDroneFlightPath GetFlightPath();
	void EventStartReviveEffects();
	void EventOngoingReviveEffectsStarted();
	void EventEndReviveEffects();
	void BroadcastMovementState(Killstreak_EReviveDroneState State);
	void BroadcastEndReviveEffects();
	void BroadcastDroneVulnerability(bool Vulnerable);
	void BroadcastDroneVisibility(bool Visible);
	void BeginRevive();
	void ApplyDroneVulnerabilityInternal();
	void ApplyDroneVisibilityInternal();
	void ActivateDroneOngoingEffects();
};

// Class Killstreak.KSAIActorCollection
// 0x0030 (FullSize[0x00E0] - InheritedSize[0x00B0])
class UKSAIActorCollection : public UActorComponent
{
public:
	TArray<class AKSDropLocation*>                     DropLocations;                                             // 0x00B0(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                                  BotNameTable;                                              // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QBZA[0x18];                                    // 0x00C8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(900);
		return ptr;
	}



};

// Class Killstreak.KSAIActorCollection_Extraction
// 0x0010 (FullSize[0x00F0] - InheritedSize[0x00E0])
class UKSAIActorCollection_Extraction : public UKSAIActorCollection
{
public:
	TArray<class AKSDefensePoint*>                     DefensePoints;                                             // 0x00E0(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(901);
		return ptr;
	}



};

// Class Killstreak.KSAIController
// 0x02C8 (FullSize[0x05F0] - InheritedSize[0x0328])
class AKSAIController : public AAIController
{
public:
	unsigned char                                      UnknownData_WII1[0x50];                                    // 0x0328(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSCharacterBase*                            KSCharacter;                                               // 0x0378(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSCharacter*                                CachedKSCharacter;                                         // 0x0380(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_F02E[0x10];                                    // 0x0388(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bAutoManageWayPointSet;                                    // 0x0398(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VHWF[0xF];                                     // 0x0399(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSWayPointSet*                              WayPointSet;                                               // 0x03A8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldReverseWayPointSetDirection;                        // 0x03B0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3QJR[0x17];                                    // 0x03B1(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSPlayerShop*                               Shop;                                                      // 0x03C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8CNW[0x30];                                    // 0x03D0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      StartPointToSpawnAt;                                       // 0x0400(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      CharacterToSpawn;                                          // 0x0408(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBehaviorTree*                               TreeToRun;                                                 // 0x0410(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSBTDifficulty*                             InitialDifficulty;                                         // 0x0418(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2MCS[0x8];                                     // 0x0420(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDataTable*                                  DifficultyTable;                                           // 0x0428(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKSBTDifficultyConfig                       SpawnDifficultyConfig;                                     // 0x0430(0x0078) (Transient, Protected, NativeAccessSpecifierProtected)
	class UDataTable*                                  ObjectivePriorityTable;                                    // 0x04A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                                  ItemPriorityTable;                                         // 0x04B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                                  AbilityTable;                                              // 0x04B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKSInitialLoadout                           InitialLoadout;                                            // 0x04C0(0x0010) (Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5RK5[0x28];                                    // 0x04D0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSAIPerceptionComponent*                    KSAIPerception;                                            // 0x04F8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BL0S[0x28];                                    // 0x0500(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      ActorForFocalOffset;                                       // 0x0528(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ABJU[0x10];                                    // 0x0530(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CrowdCollisionQueryRange;                                  // 0x0540(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CrowdPathOptimizationRange;                                // 0x0544(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CrowdAvoidanceRangeMultiplier;                             // 0x0548(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CrowdSeparationWeight;                                     // 0x054C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bStartWithCrowdFollowing;                                  // 0x0550(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XMTE[0x3];                                     // 0x0551(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                TeamNumber;                                                // 0x0554(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OZ3H[0x30];                                    // 0x0558(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagQuery                           AllowedJobQuery;                                           // 0x0588(0x0048) (Transient, Protected, NativeAccessSpecifierProtected)
	class UKSAIItemPriorityComponent*                  ItemPriorityComponent;                                     // 0x05D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSAIItemPriorityComponent*                  TempItemPriorityComponent;                                 // 0x05D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSAIObjectivePriorityComponent*             ObjectivePriorityComponent;                                // 0x05E0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSAIDifficultyComponent*                    DifficultyComponent;                                       // 0x05E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(903);
		return ptr;
	}



	void SetNavigationInteractTarget();
	void OnPawnKilled(class AKSCharacterFoundation* KillerCharacter, class AKSCharacterFoundation* KilledCharacter);
	void OnCosmeticLoadoutComplete();
	void HandleTeamSidesFlipped();
	void HandleJobChanged();
	class AKSCharacter* GetOwnedCharacter();
	class AActor* GetNavigationInteractTarget();
	class UKSAIPerceptionComponent* GetKSPerceptionComponent();
	void ClearNavigationInteractTarget();
};

// Class Killstreak.KSAIDifficultyComponent
// 0x0120 (FullSize[0x01D0] - InheritedSize[0x00B0])
class UKSAIDifficultyComponent : public UActorComponent
{
public:
	class UKSBTDifficulty*                             Difficulty;                                                // 0x00B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                                  DifficultyTable;                                           // 0x00B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               AllowDynamicDifficulty;                                    // 0x00C0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RTGM[0x7];                                     // 0x00C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSBTDifficultyConfig                       DifficultySpawnConfig;                                     // 0x00C8(0x0078) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              AccuracyMultiplierStandard;                                // 0x0140(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AccuracyMultiplierThrownMelee;                             // 0x0144(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AccuracyMultiplierThrownGrenade;                           // 0x0148(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AccuracyMultiplierWhenBlinded;                             // 0x014C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AccuracyMultiplierWhenCrosshairHidden;                     // 0x0150(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NewTargetAccuracyMultiplier;                               // 0x0154(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NewTargetTime;                                             // 0x0158(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AttackDelayClipPercentMin;                                 // 0x015C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AttackDelayClipPercentMax;                                 // 0x0160(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AttackDelay;                                               // 0x0164(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DamageDealtMultiplier;                                     // 0x0168(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HeadshotDamageDealtMultiplier;                             // 0x016C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DamageTakenMultiplier;                                     // 0x0170(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HeadshotDamageTakenMultiplier;                             // 0x0174(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AimForHeadshotProbability;                                 // 0x0178(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DodgeRollProbability;                                      // 0x017C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              StrafeProbability;                                         // 0x0180(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ThrowGrenadeProbability;                                   // 0x0184(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ThrowMeleeProbability;                                     // 0x0188(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PerceptionStrengthMin;                                     // 0x018C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PerceptionStrengthMax;                                     // 0x0190(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PerceptionStrength;                                        // 0x0194(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKSBTAction*>                         AllowedActions;                                            // 0x0198(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKSBTAction*>                         DisallowedActions;                                         // 0x01A8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpeedMultiplier;                                           // 0x01B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AKSWeapon>                    LastFiredWeapon;                                           // 0x01BC(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                AttacksSinceLastAttackDelay;                               // 0x01C4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                AttacksNeededToTriggerAttackDelay;                         // 0x01C8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NRMY[0x4];                                     // 0x01CC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(904);
		return ptr;
	}



	class UKSBTDifficulty* GetCurrentDifficulty();
	void ChangeDifficulty(class UKSBTDifficulty* DifficultyIn);
};

// Class Killstreak.KSAIItemPriorityComponent
// 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
class UKSAIItemPriorityComponent : public UActorComponent
{
public:
	TArray<struct FKSBTItemPriorityTableRow>           ItemPriorities;                                            // 0x00B0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(905);
		return ptr;
	}



	void InsertPriority(const struct FKSBTItemPriorityTableRow& ItemPriority);
	void InsertPriorities(class UDataTable* ItemPriorityTable);
	float GetWeightByName(const struct FString& ItemName);
	float GetWeight();
	float GetShopPurchaseWeightByName(const struct FString& ItemName);
	float GetShopPurchaseWeight();
	float GetShopPriorityGroupByName(const struct FString& ItemName);
	float GetShopPriorityGroup();
	float GetPriorityMultiplierByName(const struct FString& ItemName);
	float GetPriorityMultiplier();
	void ClearPriorities();
};

// Class Killstreak.KSAimAssistActor
// 0x0090 (FullSize[0x02B0] - InheritedSize[0x0220])
class AKSAimAssistActor : public AActor
{
public:
	unsigned char                                      UnknownData_ML7M[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                TeamNumOverride;                                           // 0x0230(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GF26[0x4];                                     // 0x0234(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSAimAssistAnchorComponent*                 AimAssistAnchor;                                           // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2DUM[0x8];                                     // 0x0240(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, Killstreak_EHitLocationType>    BoneToHitLocationTypeMap;                                  // 0x0248(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                               bCanBeKilled;                                              // 0x0298(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CVH9[0x3];                                     // 0x0299(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxHealth;                                                 // 0x029C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLocallyKilled;                                            // 0x02A0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PHS1[0x3];                                     // 0x02A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FAimAssistActorHealthInfo                   HealthInfo;                                                // 0x02A4(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PQV5[0x4];                                     // 0x02AC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(906);
		return ptr;
	}



	void ResetHealth();
	void OnRep_HealthInfo();
	void OnKilled();
	float ModifyIncomingDamageTaken(float DamageAmount, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class AActor* DamagedActor);
	bool IsValidIncomingDamage(class UClass* DamageTypeClass, class AController* EventInstigator, class AActor* DamageCauser, class AActor* DamagedActor);
	struct FVector GetAAHeadLocation();
	struct FVector GetAABodyLocation();
	bool CanBeHitByWeapon(class UKSWeaponAsset* Weapon);
	bool AimAssistRightNow(class AKSPlayerController* PlayerController);
};

// Class Killstreak.KSAimAssistAnchorComponent
// 0x0010 (FullSize[0x0460] - InheritedSize[0x0450])
class UKSAimAssistAnchorComponent : public USphereComponent
{
public:
	float                                              AimAssistPriority;                                         // 0x0450(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NAH7[0xC];                                     // 0x0454(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(909);
		return ptr;
	}



};

// Class Killstreak.KSAimAssistComponent
// 0x00A0 (FullSize[0x0150] - InheritedSize[0x00B0])
class UKSAimAssistComponent : public UActorComponent
{
public:
	class AKSPlayerController*                         PlayerOwner;                                               // 0x00B0(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FRankedAimAssistTarget>              AssistTargetStack;                                         // 0x00B8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DuplicateTransient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentTargetWeightStickiness;                             // 0x00C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ProjectionSpaceStackBoundary;                              // 0x00CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseStackBoundaryFovScaling;                               // 0x00D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WJWQ[0x3];                                     // 0x00D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FovBaseline;                                               // 0x00D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 AimAssistEffectivenessCurve;                               // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSAimAssistActivationType              ActivationType;                                            // 0x00E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSAimAssistInputFlag                   FrictionAllowedInputMode;                                  // 0x00E1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSAimAssistInputFlag                   LockAllowedInputMode;                                      // 0x00E2(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSAimAssistInputFlag                   SnapAllowedInputMode;                                      // 0x00E3(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSAimAssistInputFlag                   CorrectionAllowedInputMode;                                // 0x00E4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HAVT[0x7];                                     // 0x00E5(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bAssistGadgets;                                            // 0x00EC(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAimLockUsesTargetVelocity;                                // 0x00ED(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAimLockMeshSmoothCompensation;                            // 0x00EE(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAimLockUsesOwnVelocity;                                   // 0x00EF(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bComplexAimLockDeltaRotCalculation;                        // 0x00F0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bComplexLookLocationCalculation;                           // 0x00F1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_G13L[0x2];                                     // 0x00F2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxAimLockEvaluationInterval;                              // 0x00F4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              KickbackIgnoreFactor;                                      // 0x00F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CrossAxisWeaknessPoint;                                    // 0x00FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bOldLockValid;                                             // 0x0100(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8SEQ[0x3];                                     // 0x0101(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     OldLockRelativeLocation;                                   // 0x0104(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                                    OldInputRot;                                               // 0x0110(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_01MI[0x4];                                     // 0x011C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UObject*                                     LastAimAssistTarget;                                       // 0x0120(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bLastTargetCrouching;                                      // 0x0128(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bLastSelfCrouching;                                        // 0x0129(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZZP5[0x2];                                     // 0x012A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector2D                                   LastLockAssistPosition;                                    // 0x012C(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                                   LastAnchorScreenLocation;                                  // 0x0134(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AimAssistVisibilityUpdatePeriod;                           // 0x013C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CrouchAnimTimeLength;                                      // 0x0140(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CrouchAnimTimeLengthRemaining;                             // 0x0144(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                                   ScaledScreenSpaceJukeDistanceThreshold;                    // 0x0148(0x0008) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(910);
		return ptr;
	}



	bool STATIC_GetScaledProjectionBoundsForActor(class APlayerController* Player, class AActor* InActor, struct FBox2D* OutBounds);
	float GetProjectionSpaceStackBoundary();
	class AKSPlayerController* GetPlayerOwner();
	float STATIC_GetAssistRingScreenSize(class APlayerController* Player, float ProjectionSpaceSize);
	bool STATIC_GetActorScreenBoundsForActor(class APlayerController* Player, class AActor* InActor, struct FBox2D* OutBounds);
};

// Class Killstreak.KSAimAssistDataBase
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSAimAssistDataBase : public UDataAsset
{
public:
	Killstreak_EControllerInputType                    JoyConFallback;                                            // 0x0030(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EControllerInputType                    JoyConADSFallback;                                         // 0x0031(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EControllerInputType                    TouchFallback;                                             // 0x0032(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EControllerInputType                    TouchADSFallback;                                          // 0x0033(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EControllerInputType                    PCGamepadADSFallback;                                      // 0x0034(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GWEQ[0x3];                                     // 0x0035(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(911);
		return ptr;
	}



};

// Class Killstreak.KSAimAssistTargetInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSAimAssistTargetInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(912);
		return ptr;
	}



	void UnregisterAsAimAssistTarget();
	void RegisterAsAimAssistTarget();
	struct FVector GetHeadLocation();
	struct FVector GetBodyLocation();
	class AActor* GetAsActor();
	bool CanBeConsideredForAimAssistRightNow(class AKSPlayerController* PlayerController);
};

// Class Killstreak.KSAimCorrectionData
// 0x0210 (FullSize[0x0248] - InheritedSize[0x0038])
class UKSAimCorrectionData : public UKSAimAssistDataBase
{
public:
	TMap<Killstreak_EControllerInputType, bool>        AllowAimCorrection;                                        // 0x0038(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_EControllerInputType, float>       AimCorrectionOffset;                                       // 0x0088(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_EControllerInputType, float>       AimCorrectionRange;                                        // 0x00D8(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FKSAimAssistPropertyBool>            AllowOverride;                                             // 0x0128(0x0010) (ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FKSAimAssistPropertyFloat>           OffsetOverride;                                            // 0x0138(0x0010) (ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FKSAimAssistPropertyFloat>           RangeOverride;                                             // 0x0148(0x0010) (ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<Killstreak_EControllerInputType, bool>        FullAllowAimCorrection;                                    // 0x0158(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_EControllerInputType, float>       FullAimCorrectionOffset;                                   // 0x01A8(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_EControllerInputType, float>       FullAimCorrectionRange;                                    // 0x01F8(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(913);
		return ptr;
	}



};

// Class Killstreak.KSAimFrictionData
// 0x00F0 (FullSize[0x0128] - InheritedSize[0x0038])
class UKSAimFrictionData : public UKSAimAssistDataBase
{
public:
	TMap<Killstreak_EControllerInputType, bool>        RequireInputForAimFriction;                                // 0x0038(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_EControllerInputType, class UCurveVector*> AimFrictionCurve;                                          // 0x0088(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_EControllerInputType, class UCurveFloat*> AimFrictionDistanceCurve;                                  // 0x00D8(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(914);
		return ptr;
	}



};

// Class Killstreak.KSAimLockData
// 0x0210 (FullSize[0x0248] - InheritedSize[0x0038])
class UKSAimLockData : public UKSAimAssistDataBase
{
public:
	TMap<Killstreak_EControllerInputType, bool>        RequireInputForAimLock;                                    // 0x0038(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_EControllerInputType, class UCurveVector*> AimLockCurve;                                              // 0x0088(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_EControllerInputType, class UCurveFloat*> AimLockDistanceCurve;                                      // 0x00D8(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FKSAimAssistPropertyBool>            RequireInputOverride;                                      // 0x0128(0x0010) (ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FKSAimAssistPropertyCurveVector>     LockCurveOverride;                                         // 0x0138(0x0010) (ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FKSAimAssistPropertyCurveFloat>      DistanceCurveOverride;                                     // 0x0148(0x0010) (ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<Killstreak_EControllerInputType, bool>        FullRequireInputForAimLock;                                // 0x0158(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_EControllerInputType, class UCurveVector*> FullAimLockCurve;                                          // 0x01A8(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_EControllerInputType, class UCurveFloat*> FullAimLockDistanceCurve;                                  // 0x01F8(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(915);
		return ptr;
	}



};

// Class Killstreak.KSAimMagnetismData
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UKSAimMagnetismData : public UKSAimAssistDataBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(916);
		return ptr;
	}



};

// Class Killstreak.KSAimSnapData
// 0x00F0 (FullSize[0x0128] - InheritedSize[0x0038])
class UKSAimSnapData : public UKSAimAssistDataBase
{
public:
	TMap<Killstreak_EControllerInputType, struct FRotator> MaxAimSnapRotation;                                        // 0x0038(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_EControllerInputType, class UCurveFloat*> AimSnapDistanceCurve;                                      // 0x0088(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_EControllerInputType, class UCurveVector*> AimSnapCurve;                                              // 0x00D8(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(917);
		return ptr;
	}



};

// Class Killstreak.KSAIObjectivePriorityComponent
// 0x0068 (FullSize[0x0118] - InheritedSize[0x00B0])
class UKSAIObjectivePriorityComponent : public UActorComponent
{
public:
	class UDataTable*                                  ObjectivePriorityTable;                                    // 0x00B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FName, struct FKSBTObjectivePriorityTableRow> ObjectivePriorities;                                       // 0x00B8(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FKSBTObjectivePriorityTableRow>      SortedPriorities;                                          // 0x0108(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(918);
		return ptr;
	}



	void UpdatePriority(const struct FName& Key, const struct FKSBTObjectivePriorityTableRow& ObjectivePriority, bool ShouldResort);
	void UpdatePriorities(class UDataTable* ObjectivePriorityTableIn);
	void Setup(class UDataTable* ObjectivePriorityTableIn);
	void InsertPriority(const struct FName& Key, const struct FKSBTObjectivePriorityTableRow& ObjectivePriority, bool ShouldResort);
	void InsertPriorities(class UDataTable* ObjectivePriorityTableIn);
	float GetPriority(const struct FName& Key);
	void ClearPriorities();
	void ApplyPrioritiesFromDifficulty(class UDataTable* ObjectivePriorityTableIn);
};

// Class Killstreak.KSAIPerceptionComponent
// 0x0000 (FullSize[0x0180] - InheritedSize[0x0180])
class UKSAIPerceptionComponent : public UAIPerceptionComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(920);
		return ptr;
	}



	void GetCurrentlyPerceivedStimuli(class UClass* SenseToUse, TArray<struct FKSStimulusEvent>* Stimuli);
};

// Class Killstreak.KSAISense_MapPoint
// 0x0010 (FullSize[0x0090] - InheritedSize[0x0080])
class UKSAISense_MapPoint : public UAISense
{
public:
	TArray<struct FKSAIMapPointStimulusEvent>          RegisteredEvents;                                          // 0x0080(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(922);
		return ptr;
	}



};

// Class Killstreak.KSAISense_Objective
// 0x0010 (FullSize[0x00F8] - InheritedSize[0x00E8])
class UKSAISense_Objective : public UAISense_Hearing
{
public:
	TArray<struct FAIObjectiveEvent>                   ObjectiveEvents;                                           // 0x00E8(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(924);
		return ptr;
	}



	void STATIC_ReportObjectiveEvent(class UObject* WorldContextObject, const struct FVector& ObjectiveLocation, float Loudness, class AActor* Instigator, float MaxRange, const struct FName& Tag);
};

// Class Killstreak.KSAISense_PeripheralSight
// 0x0000 (FullSize[0x0170] - InheritedSize[0x0170])
class UKSAISense_PeripheralSight : public UAISense_Sight
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(926);
		return ptr;
	}



};

// Class Killstreak.KSAISense_Player
// 0x0010 (FullSize[0x0090] - InheritedSize[0x0080])
class UKSAISense_Player : public UAISense
{
public:
	TArray<struct FKSAIPlayerStimulusEvent>            RegisteredEvents;                                          // 0x0080(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(927);
		return ptr;
	}



};

// Class Killstreak.KSAISense_Team
// 0x0010 (FullSize[0x0090] - InheritedSize[0x0080])
class UKSAISense_Team : public UAISense
{
public:
	TArray<struct FKSAITeamStimulusEvent>              RegisteredEvents;                                          // 0x0080(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(928);
		return ptr;
	}



};

// Class Killstreak.KSAISenseConfig_MapPoint
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
class UKSAISenseConfig_MapPoint : public UAISenseConfig
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(930);
		return ptr;
	}



};

// Class Killstreak.KSAISenseConfig_Player
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
class UKSAISenseConfig_Player : public UAISenseConfig
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(931);
		return ptr;
	}



};

// Class Killstreak.KSAISenseConfig_Team
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
class UKSAISenseConfig_Team : public UAISenseConfig
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(932);
		return ptr;
	}



};

// Class Killstreak.KSAISenseEvent_Objective
// 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
class UKSAISenseEvent_Objective : public UAISenseEvent
{
public:
	struct FAIObjectiveEvent                           Event;                                                     // 0x0028(0x0030) (Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(934);
		return ptr;
	}



};

// Class Killstreak.KSAISightTargetInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSAISightTargetInterface : public UAISightTargetInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(936);
		return ptr;
	}



};

// Class Killstreak.KSAkComponent
// 0x00A0 (FullSize[0x0490] - InheritedSize[0x03F0])
class UKSAkComponent : public UAkComponent
{
public:
	Killstreak_EOcclusionType                          OcclusionType;                                             // 0x03F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YW7O[0x3];                                     // 0x03F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinTimeBetweenOcclusionUpdates;                            // 0x03F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OcclusionDistanceMultiplier;                               // 0x03F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                OcclusionInterpolationMilliseconds;                        // 0x03FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentObstruction;                                        // 0x0400(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentOcclusion;                                          // 0x0404(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O9MK[0x4];                                     // 0x0408(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               RequiresListenerDistance;                                  // 0x040C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_G76Z[0x3];                                     // 0x040D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinTimeBetweenDistanceUpdates;                             // 0x0410(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OZ46[0x4];                                     // 0x0414(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               RequiresListenerDirection;                                 // 0x0418(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CORB[0x3];                                     // 0x0419(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinTimeBetweenDirectionUpdates;                            // 0x041C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EJZK[0x8];                                     // 0x0420(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBakedOcclusionLUT*                          LUT;                                                       // 0x0428(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       PendingStopEvents;                                         // 0x0430(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<int, class UAkAudioEvent*>                    LoopIdToStopEventMap;                                      // 0x0440(0x0050) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(937);
		return ptr;
	}



	void StopLoopingEvent(int StopHandle);
	void StopAllLoopingEvents();
	void OnOwnerDestroyed(class AActor* DestroyedActor);
	int AddLoopingEvent(class UAkAudioEvent* EventStart, class UAkAudioEvent* EventStop);
};

// Class Killstreak.KSAkAmbientComponent
// 0x0000 (FullSize[0x0490] - InheritedSize[0x0490])
class UKSAkAmbientComponent : public UKSAkComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(938);
		return ptr;
	}



};

// Class Killstreak.KSAkAmbientSound
// 0x0040 (FullSize[0x0260] - InheritedSize[0x0220])
class AKSAkAmbientSound : public AActor
{
public:
	class UAkAudioEvent*                               AkAudioEvent;                                              // 0x0220(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UKSAkAmbientComponent*                       AkComponent;                                               // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StopWhenOwnerIsDestroyed;                                  // 0x0230(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, SimpleDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoPost;                                                  // 0x0231(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, SimpleDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ForceNoTickingOnAkComponent;                               // 0x0232(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, SimpleDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8K1L[0x2D];                                    // 0x0233(0x002D) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(939);
		return ptr;
	}



	void StopAmbientSound();
	void STATIC_StopAllKSAmbientSounds(class UObject* WorldContextObject);
	void StartAmbientSound();
	void STATIC_StartAllKSAmbientSounds(class UObject* WorldContextObject);
};

// Class Killstreak.KSItemDrop
// 0x0160 (FullSize[0x0380] - InheritedSize[0x0220])
class AKSItemDrop : public AActor
{
public:
	unsigned char                                      UnknownData_KRLS[0x18];                                    // 0x0220(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                 // 0x0238(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ORLS[0x10];                                    // 0x0240(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AKSCharacter*>                        AllowedCharacters;                                         // 0x0250(0x0010) (Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ItemDropInteractDuration;                                  // 0x0260(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                Price;                                                     // 0x0264(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsInstantPickup;                                          // 0x0268(0x0001) (Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowManualInstantPickup;                                 // 0x0269(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanPickupWithModifiedRange;                               // 0x026A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_66B2[0x5];                                     // 0x026B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSItemStimuliSourceComponent*               StimuliSourceComponent;                                    // 0x0270(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     SightOffset;                                               // 0x0278(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KBUY[0x4];                                     // 0x0284(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AActor*>                              ActorsSeenBy;                                              // 0x0288(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSItem*                                     ItemAsset;                                                 // 0x0298(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      InteractionType;                                           // 0x02A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDestroyOnPickUp;                                          // 0x02A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_S1S6[0x7];                                     // 0x02A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnItemPickup;                                              // 0x02B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DTWX[0x20];                                    // 0x02C0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSCharacter*                                PendingPickupCharacter;                                    // 0x02E0(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSInteractionManager*                       CurrentInteractionManager;                                 // 0x02E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSStaticMeshComponent*                      CollisionMesh;                                             // 0x02F0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L5XK[0x3];                                     // 0x02F8(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Killstreak_EPlayerSilhouetteType                   InactiveStencilValue;                                      // 0x02FB(0x0001) (Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EPlayerSilhouetteType                   ActiveStencilValue;                                        // 0x02FC(0x0001) (Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0I57[0x3];                                     // 0x02FD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    LootSiteSpawnRotation;                                     // 0x0300(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XZL6[0x4];                                     // 0x030C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       SkinTagContainer;                                          // 0x0310(0x0020) (Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BDA5[0x18];                                    // 0x0330(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AController*                                 DropHidePlayer;                                            // 0x0348(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bClientDropUnhide;                                         // 0x0350(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3CPV[0x3];                                     // 0x0351(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                OriginalOwnerId;                                           // 0x0354(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                OriginalOwnerTeamNum;                                      // 0x0358(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bIsPlayerDrop;                                             // 0x035C(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	Killstreak_EDropPickupConfig                       DropPickupConfig;                                          // 0x035D(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_O262[0x2];                                     // 0x035E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ObjectiveId;                                               // 0x0360(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H81W[0x4];                                     // 0x0364(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               PickupSound;                                               // 0x0368(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UKSNudgeComponent*                           NudgeComponent;                                            // 0x0370(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanBeNudged;                                              // 0x0378(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bOnlyVisibleIfCanPickup;                                   // 0x0379(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FD1W[0x6];                                     // 0x037A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(940);
		return ptr;
	}



	bool ShouldShowViewedItemLabel();
	void SetInactiveStencilValue(Killstreak_EPlayerSilhouetteType Value);
	void SetActiveStencilValue(Killstreak_EPlayerSilhouetteType Value);
	void PlayDestroyedEffects();
	bool Pickup(class AKSCharacter* Receiver, bool bActivate);
	void OverridePickupFunction(const struct FScriptDelegate& ItemPickupOverride);
	void OnRootMeshDetached(class UKSStaticMeshComponent* ResponsibleMesh);
	void OnRep_PendingPickupCharacter();
	void OnRep_ObjectiveId();
	void OnRep_ItemAsset();
	void OnRep_DropHidePlayer();
	struct FScriptDelegate GetPickupDelegate();
	class AKSCharacter* GetPendingPickupCharacter();
	struct FRotator GetLootSiteSpawnRotation();
	bool GetLabelInfoForSecondaryTitle(struct FText* LabelText);
	bool GetLabelInfoForPrimaryTitle(struct FText* LabelText);
	class UKSItem* GetItemAsset();
	void EndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	bool CanBePickedUpByCharacterInternal(class AKSCharacter* Receiver);
	bool CanBePickedUpByCharacter(class AKSCharacter* Receiver);
	void CalculateRandomImpulse(struct FVector* LinearImpulse, struct FVector* AngularImpulse);
	void BeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void AsyncItemGiveComplete(class UKSItem* Item, class UObject* GivenObject, const struct FGiveItemParameters& InGiveItemParameters, bool bSuccess);
	void ApplyRandomImpulse();
	void AllowPickup(class AKSCharacter* Character);
};

// Class Killstreak.KSLootDrop
// 0x0020 (FullSize[0x03A0] - InheritedSize[0x0380])
class AKSLootDrop : public AKSItemDrop
{
public:
	int                                                Amount;                                                    // 0x0380(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B6FB[0x1C];                                    // 0x0384(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(941);
		return ptr;
	}



	struct FText GetReasonText();
	int GetAmount();
};

// Class Killstreak.KSAmmoDrop
// 0x0000 (FullSize[0x03A0] - InheritedSize[0x03A0])
class AKSAmmoDrop : public AKSLootDrop
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(942);
		return ptr;
	}



};

// Class Killstreak.KSItem
// 0x0098 (FullSize[0x0250] - InheritedSize[0x01B8])
class UKSItem : public UPlatformInventoryItem
{
public:
	unsigned char                                      ItemDropClass[0x28];                                       // 0x01B8(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	int                                                ItemPrice;                                                 // 0x01E0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                                ItemType;                                                  // 0x01E4(0x0008) (Edit, Config, DisableEditOnInstance, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUsePreviewIconInfo;                                       // 0x01EC(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YTIL[0x3];                                     // 0x01ED(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UImageIconInfo*                              PreviewIconInfo;                                           // 0x01F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  DefaultItemIcon;                                           // 0x01F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      SpecialItemWidgetClass[0x28];                              // 0x0200(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	struct FColor                                      ColorCode;                                                 // 0x0228(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPrimaryAssetRules                          Rules;                                                     // 0x022C(0x000C) (Edit, DuplicateTransient, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                        ItemTags;                                                  // 0x0238(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AlsoInBundleLootId;                                        // 0x0248(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CMU2[0x4];                                     // 0x024C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(943);
		return ptr;
	}



	bool STATIC_SoftGiveToAsync(class AActor* Owner, class AActor* Instigator, const struct FGiveItemParameters& InGiveItemParameters, const struct FScriptDelegate& GivenToEvent);
	bool STATIC_SoftCreateDropAsync(const struct FTransform& SpawnTransform, class UObject* WorldContextObject, const struct FDropItemParameters& InDropItemParameters, const struct FScriptDelegate& ItemDroppedEvent, bool bEnablePhysics, const struct FVector& InSpawnLinearVelocity, const struct FVector& InSpawnAngularVelocity);
	void STATIC_RemoveFromPlayerLoadout(class UKSItem* Item, class AKSPlayerState* PlayerState);
	void InitNewlyCreatedItem(int64_t InItemId);
	bool HasValidPurchasePreviewIcon();
	bool STATIC_GiveToAsync(class UKSItem* Item, class AActor* Owner, class AActor* Instigator, const struct FGiveItemParameters& InGiveItemParameters, const struct FScriptDelegate& GivenToEvent);
	bool STATIC_GiveTo(class UKSItem* Item, class AActor* Owner, class AActor* Instigator, const struct FGiveItemParameters& InGiveItemParameters, class UObject** OutObject);
	void GetSpecialItemWidgetClass();
	int GetRarityValue();
	class UIconInfo* GetPurchasePreviewIconInfo();
	void GetPurchasePreviewIcon();
	class UKSJobItem* GetJobItemForPreview(class UObject* WorldContextObject);
	struct FGameplayTag GetItemType();
	int GetItemPrice();
	void GetItemDropClass();
	TArray<struct FItemDisplayStat> GetItemDisplayStats();
	struct FText GetItemCategoryText();
	struct FColor GetColorCode();
	bool STATIC_CreateDropAsync(class UKSItem* Item, const struct FTransform& SpawnTransform, class UObject* WorldContextObject, const struct FDropItemParameters& InDropItemParameters, const struct FScriptDelegate& ItemDroppedEvent, bool bEnablePhysics, const struct FVector& InSpawnLinearVelocity, const struct FVector& InSpawnAngularVelocity);
	class AKSItemDrop* STATIC_CreateDrop(class UKSItem* Item, const struct FTransform& SpawnTransform, class UObject* WorldContextObject, const struct FDropItemParameters& InDropItemParameters);
	bool CanBePickedUpByCharacter(class AKSCharacter* PotentialOwner);
	bool CanBePickedUpBy(class AActor* PotentialOwner);
	bool STATIC_AddToPlayerLoadout(class UKSItem* Item, class AKSPlayerState* PlayerState, const struct FRestoreInfoInitParams& InitParams, const struct FGiveItemParameters& GiveParams);
};

// Class Killstreak.KSLootItem
// 0x0020 (FullSize[0x0270] - InheritedSize[0x0250])
class UKSLootItem : public UKSItem
{
public:
	int                                                Amount;                                                    // 0x0250(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShareWithTeam;                                            // 0x0254(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WNNA[0x1B];                                    // 0x0255(0x001B) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(944);
		return ptr;
	}



	bool ShouldShareWithTeam();
	struct FText GetReasonText();
	int GetAmount();
};

// Class Killstreak.KSAmmoDropAsset
// 0x0008 (FullSize[0x0278] - InheritedSize[0x0270])
class UKSAmmoDropAsset : public UKSLootItem
{
public:
	Killstreak_EAmmoType                               AmmoType;                                                  // 0x0270(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IQD3[0x7];                                     // 0x0271(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(945);
		return ptr;
	}



	Killstreak_EAmmoType GetAmmoType();
};

// Class Killstreak.KSAnalogStickFilter
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UKSAnalogStickFilter : public UObject
{
public:
	Killstreak_EKSAnalogStickType                      StickType;                                                 // 0x0028(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CKMV[0x7];                                     // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSPlayerInput*                              PlayerInput;                                               // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(946);
		return ptr;
	}



};

// Class Killstreak.KSAnimationAuditComponent
// 0x0008 (FullSize[0x00B8] - InheritedSize[0x00B0])
class UKSAnimationAuditComponent : public UActorComponent
{
public:
	class UKSAnimInstance*                             CurrentAnimInst;                                           // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(947);
		return ptr;
	}



	void AnimAuditStop(class UKSAnimInstance* AnimInst, bool bExportImmediately);
	void AnimAuditStart(class UKSAnimInstance* AnimInst);
	void AnimAuditClear(class UKSAnimInstance* AnimInst);
};

// Class Killstreak.KSAnimInstance
// 0x0060 (FullSize[0x0330] - InheritedSize[0x02D0])
class UKSAnimInstance : public USkinnedAnimInstance
{
public:
	class UKSAnimationAuditComponent*                  AuditingComponent;                                         // 0x02D0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N0T5[0x10];                                    // 0x02D8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bPlayingMirrorTransition;                                  // 0x02E8(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAnimMirrorDelay;                                          // 0x02E9(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableMirrorPose;                                        // 0x02EA(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWantsMirroredPoseCosmetic;                                // 0x02EB(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PoseMirrorAlphaCosmetic;                                   // 0x02EC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MirrorInterpSpeed;                                         // 0x02F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MirrorInterpSpeedEngaged;                                  // 0x02F4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShoulderSwapProgress;                                      // 0x02F8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_ECameraShoulder                         CurrentShoulderCosmetic;                                   // 0x02FC(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JUC3[0x3];                                     // 0x02FD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FBoneMirrorConfig                           BoneMirrorConfig;                                          // 0x0300(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	Killstreak_ECameraShoulder                         CurrentShoulder;                                           // 0x0320(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWantsMirroredPose;                                        // 0x0321(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N4YW[0x2];                                     // 0x0322(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PoseMirrorAlpha;                                           // 0x0324(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsShieldActive;                                           // 0x0328(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P7P8[0x7];                                     // 0x0329(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(948);
		return ptr;
	}



	void SetShieldActive(bool bSetIsShieldActive);
	void SetLobbyState(bool bInModelViewer);
	void OnShoulderChanged();
	void OnMirrorPoseChanged();
	void Montage_JumpToRandomSection(TArray<struct FName> SectionNames, class UAnimMontage* Montage, bool bDisallowCurrentSection);
	TArray<struct FBoneReference> GetUnpairedMirrorBones();
	TArray<struct FBoneMirrorPair> GetPairedMirrorBones();
	void AnimMirrorDelayEnd();
};

// Class Killstreak.KSAnimNotify_EmotionDuration
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UKSAnimNotify_EmotionDuration : public UAnimNotify
{
public:
	Killstreak_EKSEmotion                              Emotion;                                                   // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MLKR[0x3];                                     // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Duration;                                                  // 0x003C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(949);
		return ptr;
	}



};

// Class Killstreak.KSAnimNotify_Footstep
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UKSAnimNotify_Footstep : public UAnimNotify
{
public:
	TArray<TEnumAsByte<Engine_EObjectTypeQuery>>       FootprintTraceObjectTypes;                                 // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(950);
		return ptr;
	}



	struct FName GetBoneName();
};

// Class Killstreak.KSAnimNotify_PlayParticleEffect
// 0x0010 (FullSize[0x00A0] - InheritedSize[0x0090])
class UKSAnimNotify_PlayParticleEffect : public UAnimNotify_PlayParticleEffect
{
public:
	struct FName                                       SkinTableRowName;                                          // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B4BM[0x8];                                     // 0x0098(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(951);
		return ptr;
	}



};

// Class Killstreak.KSAnimNotifyState_EmoteProp
// 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
class UKSAnimNotifyState_EmoteProp : public UAnimNotifyState
{
public:
	class UStreamableRenderAsset*                      PropMesh;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      AnimClass;                                                 // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                                AnimMontage;                                               // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAddPropToSilhouette;                                      // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4C0Q[0x3];                                     // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ForceLOD;                                                  // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPoolAttachmentInfo                         PropAttachmentInfo;                                        // 0x0050(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bUseLightingChannel0;                                      // 0x0080(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseLightingChannel1;                                      // 0x0081(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseLightingChannel2;                                      // 0x0082(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_15V5[0x1];                                     // 0x0083(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGuid                                       EmotePropGuid;                                             // 0x0084(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BARG[0x4];                                     // 0x0094(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(952);
		return ptr;
	}



	void OnStaticMeshComponentInitialized(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration, class UStaticMeshComponent* SpawnedStaticMeshComponent);
	void OnSkeletalMeshComponentInitialized(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration, class USkeletalMeshComponent* SpawnedSkeletalMeshComponent);
	void NotifyRemoveMeshComponentFromCharacter(class USkeletalMeshComponent* MeshComp);
	void NotifyAddMeshComponentToCharacter(class USkeletalMeshComponent* MeshComp, class UMeshComponent* SpawnedMeshComponent);
	void HandleEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);
	void HandleBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);
};

// Class Killstreak.KSAnimNotifyState_Emotion
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UKSAnimNotifyState_Emotion : public UAnimNotifyState
{
public:
	Killstreak_EKSEmotion                              Emotion;                                                   // 0x0030(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_O8QX[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(953);
		return ptr;
	}



};

// Class Killstreak.KSAnimNotifyState_Prop
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class UKSAnimNotifyState_Prop : public UAnimNotifyState
{
public:
	class USkeletalMesh*                               SkeletalMesh;                                              // 0x0030(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      AnimClass;                                                 // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                                 StaticMesh;                                                // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPoolAttachmentInfo                         PropAttachmentInfo;                                        // 0x0048(0x0030) (Edit, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(954);
		return ptr;
	}



};

// Class Killstreak.KSAnimNotifyState_Trail
// 0x0008 (FullSize[0x0060] - InheritedSize[0x0058])
class UKSAnimNotifyState_Trail : public UAnimNotifyState_Trail
{
public:
	struct FName                                       SkinTableRowName;                                          // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(956);
		return ptr;
	}



};

// Class Killstreak.KSAnimNotifyState_WeaponProp
// 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
class UKSAnimNotifyState_WeaponProp : public UAnimNotifyState
{
public:
	struct FSoftObjectPath                             WeaponAsset;                                               // 0x0030(0x0018) (Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AnimClassRowNameOverride;                                  // 0x0048(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                ActivationMontage;                                         // 0x0050(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       PropIdentifier;                                            // 0x0058(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExtendedLifetime;                                          // 0x0060(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSkipExtendedLifetime;                                     // 0x0064(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9ODD[0x3];                                     // 0x0065(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPoolAttachmentInfo                         PropAttachmentInfo;                                        // 0x0068(0x0030) (Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(957);
		return ptr;
	}



};

// Class Killstreak.KSAnnouncer
// 0x0120 (FullSize[0x0340] - InheritedSize[0x0220])
class AKSAnnouncer : public AInfo
{
public:
	unsigned char                                      UnknownData_UWEG[0x18];                                    // 0x0220(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnAllyLivingPlayersChanged;                                // 0x0238(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEnemyLivingPlayersChanged;                               // 0x0248(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UKSVOPriorityManager*                        PriorityManager;                                           // 0x0258(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F4DP[0x10];                                    // 0x0260(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkComponent*                                AnnouncerAkComponent;                                      // 0x0270(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FName, struct FTimeAnnouncementList>   PhaseTimeAnnouncements;                                    // 0x0278(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               SuddenDeathAnnouncement;                                   // 0x02C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CSN4[0x8];                                     // 0x02D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               FallbackEliminationAnnouncement;                           // 0x02D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               FallbackEliminationAnnouncementAlly;                       // 0x02E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7K2M[0x40];                                    // 0x02E8(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxAnnouncementDuration;                                   // 0x0328(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptDelegate                             OnVOLineFinished;                                          // 0x032C(0x0010) (ZeroConstructor, Transient, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	float                                              VODuckingAmount;                                           // 0x033C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(958);
		return ptr;
	}



	bool ShouldPlayTimeAnnouncementFromGroup(TArray<struct FName> Groups);
	void QueueAnnouncementStruct(const struct FAnnouncement& Announcement, int TeamNum, bool DelayProcessing);
	void QueueAnnouncement(class UAkAudioEvent* AkEvent, class UAkAudioEvent* AltAkEvent, Killstreak_EKSVoiceOverPriority Priority, float Lifetime, float Delay, float Lockout, int TeamNum, bool DelayProcessing, class AKSPlayerState* TargetPlayer, class UAkAudioEvent* TargetPlayerAkEvent);
	void ProcessTimeAnnouncementList(struct FTimeAnnouncementList* TimeAnnouncementList, float Time, int TeamNum);
	void OnObjectiveTimerZero();
	void OnObjectiveSpawned();
	void OnObjectiveReset();
	void OnObjectiveHeld();
	void OnObjectiveExploded();
	void OnObjectiveDropped();
	void OnObjectiveDisarming();
	void OnObjectiveDisarmed();
	void OnObjectiveDeactivated();
	void OnObjectiveContested();
	void OnObjectiveArming();
	void OnObjectiveArmed();
	void OnMatchTimerUpdate(float TimeInWholeSeconds);
	void OnLocalViewTargetMovementModeChanged(TEnumAsByte<Engine_EMovementMode> OldMode, unsigned char OldCustomMode, TEnumAsByte<Engine_EMovementMode> NewMode, unsigned char NewCustomMode);
	void OnLocalViewTargetChanged(class AKSPlayerController* Controller, class AActor* OldViewTarget, class AActor* NewViewTarget);
	void OnGameObjectiveStateChanged();
	void LocalPlayerControllerDestroyed(class AActor* PlayerController);
	int GetTeamOverrideForAnnouncementGroup(TArray<struct FName> Groups);
	class AKSPlayerController* GetPlayerController();
	void FinishedLineCallback(AkAudio_EAkCallbackType in_eType, class UAkCallbackInfo* in_pCallbackInfo);
	void EventQueueInGame();
	void EventLocalPlayerControllerDestroyed(class AKSPlayerController* PlayerController);
	void CurrentAnnouncementComplete();
	void AnnouncePlayerDeath(const struct FCombatEventInfo& CombatEvent);
};

// Class Killstreak.KSApparelAsset
// 0x0070 (FullSize[0x02C0] - InheritedSize[0x0250])
class UKSApparelAsset : public UKSItem
{
public:
	int                                                Priority;                                                  // 0x0250(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                                ApparelSlot;                                               // 0x0254(0x0008) (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_K30Q[0x4];                                     // 0x025C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       SlotsToOverride;                                           // 0x0260(0x0020) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XC9R[0x28];                                    // 0x0280(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                AsyncLoadPriority;                                         // 0x02A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                LocalPlayerAsyncLoadPriority;                              // 0x02AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WFTF[0x10];                                    // 0x02B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(959);
		return ptr;
	}



	struct FGameplayTag GetSlot();
};

// Class Killstreak.KSApparelAsset_SkinDataTables
// 0x0020 (FullSize[0x02E0] - InheritedSize[0x02C0])
class UKSApparelAsset_SkinDataTables : public UKSApparelAsset
{
public:
	TArray<struct FSoftDataTableInfo>                  AssetDataTables;                                           // 0x02C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               ApparelObjectsToInfluence;                                 // 0x02D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(960);
		return ptr;
	}



};

// Class Killstreak.KSApparelAsset_CustomComponent
// 0x0028 (FullSize[0x0308] - InheritedSize[0x02E0])
class UKSApparelAsset_CustomComponent : public UKSApparelAsset_SkinDataTables
{
public:
	unsigned char                                      CustomComponentClass[0x28];                                // 0x02E0(0x0028) UNKNOWN PROPERTY: SoftClassProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(961);
		return ptr;
	}



};

// Class Killstreak.KSApparelAsset_SkinnedMesh
// 0x0050 (FullSize[0x0330] - InheritedSize[0x02E0])
class UKSApparelAsset_SkinnedMesh : public UKSApparelAsset_SkinDataTables
{
public:
	unsigned char                                      MeshClass[0x28];                                           // 0x02E0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	struct FName                                       AttachPointName;                                           // 0x0308(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       CollisionProfile;                                          // 0x0310(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSlaveToCharacterMesh;                                     // 0x0318(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSimulatePhysics;                                          // 0x0319(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_09KS[0x6];                                     // 0x031A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               ApparelObjectsToListenTo;                                  // 0x0320(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(962);
		return ptr;
	}



};

// Class Killstreak.KSArmor
// 0x0008 (FullSize[0x0730] - InheritedSize[0x0728])
class AKSArmor : public AKSWeapon
{
public:
	float                                              Durability;                                                // 0x0728(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bArmorIsBroken;                                            // 0x072C(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JUGQ[0x3];                                     // 0x072D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(965);
		return ptr;
	}



	bool ShouldDestroyOnBreak();
	float RepairArmor(float DurabilityToAdd);
	bool IsRepairableByInteract();
	bool IsRepairableArmor();
	bool IsArmorBeingRepaired();
	float GetMaxDurability();
	float GetDurability();
	class UKSArmorAsset* GetArmorAsset();
	bool CanArmorBeRepaired();
	bool CanAbsorbDamageType(class UClass* DamageTypeClass);
	float CalcAbsorbRadialDamage(float Damage, const struct FRadialDamageEvent& RadialDamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
	float CalcAbsorbPointDamage(float Damage, const struct FPointDamageEvent& PointDamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
};

// Class Killstreak.KSWeaponAsset
// 0x06B0 (FullSize[0x0900] - InheritedSize[0x0250])
class UKSWeaponAsset : public UKSItem
{
public:
	class UDataTable*                                  ItemDisplayStatParamsTable;                                // 0x0250(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       WeaponDisplayName;                                         // 0x0258(0x0018) (Deprecated, Protected, NativeAccessSpecifierProtected)
	struct FText                                       WeaponDescription;                                         // 0x0270(0x0018) (Deprecated, Protected, NativeAccessSpecifierProtected)
	Killstreak_EKSWeaponEquipType                      WeaponEquipType;                                           // 0x0288(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7NV9[0x7];                                     // 0x0289(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      WeaponClass[0x28];                                         // 0x0289(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      WeaponComponentClass[0x28];                                // 0x02B8(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      WeaponAmmoWidgetClass[0x28];                               // 0x02E0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      WeaponDropClass[0x28];                                     // 0x0308(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	bool                                               bUnique;                                                   // 0x0330(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldBeRemovedWhenExhausted;                             // 0x0331(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanBeDropped;                                             // 0x0332(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWillDropWhenDowned;                                       // 0x0333(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bForceUprightDrops;                                        // 0x0334(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDoesRestoreAmmo;                                          // 0x0335(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bModsCanReplenishAmmo;                                     // 0x0336(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDoLocalReveals;                                           // 0x0337(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanEverFire;                                              // 0x0338(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLagCompensatedFire;                                       // 0x0339(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIgnoreNoFire;                                             // 0x033A(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLimitNumInPlay;                                           // 0x033B(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxNumInPlay;                                              // 0x033C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLimitDeployablesByPlayer;                                 // 0x0340(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QGT2[0x3];                                     // 0x0341(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                PlayerDeployableThreshold;                                 // 0x0344(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUsesEquipPoint;                                           // 0x0348(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUsesEquipSlot;                                            // 0x0349(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LHFG[0x6];                                     // 0x034A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       ValidEquipPoints;                                          // 0x0350(0x0020) (Deprecated, Protected, NativeAccessSpecifierProtected)
	Killstreak_EFireModeType                           FireModeType;                                              // 0x0370(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EWeaponCastType                         CastType;                                                  // 0x0371(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WV5F[0x2];                                     // 0x0372(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                RoundsPerBurst;                                            // 0x0374(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseAltFire;                                               // 0x0378(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseBuildupForCooking;                                     // 0x0379(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_J7TW[0x2];                                     // 0x037A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BuildupTime;                                               // 0x037C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PreFireTime;                                               // 0x0380(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PreFireInterruptThreshold;                                 // 0x0384(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AltPreFireTime;                                            // 0x0388(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PostFireTime;                                              // 0x038C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AltPostFireTime;                                           // 0x0390(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PostFireForgivenessTime;                                   // 0x0394(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSwapAfterFire;                                            // 0x0398(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H1M8[0x3];                                     // 0x0399(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CooldownTime;                                              // 0x039C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseChargingFireRate;                                      // 0x03A0(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6RHT[0x3];                                     // 0x03A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InitialPostFireTime;                                       // 0x03A4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FinalPostFireTime;                                         // 0x03A8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PostFireChargeTime;                                        // 0x03AC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PostFireDecayTime;                                         // 0x03B0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PostFireDecayDelay;                                        // 0x03B4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanEverReload;                                            // 0x03B8(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bConsumeAmmoDirectlyFromInventory;                         // 0x03B9(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NY34[0x2];                                     // 0x03BA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ClipSize;                                                  // 0x03BC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EReloadType                             ReloadType;                                                // 0x03C0(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PJ5Z[0x3];                                     // 0x03C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PreReloadTime;                                             // 0x03C4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PostReloadTime;                                            // 0x03C8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReloadCooldownTime;                                        // 0x03CC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bReloadOnEmptyWhileScoped;                                 // 0x03D0(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CHUP[0x3];                                     // 0x03D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FirstShotPreReloadTime;                                    // 0x03D4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanInterruptPreReload;                                    // 0x03D8(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EAmmoType                               AmmoType;                                                  // 0x03D9(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7GFT[0x2];                                     // 0x03DA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                DefaultAmmo;                                               // 0x03DC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUnlimitedAmmo;                                            // 0x03E0(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bMuteEmptyClipWarnings;                                    // 0x03E1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6Z42[0x2];                                     // 0x03E2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HolsterTime;                                               // 0x03E4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldRestrictHolsterInPostFire;                          // 0x03E8(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DXP1[0x3];                                     // 0x03E9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RetriveTime;                                               // 0x03EC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanFireFromRetrieve;                                      // 0x03F0(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EReticleType                            ReticleType;                                               // 0x03F1(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFadeUIOnAim;                                              // 0x03F2(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KX1R[0x5];                                     // 0x03F3(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FWeaponStateGraph                           WeaponStateGraph;                                          // 0x03F8(0x0140) (Transient, Protected, NativeAccessSpecifierProtected)
	bool                                               bDoRadialDamage;                                           // 0x0538(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsRadialDamageConical;                                    // 0x0539(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HS26[0x2];                                     // 0x053A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HeadDamageAmount;                                          // 0x053C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DamageAmount;                                              // 0x0540(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LimbDamageAmount;                                          // 0x0544(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FInterpCurveFloat                           DamageFalloffCurve;                                        // 0x0548(0x0018) (Edit, ZeroConstructor, Config, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRadialDamageParams                         RadialDamageParams;                                        // 0x0560(0x0014) (Edit, Config, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bIgnoreFriendlies;                                         // 0x0574(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIgnoreSelf;                                               // 0x0575(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIgnoreWalls;                                              // 0x0576(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_259R[0x1];                                     // 0x0577(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RadialConicalHalfAngle;                                    // 0x0578(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_16K6[0x4];                                     // 0x057C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      DamageTypeClass[0x28];                                     // 0x057C(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	float                                              CautionRadius;                                             // 0x05A8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ShotPenetrationCount;                                      // 0x05AC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DefaultAimTransitionTime;                                  // 0x05B0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanEverAimOverShoulder;                                   // 0x05B4(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TXU4[0x3];                                     // 0x05B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AimOverShoulderTransitionTime;                             // 0x05B8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanEverAimDownSights;                                     // 0x05BC(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ANRX[0x3];                                     // 0x05BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AimDownSightsTransitionTime;                               // 0x05C0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLockoutAimStateInCooldown;                                // 0x05C4(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4XDE[0x3];                                     // 0x05C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AimDownSightsFov;                                          // 0x05C8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanEverAimAlternate;                                      // 0x05CC(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NTEV[0x3];                                     // 0x05CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AimAlternateTransitionTime;                                // 0x05D0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPrefireLockon;                                            // 0x05D4(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NGD8[0x3];                                     // 0x05D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PrefireLockonAngle;                                        // 0x05D8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PrefireLockonDistance;                                     // 0x05DC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLimitCameraRotation;                                      // 0x05E0(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BN6F[0x3];                                     // 0x05E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinCameraPitch;                                            // 0x05E4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxCameraPitch;                                            // 0x05E8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinCameraYaw;                                              // 0x05EC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxCameraYaw;                                              // 0x05F0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bOverrideShoulderCameraProperties;                         // 0x05F4(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OZPQ[0x3];                                     // 0x05F5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ShoulderCameraBoomLength;                                  // 0x05F8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     ShoulderCameraSocketOffset;                                // 0x05FC(0x000C) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     ShoulderCameraTargetOffset;                                // 0x0608(0x000C) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PJJA[0xC];                                     // 0x0614(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  ShoulderCameraTransform;                                   // 0x0620(0x0030) (Edit, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsMountedWeapon;                                          // 0x0650(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowsManualShoulderSwap;                                 // 0x0651(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_ECameraShoulder                         ForcedShoulder;                                            // 0x0652(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseCrouchAOSCamVertOffset;                                // 0x0653(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              GamepadTurnSpeedMultiplier;                                // 0x0654(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              GamepadAimedTurnSpeedMultiplier;                           // 0x0658(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPrefireOverlapSkipsToFire;                                // 0x065C(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FHHJ[0x3];                                     // 0x065D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FPrefireSkipWindow>                  PrefireSkipWindows;                                        // 0x0660(0x0010) (Edit, ZeroConstructor, Config, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PrefireOverlapGracePeriod;                                 // 0x0670(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EThirdPersonAimOriginType               ThirdPersonAimOriginType;                                  // 0x0674(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XCKX[0x3];                                     // 0x0675(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     ThirdPersonFixedRelativeOffset;                            // 0x0678(0x000C) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       ThirdPersonAimOriginSocketName;                            // 0x0684(0x0008) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BaseAccuracy;                                              // 0x068C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CrouchAccuracyModifier;                                    // 0x0690(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AimOverShoulderAccuracyModifier;                           // 0x0694(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InAirAccuracyModifier;                                     // 0x0698(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MovementAccuracyPenalty;                                   // 0x069C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseAccuracyLoss;                                          // 0x06A0(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2DOD[0x3];                                     // 0x06A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AccuracyLossPerShot;                                       // 0x06A4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxFiringAccuracyLoss;                                     // 0x06A8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AccuracyReturnRate;                                        // 0x06AC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AccuracyGainPerShot;                                       // 0x06B0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxFiringAccuracyGain;                                     // 0x06B4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxAimedFiringAccuracyGain;                                // 0x06B8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AccuracyDecayRate;                                         // 0x06BC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AccuracyReturnDelay;                                       // 0x06C0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxHipFireAccuracy;                                        // 0x06C4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxAimedAccuracy;                                          // 0x06C8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EJ1H[0x4];                                     // 0x06CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKickbackModule*                             KickbackModule;                                            // 0x06D0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              KickbackApplicationTimeOverride;                           // 0x06D8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanResetKickback;                                         // 0x06DC(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R3N3[0x3];                                     // 0x06DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              KickbackResetTime;                                         // 0x06E0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseKickbackRecovery;                                      // 0x06E4(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_469N[0x3];                                     // 0x06E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              KickbackRecoveryDelay;                                     // 0x06E8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              KickbackRecoveryRate;                                      // 0x06EC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              KickbackRecoveryAcceleration;                              // 0x06F0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxCumulativeKickbackVerticalAngle;                        // 0x06F4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              GamepadKickbackScaling;                                    // 0x06F8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SprintRecoveryTime;                                        // 0x06FC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bStartFireInterruptsSprinting;                             // 0x0700(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bStartReloadInterruptsSprinting;                           // 0x0701(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bStartHolsterInterruptsSprinting;                          // 0x0702(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_I5OU[0x1];                                     // 0x0703(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DodgeRollRecoveryTime;                                     // 0x0704(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldPreventDodgeRollDuringFire;                         // 0x0708(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanFireWhileInPowerSlide;                                 // 0x0709(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanUseWhileOnZipline;                                     // 0x070A(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsAudible;                                                // 0x070B(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AudibleRange;                                              // 0x070C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WalkSpeedModifier;                                         // 0x0710(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ADSSpeedModifier;                                          // 0x0714(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FiringSpeedModifier;                                       // 0x0718(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanUseOffGround;                                          // 0x071C(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7IN4[0x3];                                     // 0x071D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       ValidWeaponAttachmentPoints;                               // 0x0720(0x0020) (Edit, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      ValidAttachments[0x50];                                    // 0x0740(0x0050) UNKNOWN PROPERTY: SetProperty
	int                                                AttachmentSlotCount;                                       // 0x0790(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S66E[0x4];                                     // 0x0794(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      AuxiliaryWeapons[0x50];                                    // 0x0794(0x0050) UNKNOWN PROPERTY: MapProperty
	unsigned char                                      VibrationEffect[0x28];                                     // 0x07E8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      AlternativeVibrationEffect[0x28];                          // 0x0810(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      AlternativeVibrationAttenuation[0x28];                     // 0x0838(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UAkAudioEvent*                               RumbleEvent;                                               // 0x0860(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      WeaponUpgrade[0x28];                                       // 0x0868(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      ItemRenderImage[0x28];                                     // 0x0890(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	float                                              ADSRollMultiplier;                                         // 0x08B8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ADSBumpStartStopMultiplier;                                // 0x08BC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ADSBumpLoopingMultiplier;                                  // 0x08C0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FADSBlurValues                              ADSBlurValuesInfo;                                         // 0x08C4(0x0030) (Edit, BlueprintVisible, Config, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               EnableCustomMask;                                          // 0x08F4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5BL0[0x3];                                     // 0x08F5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  CustomMaskTexture;                                         // 0x08F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(966);
		return ptr;
	}



	bool WillDropWhenDowned();
	bool UsingAccuracyLoss();
	class AKSWeapon* STATIC_TryToEquipToCharacterNoPointGiven(class UKSWeaponAsset* WeaponAsset, class AKSCharacter* InOwner, class AActor* InInstigator, const struct FGiveItemParameters& InGiveItemParameters, bool bAllowSyncLoad);
	class AKSWeapon* STATIC_TryToEquipToCharacter(class UKSWeaponAsset* WeaponAsset, class AKSCharacter* InOwner, class AActor* InInstigator, const struct FGameplayTag& EquipPoint, const struct FGiveItemParameters& InGiveItemParameters, bool bAllowSyncLoad);
	bool ShouldUseCrouchAOSCamVertOffset();
	bool ShouldUseChargingFireRate();
	bool ShouldUseBuildupForCooking();
	bool ShouldStartReloadInterruptSprinting();
	bool ShouldStartHolsterInterruptSprinting();
	bool ShouldStartFireInterruptSprinting();
	bool ShouldPreventDodgeRollDuringFire();
	bool ShouldPrefireOverlapSkipToFire();
	bool ShouldOverrideShoulderCameraProperties();
	bool ShouldMuteEmptyClipWarnings();
	bool ShouldLockonPrefire();
	bool ShouldLimitCameraRotation();
	bool ShouldLagCompensateFire(class AKSPlayerState* FiringPlayer);
	bool ShouldForceUprightDrops();
	bool ShouldFadeUIOnAim();
	bool ShouldDoRadialDamage();
	bool ShouldBeRemovedWhenExhausted();
	bool ShouldAllowManualShoulderSwap();
	bool RequiresAnEquipSlot();
	bool RequiresAnEquipPoint();
	struct FInterpCurveVector2D MakeKickbackCurve(int nShotIndex, float AbsoluteMaxDuration);
	bool LockoutAimStateInCooldown();
	bool LimitNumInPlay();
	bool LimitDeployablesByPlayer();
	bool IsUnique();
	bool IsRadialDamageConical();
	bool IsMountedWeapon();
	bool IsGadget();
	float IsAudible();
	bool HasKickback();
	void GetWeaponUpgrade();
	struct FGameplayTag GetWeaponType();
	void GetWeaponStats(TArray<struct FString>* OutStats);
	struct FString GetWeaponNameAsString();
	struct FText GetWeaponName();
	struct FGameplayTag GetWeaponEquipType();
	void GetWeaponDropClass();
	struct FString GetWeaponDescriptionAsString();
	struct FText GetWeaponDescription();
	void GetWeaponComponentClass();
	void GetWeaponClass();
	Killstreak_EKSWeaponCategoryType GetWeaponCategoryType();
	void GetWeaponAttachmentPoints(struct FGameplayTagContainer* OutAttachPoints);
	void GetWeaponAmmoWidgetClass();
	float GetWalkSpeedModifier();
	void GetVibrationEffect();
	struct FGameplayTagContainer GetValidEquipPoints();
	void GetValidAttachments();
	bool GetUseAltFire();
	bool GetUnlimitedAmmo();
	struct FVector GetThirdPersonFixedRelativeOffset();
	bool GetSwapAfterFire();
	float GetSprintRecoveryTime();
	void GetSoftItemRenderImage();
	struct FTransform GetShoulderCameraTransform();
	struct FVector GetShoulderCameraTargetOffset();
	struct FVector GetShoulderCameraSocketOffset();
	float GetShoulderCameraBoomLength();
	int GetShotPenetrationCount();
	void GetRumbleEvent();
	int GetRoundsPerBurst();
	float GetRetrieveTime();
	Killstreak_EReticleType GetReticleType();
	Killstreak_EReloadType GetReloadType();
	float GetReloadCooldownTime();
	bool GetRadialIgnoreWalls();
	bool GetRadialIgnoreSelf();
	bool GetRadialIgnoreFriendlies();
	struct FRadialDamageParams GetRadialDamageParams();
	float GetRadialConicalHalfAngle();
	float GetPreReloadTime();
	float GetPreFireTime();
	int GetPrefireSkipWindowNum();
	struct FPrefireSkipWindow GetPrefireSkipWindow(int Index);
	float GetPrefireOverlapGracePeriod();
	float GetPrefireLockonDistance();
	float GetPrefireLockonAngle();
	float GetPreFireInterruptThreshold();
	float GetPostReloadTime();
	float GetPostFireTime();
	float GetPostFireForgivenessTime();
	float GetPostFireDecayTime();
	float GetPostFireDecayDelay();
	float GetPostFireChargeTime();
	int GetPlayerDeployableLimit();
	float GetOuterRadius();
	float GetMovementAccuracyPenalty();
	int GetMaxNumInPlay();
	float GetMaxHipFireAccuracy();
	float GetMaxFiringAccuracyLoss();
	float GetMaxFiringAccuracyGain();
	float GetMaxFalloffDistance();
	float GetMaxCumulativeKickbackVerticalAngle();
	float GetMaxAimedFiringAccuracyGain();
	float GetMaxAimedAccuracy();
	float GetLimbDamageAmount();
	float GetKickbackResetTime();
	float GetKickbackRecoveryRate();
	float GetKickbackRecoveryDelay();
	float GetKickbackRecoveryAcceleration();
	float GetKickbackApplicationOverride();
	float GetInnerRadius();
	float GetInitialPostFireTime();
	float GetInitialFireRate();
	float GetInAirAccuracyModifier();
	float GetHolsterTime();
	float GetHeadDamageAmount();
	float GetGamepadTurnSpeedMultiplier();
	float GetGamepadKickbackScaling();
	float GetGamepadAimedTurnSpeedMultiplier();
	Killstreak_ECameraShoulder GetForcedShoulder();
	float GetFirstShotPreReloadTime();
	float GetFiringSpeedModifier();
	Killstreak_EFireModeType GetFireModeType();
	float GetFinalPostFireTime();
	float GetFinalFireRate();
	float GetDodgeRollRecoveryTime();
	int GetDefaultAmmo();
	float GetDefaultAimTransitionTime();
	void GetDamageTypeClass();
	float GetDamageAmount();
	float GetCrouchAccuracyModifier();
	float GetCooldownDownTime();
	bool GetConsumeAmmoDirectlyFromInventory();
	void GetCompatibleAttachments(TArray<class UKSWeaponAttachment*>* OutAttachments);
	void GetCompatibleAttachmentAssets();
	int GetClipSize();
	float GetCautionRadius();
	Killstreak_EWeaponCastType GetCastType();
	bool GetCanUseOffGround();
	float GetCanFireWhileInPowerSlide();
	void GetCameraYawLimits(float* MinYaw, float* MaxYaw);
	void GetCameraPitchLimits(float* MinPitch, float* MaxPitch);
	float GetBuildupTime();
	float GetBaseRadialDamage();
	float GetBaseAccuracy();
	float GetAudibleRange();
	int GetAttachmentSlotCount();
	Killstreak_EAmmoType GetAmmoType();
	void GetAlternativeVibrationEffect();
	void GetAlternativeVibrationAttenuation();
	float GetAlternatePreFireTime();
	float GetAlternatePostFireTime();
	float GetAimOverShoulderTransitionTime();
	float GetAimOverShoulderAccuracyModifier();
	float GetAimDownSightsTransitionTime();
	float GetAimDownSightsFOV();
	float GetAimAlternateTransitionTime();
	float GetADSSpeedModifier();
	float GetADSRollMultiplier();
	float GetADSBumpStartStopMultiplier();
	float GetADSBumpLoopingMultiplier();
	struct FADSBlurValues GetADSBlurValuesInfo();
	float GetAccuracyReturnRate();
	float GetAccuracyReturnDelay();
	float GetAccuracyLossPerShot();
	float GetAccuracyGainPerShot();
	float GetAccuracyDecayRate();
	bool DoesScopingAllowAutoReload();
	bool DoesRestoreAmmo();
	bool DoesIgnoreNoFire();
	class AKSProjectile* STATIC_CreateProjectile(class UObject* WorldContextObject, class UKSWeaponAsset* WeaponAsset, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, const struct FDropItemParameters& InDropItemParameters, class AKSWeapon* SpawningWeapon, class AActor* SpawningOwner, class APawn* SpawningInstigator, bool bDeferConstruction, const struct FName& ProjectileInfoKey);
	class AKSProjectile* STATIC_CreateAndExplodeProjectile(class UObject* WorldContextObject, class UKSWeaponAsset* WeaponAsset, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, const struct FDropItemParameters& InDropItemParameters, class AKSWeapon* SpawningWeapon, class AActor* SpawningOwner, class APawn* SpawningInstigator, bool bDeferConstruction);
	float STATIC_ConeHalfAngleToAccuracy(float HalfAngle);
	bool CanWeaponStateTransition(Killstreak_EWeaponStateNew OldState, Killstreak_EWeaponStateNew NewState);
	bool CanResetKickback();
	bool CanRecoverFromKickback();
	bool CanReceiveAttachment(class UKSWeaponAttachment* InAttachment, struct FGameplayTagContainer* AvailableAttachPoints);
	bool CanModsReplenishAmmo();
	bool CanInterruptPreReload();
	bool CanEverReload();
	bool CanEverFire();
	bool CanEverAimOverShoulder();
	bool CanEverAimDownSights();
	bool CanEverAimAlternate();
	bool CanDoLocalReveals();
	bool CanBeDropped();
	float CalculateDamageFromProjectileHit(const struct FHitResult& HitInfo, class AKSProjectile* Projectile);
	float CalculateDamageFromInstantHit(const struct FHitResult& HitInfo, float DamageFalloffRangeScaler);
	float CalculateDamageFalloffFromProjectileHit(const struct FHitResult& HitInfo, class AKSProjectile* Projectile);
	float CalculateDamageFalloffFromHitResults(const struct FHitResult& HitInfo, float FalloffRangeScaler);
	float CalculateDamageFalloffFromDistance(float Distance, float FalloffRangeScaler);
	float STATIC_AccuracyToConeHalfAngle(float Accuracy);
};

// Class Killstreak.KSArmorAsset
// 0x0020 (FullSize[0x0920] - InheritedSize[0x0900])
class UKSArmorAsset : public UKSWeaponAsset
{
public:
	float                                              Durability;                                                // 0x0900(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              StartingDurability;                                        // 0x0904(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DamageAbsorbPercent;                                       // 0x0908(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                DisplayLevel;                                              // 0x090C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAbsorbsHeadDamage;                                        // 0x0910(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAbsorbsBreakingHit;                                       // 0x0911(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bArmorIsRepairable;                                        // 0x0912(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDestroyOnBreak;                                           // 0x0913(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRepairableByInteract;                                     // 0x0914(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_84AC[0xB];                                     // 0x0915(0x000B) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(967);
		return ptr;
	}



	bool ShouldDestroyOnBreak();
	bool IsRepairableByInteract();
	bool IsArmorRepairable();
	float GetStartingDurability();
	float GetMaxDurability();
	int GetDisplayLevel();
	float GetDamageAbsorbPercent();
	bool DoesAbsorbBreakingHit();
	float CalcAbsorbRadialDamage(float Damage, const struct FRadialDamageEvent& RadialDamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
	float CalcAbsorbPointDamage(float Damage, const struct FPointDamageEvent& PointDamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
};

// Class Killstreak.KSWeaponAssetDrop
// 0x04C8 (FullSize[0x0848] - InheritedSize[0x0380])
class AKSWeaponAssetDrop : public AKSItemDrop
{
public:
	unsigned char                                      UnknownData_5I4T[0x8];                                     // 0x0380(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnProjectileSpawned;                                       // 0x0388(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3738[0x18];                                    // 0x0398(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSProjectile*                               ReturnProjectile;                                          // 0x03B0(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Q1XK[0x8];                                     // 0x03B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponComponent*                          WeaponComponent;                                           // 0x03C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSWeaponAsset*                              WeaponAsset;                                               // 0x03C8(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FKSEquipmentId                              WeaponComponentEquipmentId;                                // 0x03D0(0x0004) (HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DTBQ[0x4];                                     // 0x03D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponAsset*                              CachedWeaponAsset;                                         // 0x03D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F6UR[0xE8];                                    // 0x03E0(0x00E8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FBundledAmmoInfo                            BundledAmmo;                                               // 0x04C8(0x000C) (Edit, Net, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MFC7[0x14];                                    // 0x04D4(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSWeaponDropAttachmentContainer            AttachmentContainer;                                       // 0x04E8(0x0128) (Edit, Net, DisableEditOnTemplate, NativeAccessSpecifierPrivate)
	bool                                               bAttachWeaponComponentOnDrop;                              // 0x0610(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PRS4[0x7];                                     // 0x0611(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSEquipmentContainer                       EquipmentContainer;                                        // 0x0618(0x0228) (ContainsInstancedReference, NativeAccessSpecifierPrivate)
	float                                              CosmeticZOffset;                                           // 0x0840(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YFLO[0x4];                                     // 0x0844(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(968);
		return ptr;
	}



	void SetBundledAmmoToDefault();
	void OverrideDropAmmo(int ReserveAmmo, int AmmoInClip);
	void OnReturnProjectileStopped(const struct FHitResult& HitResult);
	void OnRep_ReturnProjectile();
	class UKSWeaponComponent* GetWeaponComponent();
	class UKSWeaponAsset* GetWeaponAsset();
	class AKSProjectile* GetReturnProjectile();
	bool GetLabelInfoForFireModeType(Killstreak_EFireModeType* FireModeType);
	bool GetLabelInfoForAmmoType(Killstreak_EAmmoType* AmmoType);
	bool CanPickupReplenishAmmo();
	void BroadcastPickupFailedInventoryFull(class AKSCharacter* Receiver);
	bool AddAttachment(class UKSWeaponAttachment* InAttachment);
};

// Class Killstreak.KSArmorAssetDrop
// 0x0008 (FullSize[0x0850] - InheritedSize[0x0848])
class AKSArmorAssetDrop : public AKSWeaponAssetDrop
{
public:
	float                                              RemainingDurability;                                       // 0x0848(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IRQW[0x4];                                     // 0x084C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(969);
		return ptr;
	}



};

// Class Killstreak.KSAssetManager
// 0x0110 (FullSize[0x07D8] - InheritedSize[0x06C8])
class UKSAssetManager : public UPInv_AssetManager
{
public:
	unsigned char                                      UnknownData_JT8L[0xF0];                                    // 0x06C8(0x00F0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bCookAndPackageActivities;                                 // 0x07B8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCookAndPackageJobActivities;                              // 0x07B9(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCookAndPackageWeaponActivities;                           // 0x07BA(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsQuickCook;                                              // 0x07BB(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HPNR[0x4];                                     // 0x07BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             AdditionalQuickCookPrimaryAssets;                          // 0x07C0(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_E6C4[0x8];                                     // 0x07D0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(970);
		return ptr;
	}



};

// Class Killstreak.KSAssetManagerSettings
// 0x0130 (FullSize[0x0168] - InheritedSize[0x0038])
class UKSAssetManagerSettings : public UDeveloperSettings
{
public:
	bool                                               bCookAndPackageActivities;                                 // 0x0038(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCookAndPackageJobActivities;                              // 0x0039(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCookAndPackageWeaponActivities;                           // 0x003A(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bQuickCook;                                                // 0x003B(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KUAS[0x4];                                     // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               PrimaryTypesToIgnoreQuickCook;                             // 0x0040(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      QuickCookTypeIgnoreSet[0x50];                              // 0x0050(0x0050) UNKNOWN PROPERTY: SetProperty
	TArray<struct FString>                             PrimaryAssetsToIgnoreQuickCook;                            // 0x00A0(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      QuickCookAssetIgnoreSet[0x50];                             // 0x00B0(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      QuickCookAssetIngoreSetTypes[0x50];                        // 0x0100(0x0050) UNKNOWN PROPERTY: SetProperty
	TArray<struct FString>                             PrimaryAssetsToIncludeQuickCook;                           // 0x0150(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ActiveContentProductionChunkId;                            // 0x0160(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ActiveMapProductionChunkId;                                // 0x0164(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(971);
		return ptr;
	}



};

// Class Killstreak.KSAssetQueryHelperComponent
// 0x0060 (FullSize[0x0110] - InheritedSize[0x00B0])
class UKSAssetQueryHelperComponent : public UActorComponent
{
public:
	struct FGameplayTagQuery                           PrimaryAssetQuery;                                         // 0x00B0(0x0048) (Edit, NativeAccessSpecifierPublic)
	TArray<struct FPrimaryAssetId>                     AssetIds;                                                  // 0x00F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LastResolvedIndex;                                         // 0x0108(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasInitalizedAssetIdList;                                 // 0x010C(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WASA[0x3];                                     // 0x010D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(972);
		return ptr;
	}



	class UObject* ResolvePreviousAssetId();
	class UObject* ResolveNextAssetId();
	class UObject* ResolveAssetIdAtIndex(int Index);
	int GetLastResolvedIndex();
};

// Class Killstreak.KSAsyncImage
// 0x0010 (FullSize[0x0270] - InheritedSize[0x0260])
class UKSAsyncImage : public UPUMG_AsyncImage
{
public:
	class UMaterialInstanceDynamic*                    MaterialToUse;                                             // 0x0260(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       MaterialParameter;                                         // 0x0268(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(973);
		return ptr;
	}



	void SetMaterialToUse(class UMaterialInstanceDynamic* InMID);
	void SetBrushFromTextureOnItem(class UPlatformInventoryItem* Item, bool bMatchSize);
	void SetBrushFromPathOnItem(class UPlatformInventoryItem* Item, const struct FSoftObjectPath& Path, bool bMatchSize);
	void SetBrushFromItemIcon(class UPlatformInventoryItem* Item, bool bMatchSize);
	void SetBrushFromIconInfo(class UIconInfo* IconInfo, bool bMatchSize);
};

// Class Killstreak.KSAttachmentCompatRules
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSAttachmentCompatRules : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(974);
		return ptr;
	}



	bool IsWeaponAssetCompatible(class UKSWeaponAsset* InWeaponAsset);
};

// Class Killstreak.KSAttachCompatRules_SkinDetails
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSAttachCompatRules_SkinDetails : public UKSAttachmentCompatRules
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(975);
		return ptr;
	}



};

// Class Killstreak.KSAttachCompatRules_SpecificList
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UKSAttachCompatRules_SpecificList : public UKSAttachmentCompatRules
{
public:
	TArray<struct FSoftObjectPath>                     CompatibleWeapons;                                         // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(976);
		return ptr;
	}



};

// Class Killstreak.KSAttachCompatRules_WeaponType
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
class UKSAttachCompatRules_WeaponType : public UKSAttachmentCompatRules
{
public:
	struct FGameplayTagContainer                       CompatibleWeaponTypes;                                     // 0x0028(0x0020) (Edit, DisableEditOnInstance, AssetRegistrySearchable, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(977);
		return ptr;
	}



};

// Class Killstreak.KSAttachCosmeticInst_Reactive
// 0x0080 (FullSize[0x0230] - InheritedSize[0x01B0])
class UKSAttachCosmeticInst_Reactive : public UKSWeaponAttachmentCosmeticInst
{
public:
	bool                                               bWasInitializedOnNewWeapon;                                // 0x01B0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3R30[0x3];                                     // 0x01B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                DemoModePreviewStateIndex;                                 // 0x01B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9ORU[0x10];                                    // 0x01B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UKSWeaponSkeletalMeshComponent> WeaponMesh;                                                // 0x01C8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6JMF[0x10];                                    // 0x01D0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bEnableDemoPreviewMode;                                    // 0x01E0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCosmeticUpdatesHidden;                                    // 0x01E1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EWeaponStateNew                         CurrentWeaponState;                                        // 0x01E2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bOwningPawnInstigatedMostRecentDown;                       // 0x01E3(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bOwningWeaponInstigatedMostRecentDown;                     // 0x01E4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8O0D[0x3];                                     // 0x01E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DamageWithinTimePeriod;                                    // 0x01E8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TKEQ[0x4];                                     // 0x01EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                IdleCooldownTimer;                                         // 0x01F0(0x0008) (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                                DamageWithinTimePeriodTimer;                               // 0x01F8(0x0008) (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSWeaponAttachment_Reactive*                WepAttachReactive;                                         // 0x0200(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ProgressionIntA;                                           // 0x0208(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ProgressionIntB;                                           // 0x020C(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ProgressionIntC;                                           // 0x0210(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ProgressionFloatA;                                         // 0x0214(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ProgressionFloatB;                                         // 0x0218(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ProgressionFloatC;                                         // 0x021C(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTrackAIsResetting;                                        // 0x0220(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTrackBIsResetting;                                        // 0x0221(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTrackCIsResetting;                                        // 0x0222(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTrackAShouldResetOnNewWeapons;                            // 0x0223(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTrackBShouldResetOnNewWeapons;                            // 0x0224(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTrackCShouldResetOnNewWeapons;                            // 0x0225(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      PersistentCacheA;                                          // 0x0226(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      PersistentCacheB;                                          // 0x0227(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      PersistentCacheC;                                          // 0x0228(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      PersistentFlags;                                           // 0x0229(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_F5GT[0x6];                                     // 0x022A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(980);
		return ptr;
	}



	void WeaponPropAssigned();
	void UnhideCosmetics();
	void TriggerCosmetic(Killstreak_EReactiveTrigger Trigger);
	void SetSFXDampening(bool bShouldDampenSFX);
	void SetReactiveDemoMode(bool bSet);
	void SaveReactiveWrapProgression();
	void SaveIntProgression(Killstreak_ECosmeticPersistentDataCache DataCache, int InProgression);
	void SaveFloatProgression(Killstreak_ECosmeticPersistentDataCache DataCache, float InProgression);
	void ResetDamageWithinTimePeriod();
	void ResetCosmetic(Killstreak_EReactiveResetTrigger ResetTrigger);
	void PlayerDownedOrKilled(const struct FCombatEventInfo& EventInfo, bool bPlayerKilled);
	void OwningPawnInstigatedDamage(const struct FCombatEventInfo& DamageInfo);
	void OwningPawnAchievedMultiDown(int DownCount);
	void OwningComponentStateChanged(class UKSWeaponComponent* WeaponComponent, Killstreak_EWeaponStateNew OldState, Killstreak_EWeaponStateNew NewState);
	void OnWrapEventTriggered();
	void OnLoadedReactiveWrapProgression();
	void HideCosmetics();
	bool GetCurrentDemoState(struct FReactiveWrapMilestoneDisplay* DemoState);
	void AimModeChanged(class UKSWeaponComponent* WeaponComponent, Killstreak_EKSCharacterAimMode OldMode, Killstreak_EKSCharacterAimMode NewMode);
};

// Class Killstreak.KSAttachmentCompatRules_AllWeapons
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSAttachmentCompatRules_AllWeapons : public UKSAttachmentCompatRules
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(981);
		return ptr;
	}



};

// Class Killstreak.KSWeaponAssetDrop_MacGuffin
// 0x00C8 (FullSize[0x0910] - InheritedSize[0x0848])
class AKSWeaponAssetDrop_MacGuffin : public AKSWeaponAssetDrop
{
public:
	unsigned char                                      UnknownData_HI7V[0x8];                                     // 0x0848(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSObjectiveInfo                            ObjectiveInfo;                                             // 0x0850(0x0068) (Net, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FKSObjectiveTimerInfo                       ObjectiveTimerInfo;                                        // 0x08B8(0x0038) (Net, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FKSObjectiveCaptureInfo                     ObjectiveCaptureInfo;                                      // 0x08F0(0x0014) (Net, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X3PP[0x4];                                     // 0x0904(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      PointOfInterest;                                           // 0x0908(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(982);
		return ptr;
	}



	void OnRep_ObjectiveTimer();
	void OnObjectiveTimerTickEvent(float Time);
	void OnObjectiveTimerCompleteEvent();
	void OnObjectiveTimerActiveEvent(bool Active);
	void OnObjectiveStateChangedEvent();
	void OnObjectiveInactiveEvent();
	void OnObjectiveActiveEvent();
};

// Class Killstreak.KSNeutralBombDrop
// 0x0160 (FullSize[0x0A70] - InheritedSize[0x0910])
class AKSNeutralBombDrop : public AKSWeaponAssetDrop_MacGuffin
{
public:
	float                                              CurrentInteractionProgress;                                // 0x0910(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Z1U9[0x4];                                     // 0x0914(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSCharacter*                                CurrentInteractor;                                         // 0x0918(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NeutralPickupTime;                                         // 0x0920(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MJV4[0x4];                                     // 0x0924(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       NeutralPickupPrompt;                                       // 0x0928(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       NeutralPickupProgressText;                                 // 0x0940(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              DisarmTime;                                                // 0x0958(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LYUM[0x4];                                     // 0x095C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       DisarmPrompt;                                              // 0x0960(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       DisarmProgressText;                                        // 0x0978(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UClass*                                      DisarmInteractionType;                                     // 0x0990(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxDisarmInteractionDistance;                              // 0x0998(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7UT0[0x4];                                     // 0x099C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      MinimapDisplayWidget[0x28];                                // 0x099C(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      FullmapDisplayWidget[0x28];                                // 0x09C8(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      OverlayDisplayWidget[0x28];                                // 0x09F0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	struct FName                                       DisarmCameraName;                                          // 0x0A18(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DisarmCameraTransitionInTime;                              // 0x0A20(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DisarmCameraTransitionOutTime;                             // 0x0A24(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDisarmForceCameraShoulder;                                // 0x0A28(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_ECameraShoulder                         DisarmCameraShoulder;                                      // 0x0A29(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0GEY[0x2];                                     // 0x0A2A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DisarmCameraMaxRotation;                                   // 0x0A2C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               DisarmCameraRotationLockout;                               // 0x0A30(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLockPitch;                                                // 0x0A31(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLockYaw;                                                  // 0x0A32(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDisarmCameraShake;                                        // 0x0A33(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KHXG[0x4];                                     // 0x0A34(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      DisarmCameraShake;                                         // 0x0A38(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2VIW[0x4];                                     // 0x0A40(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                TeamSpottingBitmask;                                       // 0x0A44(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldAutomaticallyBeSpotted;                             // 0x0A48(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XVJB[0x3];                                     // 0x0A49(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxSpottingRange;                                          // 0x0A4C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpottingSweepRadius;                                       // 0x0A50(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              GroundCheckDistance;                                       // 0x0A54(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SGAL[0x8];                                     // 0x0A58(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       SoundEventName;                                            // 0x0A60(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SoundEventLoudness;                                        // 0x0A68(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RepeatTimeToNotifyBots;                                    // 0x0A6C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(983);
		return ptr;
	}



	bool Respawn();
	void STATIC_RequestBombReset(class UObject* WorldContextObject);
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void NotifyBots();
	bool IsSpottedByTeam(class AKSTeamState* Team);
	bool IsSpottedByPlayer(class AController* Controller);
	float GetCurrentInteractionProgress();
	class AKSLootSiteBase* STATIC_GetBestBombSpawner(class UObject* WorldContextObject);
	void ForceExplode();
	void ExplodeCosmetic();
	void Explode();
};

// Class Killstreak.KSAttackBombDrop
// 0x0000 (FullSize[0x0A70] - InheritedSize[0x0A70])
class AKSAttackBombDrop : public AKSNeutralBombDrop
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(984);
		return ptr;
	}



};

// Class Killstreak.KSAudioManager
// 0x0120 (FullSize[0x0148] - InheritedSize[0x0028])
class UKSAudioManager : public UObject
{
public:
	class UKSAudioPlayerStateParameterData*            AudioPlayerStateParameters;                                // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_R05W[0x20];                                    // 0x0030(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FString, class UDataTable*>            LoadedAudioDataTables;                                     // 0x0050(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6N3J[0x80];                                    // 0x00A0(0x0080) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UKSGameInstance>              WeakGameInstance;                                          // 0x0120(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_23JJ[0x20];                                    // 0x0128(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(985);
		return ptr;
	}



	void HandleTeamCinematicStarted();
	void HandleSkydiveStarted(class AKSCharacter* Diver);
	void HandleSkydiveSkipped(class AKSCharacter* Diver);
	void HandleSkydiveEnded(class AKSCharacter* Diver);
	void HandleRoundHasEnded(int RoundWinner, int MatchWinner);
	void HandlePostSelectionPhaseBeginFadeOut();
	void HandlePhaseChanged(const struct FMatchPhase& NewPhase, const struct FMatchPhase& PreviousPhase);
	void HandleMatchTimerUpdate(float TimeInWholeSeconds);
	void HandleLoadingScreenEnded();
	void HandleLoadingScreenBegan();
	void HandleLeavingMap();
	void HandleLastManStanding(class AKSPlayerState* LastPlayer);
	void HandleKillcamStarted();
	void HandleJobSelectionComponentReady(class UKSJobSelectionComponent* JobSelectionComponent);
	void HandleGameStateEndPlay(class AKSGameState* GameState);
	void HandleGameStateBeginPlay(class AKSGameState* GameState);
	void HandleGameModeReceived();
	void HandleDropshipDoorOpened();
	void HandleControlPointCaptured(class AKSTeamState* CapturingTeam);
	void HandleBanPhaseFinished();
};

// Class Killstreak.KSAudioPlayer
// 0x02E0 (FullSize[0x0500] - InheritedSize[0x0220])
class AKSAudioPlayer : public AInfo
{
public:
	TMap<Killstreak_EGameplayAudioEvent, class UKSAudioPlayerEventActionData*> GameplayEventActionMap;                                    // 0x0220(0x0050) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<struct FString, class UKSAudioPlayerEventActionData*> MapLevelStartEventActionMap;                               // 0x0270(0x0050) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<struct FString, class UKSAudioPlayerEventActionData*> MapLevelEndEventActionMap;                                 // 0x02C0(0x0050) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<struct FString, class UKSAudioPlayerEventActionData*> GameModeStartEventActionMap;                               // 0x0310(0x0050) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<struct FString, class UKSAudioPlayerEventActionData*> GameModeEndEventActionMap;                                 // 0x0360(0x0050) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<struct FString, class UKSAudioPlayerEventActionData*> PlayerCharacterStartEventActionMap;                        // 0x03B0(0x0050) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<struct FString, class UKSAudioPlayerEventActionData*> PlayerCharacterEndEventActionMap;                          // 0x0400(0x0050) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<struct FString, class UKSAudioPlayerEventActionData*> MusicPackStartEventActionMap;                              // 0x0450(0x0050) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<struct FString, class UKSAudioPlayerEventActionData*> MusicPackEndEventActionMap;                                // 0x04A0(0x0050) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UKSAudioPlayerEventActionData*               AudioPlayerBeginPlayEventActionData;                       // 0x04F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSAudioPlayerEventActionData*               AudioPlayerEndPlayEventActionData;                         // 0x04F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(986);
		return ptr;
	}



	TArray<struct FString> ComposeEventNamePriorityArray(const struct FString& EventName, class UKSAudioPlayerStateParameterData* CurrentStateParameters);
	TArray<struct FString> ComposeBankNamePriorityArray(const struct FString& BankPrefix, class UKSAudioPlayerStateParameterData* CurrentStateParameters);
};

// Class Killstreak.KSAudioPlayerEventActionData
// 0x0070 (FullSize[0x00A0] - InheritedSize[0x0030])
class UKSAudioPlayerEventActionData : public UDataAsset
{
public:
	TArray<struct FString>                             BanksToLoad;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FString>                             BanksToUnload;                                             // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FString>                             ContainersToPlay;                                          // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FString>                             ContainersToStop;                                          // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FString>                             TablesToLoad;                                              // 0x0070(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FString>                             TablesToUnload;                                            // 0x0080(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FString>                             EventsToPost;                                              // 0x0090(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(987);
		return ptr;
	}



};

// Class Killstreak.KSAudioPlayerStateParameterData
// 0x0090 (FullSize[0x00B8] - InheritedSize[0x0028])
class UKSAudioPlayerStateParameterData : public UObject
{
public:
	struct FString                                     ActiveGameMode;                                            // 0x0028(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     ActiveMapLevel;                                            // 0x0038(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     ActiveMusicPack;                                           // 0x0048(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     ActivePlayerCharacter;                                     // 0x0058(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               IsSpectating;                                              // 0x0068(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ITX5[0x7];                                     // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     PreviousGameMode;                                          // 0x0070(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     PreviousMapLevel;                                          // 0x0080(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     PreviousMusicPack;                                         // 0x0090(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     PreviousPlayerCharacter;                                   // 0x00A0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               PreviousIsSpectating;                                      // 0x00B0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F4QR[0x7];                                     // 0x00B1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(988);
		return ptr;
	}



	bool HasActivePlayerCharacter();
	bool HasActiveMusicPack();
	bool HasActiveMapLevel();
	bool HasActiveGameMode();
	struct FString GetPreviousPlayerCharacter();
	struct FString GetPreviousMusicPack();
	struct FString GetPreviousMapLevel();
	bool GetPreviousIsSpectating();
	struct FString GetPreviousGameMode();
	bool GetIsSpectating();
	struct FString GetActivePlayerCharacter();
	struct FString GetActiveMusicPack();
	struct FString GetActiveMapLevel();
	struct FString GetActiveGameMode();
};

// Class Killstreak.KSAutoPickupComponent
// 0x00B0 (FullSize[0x0160] - InheritedSize[0x00B0])
class UKSAutoPickupComponent : public UActorComponent
{
public:
	float                                              AutoPickupMinPickupTimeSinceCreation;                      // 0x00B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AutoPickupDistance;                                        // 0x00B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AutoPickupQueryInterval;                                   // 0x00B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bActivateAutoPickups;                                      // 0x00BC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_A357[0x3];                                     // 0x00BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UKSItem*, int>                          ItemPriorityMap;                                           // 0x00C0(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                               bAutoPickupClusivityEnabled;                               // 0x0110(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SK22[0x7];                                     // 0x0111(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagQuery                           ClusivityQuery;                                            // 0x0118(0x0048) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(989);
		return ptr;
	}



	void OnOwnerPossessionChanged(class AController* Controller);
	void OnAutoPickupPreferenceChanged(bool bAutoPickupEnabled);
};

// Class Killstreak.KSAvatar
// 0x0030 (FullSize[0x0280] - InheritedSize[0x0250])
class UKSAvatar : public UKSItem
{
public:
	unsigned char                                      LargeAvatarIcon[0x28];                                     // 0x0250(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UIconInfo*                                   LargeAvatarIconInfo;                                       // 0x0278(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, NoClear, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(990);
		return ptr;
	}



	void GetSoftLargeAvatarIcon();
	class UIconInfo* GetLargeAvatarInfo();
};

// Class Killstreak.KSAvenger
// 0x0020 (FullSize[0x00C0] - InheritedSize[0x00A0])
class UKSAvenger : public UKSAccoladeTracker
{
public:
	unsigned char                                      UnknownData_9HGY[0x8];                                     // 0x00A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FPlayerCombatInfo>                   PlayerTrackers;                                            // 0x00A8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxTrackerTimer;                                           // 0x00B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BEEG[0x4];                                     // 0x00BC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(991);
		return ptr;
	}



	void StoreCombatInfo(const struct FCombatEventInfo& ElimEvent);
	void RemoveTracker(const struct FPlayerCombatInfo& CurrentTrackPlayer);
	bool CheckPlayerTrackers(class AKSPlayerState* Instigator, class AKSPlayerState* Victim);
};

// Class Killstreak.KSAwardsManager
// 0x0000 (FullSize[0x0210] - InheritedSize[0x0210])
class UKSAwardsManager : public UKSActivityManagerBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(992);
		return ptr;
	}



};

// Class Killstreak.KSBanner
// 0x0060 (FullSize[0x02B0] - InheritedSize[0x0250])
class UKSBanner : public UKSItem
{
public:
	unsigned char                                      SmallBannerIcon[0x28];                                     // 0x0250(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UIconInfo*                                   SmallBannerIconInfo;                                       // 0x0278(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, NoClear, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      LargeBannerIcon[0x28];                                     // 0x0280(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UIconInfo*                                   LargeBannerIconInfo;                                       // 0x02A8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, NoClear, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(993);
		return ptr;
	}



	void GetSoftSmallBannerIcon();
	void GetSoftLargeBannerIcon();
	class UIconInfo* GetSmallBannerInfo();
	class UIconInfo* GetLargeBannerInfo();
};

// Class Killstreak.KSBattlePassProgressionManager
// 0x0018 (FullSize[0x0228] - InheritedSize[0x0210])
class UKSBattlePassProgressionManager : public UKSActivityManagerBase
{
public:
	struct FScriptMulticastDelegate                    OnBattlePassProgressionActivitiesReady;                    // 0x0210(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               BattlePassReady;                                           // 0x0220(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6LAP[0x7];                                     // 0x0221(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(994);
		return ptr;
	}



	bool ShouldDisplayMiniBattlePass();
	bool ShouldDisplayBattlePass();
	bool IsBattlePassPurchaseItem(class UPUMG_StoreItem* StoreItem);
	bool HasPremiumBattlePass();
	TArray<class UPUMG_StoreItem*> GetTierRewardItems(int StartTier, int EndTier);
	struct FGameplayTag GetSeasonTag();
	bool GetSeasonalChallengeInstances(TArray<class UKSActivityInstance*>* ActivityInstances, class AKSPlayerController* Player, class AKSPlayerState* PlayerState);
	TArray<class UPUMG_StoreItem*> GetPurchaseConfirmDisplayItems(class UPUMG_StoreItem* BattlePassPurchaseItem, int Quantity);
	TArray<class UPUMG_StoreItem*> GetPurchasableBattlePassBundles();
	int GetMiniBattlePassXpItemId();
	int GetLockedRogueBucksCount();
	int GetLockedItemsCount(bool IncludeInstantUnlocks, int AdditionalTiers);
	TArray<class UPUMG_StoreItem*> GetLockedItems(bool IncludeInstantUnlock, int AdditionalTiers);
	Killstreak_EKSItemBattlePassSource GetItemBattlePassSource(class UPUMG_StoreItem* StoreItem);
	class UKSActivityInstance* GetHighestCompletionUnlockedSeasonalChallenge(class AKSPlayerController* Player, class AKSPlayerState* PlayerState);
	class UKSActivityInstance* GetCurrentSeasonMasteryInstance(class AKSPlayerController* Player, class AKSPlayerState* PlayerState);
	int GetBattlePassXpItemId();
	int64_t GetBattlePassPremiumItemId();
	class UKSActivityInstance* GetBattlePassActivityInstance();
	struct FText GetBattleBassTimeRemainingText();
	TArray<class UPUMG_StoreItem*> GetActiveTierBundles();
};

// Class Killstreak.KSBehaviorRuleBaseComponent
// 0x0000 (FullSize[0x00B0] - InheritedSize[0x00B0])
class UKSBehaviorRuleBaseComponent : public UKSGameRuleComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(996);
		return ptr;
	}



	void HandleTeamSidesFlipped();
};

// Class Killstreak.KSBehaviorRuleComponent
// 0x0000 (FullSize[0x00B0] - InheritedSize[0x00B0])
class UKSBehaviorRuleComponent : public UKSBehaviorRuleBaseComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(997);
		return ptr;
	}



	void ClearBehaviorChange();
	void ApplyBehaviorChange();
};

// Class Killstreak.KSPlayerBehaviorRuleComponent
// 0x0018 (FullSize[0x00C8] - InheritedSize[0x00B0])
class UKSPlayerBehaviorRuleComponent : public UKSBehaviorRuleBaseComponent
{
public:
	class AController*                                 FilteredPlayer;                                            // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AKSTeamState*                                FilteredTeam;                                              // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EPlayerBehaviorChangeReact              PlayerSetChangeReaction;                                   // 0x00C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K4XW[0x7];                                     // 0x00C1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(998);
		return ptr;
	}



	void SetTeamFilter(class AKSTeamState* NewFilteredTeam);
	void SetPlayerFilterByPlayerState(class AKSPlayerState* NewFilteredPlayer);
	void SetPlayerFilter(class AController* NewFilteredPlayer);
	void OnPlayerFilterControllerLogout(bool bWasActive);
	void ClearTeamFilter();
	void ClearPlayerFilter();
	void ClearBehaviorChange(TArray<class AController*> Players);
	void ApplyBehaviorChange(TArray<class AController*> Players);
};

// Class Killstreak.KSBlendableCameraModifier
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
class UKSBlendableCameraModifier : public UCameraModifier
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1000);
		return ptr;
	}



};

// Class Killstreak.KSFXCurveComponent
// 0x0080 (FullSize[0x0130] - InheritedSize[0x00B0])
class UKSFXCurveComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_B2PB[0x50];                                    // 0x00B0(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInstanceDynamic*                    PostProcessMID;                                            // 0x0100(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                          PostProcessMIDParent;                                      // 0x0108(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    ParticleSystem;                                            // 0x0110(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             ParticleSystemParent;                                      // 0x0118(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPlaying;                                                  // 0x0120(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bReversing;                                                // 0x0121(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLooping;                                                  // 0x0122(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S5ST[0x1];                                     // 0x0123(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CurrentTime;                                               // 0x0124(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LS49[0x8];                                     // 0x0128(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1001);
		return ptr;
	}



	void UpdateScalarTrack(const struct FName& TrackName, float TrackValue);
	void UpdateColorTrack(const struct FName& TrackName, const struct FLinearColor& TrackValue);
	void Stop();
	void Reverse();
	void ResetTime();
	void Play();
	bool IsPlaying();
	struct FName GetFxID();
	class AKSCharacter* GetCharacterOwner();
	class AKSCharacterFoundation* GetCharacterFoundationOwner();
};

// Class Killstreak.KSBloodSplatterComponent
// 0x0008 (FullSize[0x0138] - InheritedSize[0x0130])
class UKSBloodSplatterComponent : public UKSFXCurveComponent
{
public:
	float                                              Damage;                                                    // 0x0130(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2LN9[0x4];                                     // 0x0134(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1002);
		return ptr;
	}



	void AddDamageInstance(float DamageAmount, const struct FVector& DamageOrigin);
};

// Class Killstreak.KSBlueprintableInteractable
// 0x00D0 (FullSize[0x02F0] - InheritedSize[0x0220])
class AKSBlueprintableInteractable : public AActor
{
public:
	unsigned char                                      UnknownData_1969[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                 // 0x0228(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Duration;                                                  // 0x0230(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseCollisionForInteractionDistance;                       // 0x0234(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanInteractFromBehind;                                    // 0x0235(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanInteractWhileDowned;                                   // 0x0236(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldDisplayInteractionProgress;                         // 0x0237(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       InteractionName;                                           // 0x0238(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxNumberOfInteractors;                                    // 0x0240(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                InteractionPriority;                                       // 0x0244(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bInteractionAllowed;                                       // 0x0248(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6NBU[0x7];                                     // 0x0249(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      InteractionType;                                           // 0x0250(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPrimitiveComponent*>                 OutlinedComponents;                                        // 0x0258(0x0010) (ExportObject, ZeroConstructor, Transient, DuplicateTransient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IWBC[0x10];                                    // 0x0268(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UKSInteractionManager*>               ActiveInteractions;                                        // 0x0278(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                NumActiveInteractions;                                     // 0x0288(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TC2Y[0x4];                                     // 0x028C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       ProgressText;                                              // 0x0290(0x0018) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FText                                       PromptText;                                                // 0x02A8(0x0018) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnInteractionStarted;                                      // 0x02C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnInteractionEnded;                                        // 0x02D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnInteractionComplete;                                     // 0x02E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1003);
		return ptr;
	}



	void SetInteractability(bool NewInteractable);
	void InterruptInteraction(class AKSCharacter* InteractingCharacter, bool bForce);
	void InterruptAllInteractions(bool bForce);
	bool InternalCanInteractOnPress(class AKSCharacter* InteractingCharacter);
	bool InternalCanInteractOnHold(class AKSCharacter* InteractingCharacter);
	void BlueprintInteractionStarted(class AKSCharacter* InteractingCharacter, float InDuration);
	struct FVector BlueprintInteractionPoint();
	void BlueprintInteractionEnded(class AKSCharacter* InteractingCharacter);
	void AddOutlinedPrimitiveComponent(class UPrimitiveComponent* InComponent);
};

// Class Killstreak.KSBlueprintableAmmoRefillCrate
// 0x0000 (FullSize[0x02F0] - InheritedSize[0x02F0])
class AKSBlueprintableAmmoRefillCrate : public AKSBlueprintableInteractable
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1004);
		return ptr;
	}



	void ReloadGrenadeAmmo(class AKSPlayerState* InteractingCharacterState);
};

// Class Killstreak.KSInteractionState
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UKSInteractionState : public UObject
{
public:
	Killstreak_EKSInteractionResult                    Result;                                                    // 0x0028(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VVH6[0x7];                                     // 0x0029(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1005);
		return ptr;
	}



};

// Class Killstreak.KSHoldOrTapStart
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UKSHoldOrTapStart : public UKSInteractionState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1006);
		return ptr;
	}



};

// Class Killstreak.KSBlueprintStart
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UKSBlueprintStart : public UKSHoldOrTapStart
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1007);
		return ptr;
	}



};

// Class Killstreak.KSWaitingForTimer
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UKSWaitingForTimer : public UKSInteractionState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1008);
		return ptr;
	}



};

// Class Killstreak.KSBlueprintWaiting
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UKSBlueprintWaiting : public UKSWaitingForTimer
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1009);
		return ptr;
	}



};

// Class Killstreak.KSBlueprintFunctionLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1010);
		return ptr;
	}



	void STATIC_UpdateProgressForUniqueItem(class UKSActivityInstance* ActivityInstance, class AKSPlayerState* PlayerState, int ItemIdToCheck, TArray<int> UniqueSlotItemIds, TArray<int> UniqueSlotLootTableItemIds);
	class UTracerParticleSystemComponent* STATIC_SpawnTracerEmitterWithRotation(class UObject* WorldContextObject, class UParticleSystem* EmitterTemplate, const struct FVector& start, const struct FVector& end, float TravelSpeed, const struct FRotator& Rotation);
	class UTracerParticleSystemComponent* STATIC_SpawnTracerEmitter(class UObject* WorldContextObject, class UParticleSystem* EmitterTemplate, const struct FVector& start, const struct FVector& end, float TravelSpeed);
	class UTracerStaticMeshComponent* STATIC_SpawnMeshTracerWithRotation(class UObject* WorldContextObject, class UStaticMesh* StaticMesh, const struct FVector& start, const struct FVector& end, class AActor* Instigator, class UMaterial* FriendlyMaterial, class UMaterialInstance* EnemyMaterial, float TravelSpeed, const struct FRotator& Rotation);
	class UTracerStaticMeshComponent* STATIC_SpawnMeshTracer(class UObject* WorldContextObject, class UStaticMesh* StaticMesh, const struct FVector& start, const struct FVector& end, class AActor* Instigator, class UMaterial* FriendlyMaterial, class UMaterialInstance* EnemyMaterial, float TravelSpeed);
	class UDecalComponent* STATIC_SpawnImpactDecalAtLocation(class UObject* WorldContextObject, class UMaterialInterface* DecalMaterial, const struct FVector& DecalSize, const struct FVector& Location, const struct FRotator& Rotation, float Lifespan);
	class UActorComponent* STATIC_SpawnComponentFromClass(class UClass* Class, class AActor* Owner);
	void STATIC_SortPlayerEntryStatsByPoints(TArray<struct FPlayerEntryStats>* PlayerEntryStatsArray, bool ShouldSortDescending);
	void STATIC_SortObjectsByName(TArray<class UObject*>* ObjectsToSort, bool bReverseSort);
	void STATIC_SortKSPlayerStatesByMoney(TArray<class AKSPlayerState*>* PlayerStates, bool ShouldSortDescending);
	void STATIC_SortKSPlayerDataByMoney(TArray<class UKSPersistentPlayerData*>* PlayerData, bool ShouldSortDescending);
	void STATIC_SortJobRoles(TArray<class UKSJobRole*>* InRoles);
	void STATIC_ShowSlateNotification(const struct FString& MessageToShow, float DisplayTimeSeconds);
	bool STATIC_ShouldPlayCosmeticLocally(class AKSPlayerState* UsingPlayerState, class AKSPlayerState* LocalPlayerState, Killstreak_EMercCosmeticSlot CosmeticSlot);
	bool STATIC_ShouldDropshipDoorBeOpen(class UObject* WorldContextObject);
	void STATIC_SetupSkeletalMeshLODReductionGroups(class USkeletalMesh* SkeletalMesh, TArray<struct FSkeletalMeshMaterialToReductionGroup> InReductionGroupMap);
	bool STATIC_SetUniqueItemSlotIfEmpty(class UKSActivityInstance* ActivityInstance, class AKSPlayerState* PlayerState, int ItemIdToCheck, int UniqueSlotItemId, int UniqueSlotLootTableItemId, int ProgressNumber);
	void STATIC_SetTracerInitialOffset(class UTracerStaticMeshComponent* TracerMesh, float Offset);
	bool STATIC_ScoreboardStatsHasValidInstanceId(const struct FScoreboardStats& Stats);
	void STATIC_ResetRenderTargetBuffer();
	void STATIC_RemoveRowFromLegacyAssetDataTable(class UDataTable* DataTable, const struct FName& RowName);
	bool STATIC_QuickMeshMerge(TArray<class USkeletalMesh*> SourceMeshList, class USkeletalMesh** OutMesh);
	void STATIC_ProcessTakePointHitDamage(class AKSCharacter* HitCharacter, const struct FVector& RelativeHitLocation, const struct FVector& RelativeHitNormal, class AActor* DamageCauser, struct FVector* WorldHitLocation, struct FVector* WorldHitNormal, struct FVector* VectorToHitSource, Killstreak_EKSMovementDirection* HitDirection);
	void STATIC_PrintStringInShipping(class UObject* WorldContextObject, const struct FString& inString, bool bPrintToScreen, bool bPrintToLog, const struct FLinearColor& TextColor, float Duration);
	int STATIC_PostEventKS(class UAkAudioEvent* AkEvent, class AActor* Actor, int CallbackMask, const struct FScriptDelegate& PostEventCallback, bool bStopWhenAttachedToDestroyed, const struct FString& EventName, Killstreak_EOcclusionType OcclusionType, bool UseDistance, bool UseDirection);
	int STATIC_PostEvent(class UAkAudioEvent* AkEvent, class UObject* GameObject, bool bStopWhenAttachedToDestroyed, const struct FString& EventName);
	void STATIC_PlayWorldCameraShake1P3P(class UObject* WorldContextObject, class UClass* Shake1P, class UClass* Shake3P, const struct FVector& Epicenter, float InnerRadius, float OuterRadius, float Falloff, bool bOrientShakeTowardsEpicenter);
	void STATIC_KSConvertRenderTargetToTexture2D(class UObject* WorldContextObject, class UTextureRenderTarget2D* RenderTarget, class UTexture2D* Texture);
	bool STATIC_ItemHasToggleRelationship(class AKSPlayerShop* PlayerShop, const struct FShopItem& Item, bool bTwoPrimaries);
	bool STATIC_IsViewportWorld(class UObject* WorldContextObject);
	bool STATIC_IsRecurringDamageTypeClass(class UClass* DamageTypeClass);
	bool STATIC_IsRecurringDamageType(class UDamageType* DamageType);
	bool STATIC_IsRecurringDamageCategory(Killstreak_EDamageCategory DamageCategory);
	bool STATIC_IsPlayerMuted(class AKSPlayerState* KSPlayerState);
	bool STATIC_IsLowerPriorityReveal(Killstreak_EKSRevealPriority RevealPriority1, Killstreak_EKSRevealPriority RevealPriority2);
	bool STATIC_IsKillCamWorld(class UObject* WorldContextObject);
	bool STATIC_IsJobOnFreeRotation(class UKSJobItem* JobItem);
	bool STATIC_IsItemAvailable();
	bool STATIC_IsInViewportWorld(class AActor* Actor);
	bool STATIC_IsInKillCamWorld(class AActor* Actor);
	bool STATIC_IsHigherPriorityReveal(Killstreak_EKSRevealPriority RevealPriority1, Killstreak_EKSRevealPriority RevealPriority2);
	bool STATIC_IsExperimentActive(const struct FString& ExpermentName);
	bool STATIC_IsChunkInstalling(int ChunkId);
	bool STATIC_IsChunkAvailable(int ChunkId);
	bool STATIC_IsAssetAvailable(const struct FAssetData& AssetData);
	bool STATIC_IsAnyChunkInstalling();
	bool STATIC_IsAlphabeticalOrder(const struct FString& StringA, const struct FString& StringB, TEnumAsByte<CoreUObject_ESearchCase> SearchCase);
	void STATIC_HideOutline(class UPrimitiveComponent* TargetComponent);
	bool STATIC_HasAnyEnemyTeamsFor(class UObject* WorldContextObject, class AActor* Actor);
	bool STATIC_HasAnyEnemiesFor(class UObject* WorldContextObject, class AActor* Actor);
	struct FVector STATIC_GetWorldMinLocation();
	bool STATIC_GetTotalRounds(class UObject* WorldContextObject, int* TotalRounds);
	void STATIC_GetTeamsWithHighestIntraScore(class UObject* WorldContextObject, TArray<class AKSTeamState*>* TeamsWithHighestIntraScore, int* OutScore);
	TArray<class AKSCharacter*> STATIC_GetTeammatesFor(class UObject* WorldContextObject, class AActor* Actor, bool bIncludeSelf);
	class AKSTeamState* STATIC_GetTeamFor(class UObject* WorldContextObject, class AActor* Actor);
	void STATIC_GetSkinBundleBySkinId(int SkinId);
	int STATIC_GetSkeletalMeshSettingsLODNum(class USkeletalMeshLODSettings* SkeletalMeshLODSettings);
	int STATIC_GetSkeletalMeshLODNum(class USkeletalMesh* SkeletalMesh);
	int STATIC_GetSideForTeam(class UObject* WorldContextObject, int TeamNum);
	int STATIC_GetSideFor(class AActor* Actor);
	class AKSPlayerShop* STATIC_GetShopForPlayer(class AKSPlayerState* PlayerState);
	bool STATIC_GetSettingAsInt(const struct FName& Name, int* OutInt);
	bool STATIC_GetSettingAsFloat(const struct FName& Name, float* OutFloat);
	bool STATIC_GetSettingAsBool(const struct FName& Name, bool* OutBool);
	void STATIC_GetScreenSpaceAccuracyRadius(class APlayerController* PlayerController, float Accuracy, float* ViewPortRadius);
	bool STATIC_GetRoundsToWin(class UObject* WorldContextObject, int* RoundsToWin);
	int STATIC_GetRevealPriorityAsInt(Killstreak_EKSRevealPriority RevealPriority);
	int STATIC_GetRarityValue(const struct FGameplayTagContainer& TagContainer);
	struct FRotator STATIC_GetRandomDecalRotationForNormal(const struct FVector& Normal, float minRotation, float maxRotation);
	struct FKSOutlineParameters STATIC_GetOutlineParameters(Killstreak_EPlayerSilhouetteType ColorType, bool bHideWhenOccluded, bool bShouldFill, bool bIsHot, bool bIsFriendly, bool bShouldFade, bool bShowOnlyOccludedParts);
	unsigned char STATIC_GetOutlineCustomDepth(Killstreak_EPlayerSilhouetteType ColorType, bool bHideWhenOccluded, bool bShouldFill, bool bIsHot, bool bIsFriendly);
	class UKSStatWrapper* STATIC_GetObjectForStatWrapperClass(class UClass* InStatWrapperClass);
	int STATIC_GetNumSlotsForCosmeticSlot(Killstreak_EMercCosmeticSlot CosmeticSlot);
	int STATIC_GetNumEventAssistantsForCombatEvent(struct FCombatEventInfo* CombatEvent);
	int STATIC_GetNumberOfEmittersInSystem(class UParticleSystemComponent* SystemComponent);
	struct FGameplayTag STATIC_GetNextEquipPoint(const struct FGameplayTag& EquipPoint);
	struct FKSOutlineParameters STATIC_GetNewOutlineParameters(const struct FLinearColor& RevealColor, bool bHideWhenOccluded, bool bShouldFill, bool bIsHot, bool bIsFriendly, bool bShouldFade, bool bShowOnlyOccludedParts);
	void STATIC_GetMinimapTextureForMap(const struct FString& mapName);
	class AKSMiniMapAssistant* STATIC_GetMiniMapAssistant(class UObject* WorldContextObject);
	struct FVector STATIC_GetMeshOffsetForSimulatedCharacter(class AKSCharacter* SimulatedCharacter);
	class APlayerController* STATIC_GetLocalPlayerController(class UObject* WorldContextObject, int PlayerIndex);
	class AKSWorldSettings* STATIC_GetKSWorldSettings(class UObject* WorldContextObject);
	class AKSGameState_RoundGame* STATIC_GetKSGameState_RoundGame(class UObject* WorldContextObject);
	class AKSGameState_Modular* STATIC_GetKSGameState_Modular(class UObject* WorldContextObject);
	class AKSGameState* STATIC_GetKSGameState(class UObject* WorldContextObject);
	class AKSGameMode_RoundGame* STATIC_GetKSGameMode_RoundGame(class UObject* WorldContextObject);
	class AKSGameMode_Modular* STATIC_GetKSGameMode_Modular(class UObject* WorldContextObject);
	class AKSGameMode* STATIC_GetKSGameMode(class UObject* WorldContextObject);
	class UKSKillCam* STATIC_GetKillCamForPlayer(class UObject* WorldContextObject, int LocalPlayerIndex);
	int STATIC_GetKillCamActorGuidFor(class UObject* WorldContextObject, class AActor* Actor);
	void STATIC_GetJobsOnFreeRotation(TArray<int>* OutJobIds);
	Killstreak_EKSRevealPriority STATIC_GetIntAsRevealPriority(int RevealPriorityInt);
	struct FString STATIC_GetInstanceIdFromScoreboardStats(const struct FScoreboardStats& Stats);
	struct FGameplayTag STATIC_GetGameplayTagForWeaponType(Killstreak_EKSWeaponCategoryType WeaponType);
	struct FGameplayTag STATIC_GetGameplayTagByStringAndIndex(const struct FString& StartingString, int EndingIndex);
	struct FGameplayTag STATIC_GetGameplayTagByNameAndIndex(const struct FName& StartingName, int EndingIndex);
	struct FText STATIC_GetFormattedTime(const struct FTimespan& InTimespan, bool IsShorthand);
	class AKSAnnouncer* STATIC_GetFirstAnnouncer(class UObject* WorldContextObject);
	class APlayerState* STATIC_GetEventAssistantAtIndexForCombatEvent(struct FCombatEventInfo* CombatEvent, int Index);
	int STATIC_GetEquipPointIndex(const struct FGameplayTag& EquipPoint);
	struct FString STATIC_GetEquipPointAsStringWithoutIndex(const struct FGameplayTag& EquipPoint);
	TArray<class AKSTeamState*> STATIC_GetEnemyTeamsFor(class UObject* WorldContextObject, class AActor* Actor);
	TArray<class AKSCharacter*> STATIC_GetEnemiesFor(class UObject* WorldContextObject, class AActor* Actor);
	struct FVector STATIC_GetEndTraceLocation(const struct FAimData& Aim, float Range);
	bool STATIC_GetCustomRarityColorName(class UDataTable* QuantityRarityDT, class UPUMG_StoreItem* StoreItem, struct FGameplayTagContainer* RarityTag);
	void STATIC_GetCurrentFrameTimestamp(struct FDateTime* Timestamp);
	Killstreak_EMercCosmeticSlot STATIC_GetCosmeticSlotForVoicelineType(Killstreak_EKSVoicelineType VoicelineType);
	float STATIC_GetAnimMontageSectionLength(class UAnimMontage* TargetMontage, const struct FName& SectionName);
	void STATIC_GetAllWeaponComponents(TArray<class UKSWeaponComponent*>* OutWeaponComponents);
	TArray<struct FItemTableElement> STATIC_GetAllItemTableElements(class UDataTable* InDataTable, TArray<struct FName>* OutRowNames);
	void STATIC_GetAllEquipment(TArray<class UObject*>* OutEquipment);
	int STATIC_FindSkinForPlayer(class AKSPlayerController* PlayerController, int JobId);
	int STATIC_FindSkinForLocalPlayer(int JobId);
	class AKSPlayerState* STATIC_FindPlayerWithBestScoreOnTeam(class AKSTeamState* Team, bool bIncludeBots, bool bHighestWins);
	class AKSPlayerState* STATIC_FindPlayerWithBestScore(TArray<class AKSPlayerState*> PlayerStates, bool bHighestWins);
	class UActorComponent* STATIC_FindDefaultComponentByClass(class UClass* InActorClass, class UClass* InComponentClass);
	void STATIC_FadeOut(class UObject* WorldContextObject, float FadeOutDuration, float FadeDelay, float FadeOutSafeTime);
	void STATIC_FadeIn(class UObject* WorldContextObject, float FadeInDuration, float FadeDelay);
	bool STATIC_ExportCSVData(const struct FString& Filename, TArray<struct FKSCSVRow> CSVRows, bool AppendTime, bool AllowOverwriting, const struct FString& SaveDirectory);
	class USphereComponent* STATIC_CreateSphereComponentFor(class UObject* WorldContextObject, class AActor* Owner, float Radius, const struct FTransform& Transform);
	TArray<Killstreak_EMercCosmeticSlot> STATIC_CreateRadialMenuCosmeticSlots();
	void STATIC_ConvertActorToRevealableScriptInterface(class AActor* AActorToConvert);
	void STATIC_ApplyOutlineParameters(const struct FKSOutlineParameters& OutlineParameters, class UPrimitiveComponent* TargetComponent, bool bEnabled);
	bool STATIC_AllowCheats(class APlayerController* PlayerController);
	void STATIC_AddStaticMeshToLegacyAssetDataTable(class UDataTable* DataTable, const struct FName& RowName, class UStaticMesh* Asset);
	void STATIC_AddSkeletalMeshToLegacyAssetDataTable(class UDataTable* DataTable, const struct FName& RowName, class USkeletalMesh* Asset);
	void STATIC_AddRowToLegacyAssetDataTable(class UDataTable* DataTable, const struct FName& RowName, const struct FHardAssetTableRow& Row);
	void STATIC_AddParticleSystemToLegacyAssetDataTable(class UDataTable* DataTable, const struct FName& RowName, class UParticleSystem* Asset);
	void STATIC_AddMaterialInterfaceToLegacyAssetDataTable(class UDataTable* DataTable, const struct FName& RowName, class UMaterialInterface* Asset);
	void STATIC_AddClassToLegacyAssetDataTable(class UDataTable* DataTable, const struct FName& RowName, class UClass* Asset);
	void STATIC_AddAudioEventToLegacyAssetDataTable(class UDataTable* DataTable, const struct FName& RowName, class UAkAudioEvent* Asset);
	void STATIC_AddAnimationAssetToLegacyAssetDataTable(class UDataTable* DataTable, const struct FName& RowName, class UAnimationAsset* Asset);
};

// Class Killstreak.KSCurrency
// 0x0080 (FullSize[0x02D0] - InheritedSize[0x0250])
class UKSCurrency : public UKSItem
{
public:
	bool                                               IsDLCVoucher;                                              // 0x0250(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PCTR[0x3];                                     // 0x0251(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SortOrder;                                                 // 0x0254(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      CurrencyDataByQtyTable[0x28];                              // 0x0258(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      FullSplash[0x28];                                          // 0x0280(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      CurrencySmallIcon[0x28];                                   // 0x02A8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1011);
		return ptr;
	}



	void GetSoftFullSplashImage();
	void GetSoftCurrencySmallIcon();
	bool GetCurrencyDataForQuantity(int Quantity, struct FCurrencyImageRow* Data);
};

// Class Killstreak.KSBoost
// 0x0018 (FullSize[0x02E8] - InheritedSize[0x02D0])
class UKSBoost : public UKSCurrency
{
public:
	Killstreak_EBoostCategory                          BoostCategory;                                             // 0x02D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EBoostDurationCategory                  BoostDurationCategory;                                     // 0x02D1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsActiveBooster;                                           // 0x02D2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WRZC[0x5];                                     // 0x02D3(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             BonusProgressionKeys;                                      // 0x02D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1012);
		return ptr;
	}



	void GetBoostCategoryText(struct FText* BoostCategoryText, struct FText* DurationCategoryText);
};

// Class Killstreak.KSBoosterManager
// 0x0060 (FullSize[0x0270] - InheritedSize[0x0210])
class UKSBoosterManager : public UKSActivityManagerBase
{
public:
	unsigned char                                      UnknownData_RGZK[0x60];                                    // 0x0210(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1013);
		return ptr;
	}



};

// Class Killstreak.KSBorder
// 0x0060 (FullSize[0x02B0] - InheritedSize[0x0250])
class UKSBorder : public UKSItem
{
public:
	unsigned char                                      SmallBorderIcon[0x28];                                     // 0x0250(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UIconInfo*                                   SmallBorderIconInfo;                                       // 0x0278(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, NoClear, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      LargeBorderIcon[0x28];                                     // 0x0280(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UIconInfo*                                   LargeBorderIconInfo;                                       // 0x02A8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, NoClear, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1014);
		return ptr;
	}



	void GetSoftSmallBorderIcon();
	void GetSoftLargeBorderIcon();
	class UIconInfo* GetSmallBorderInfo();
	class UIconInfo* GetLargeBorderInfo();
};

// Class Killstreak.KSBotDefinition
// 0x01A8 (FullSize[0x01D8] - InheritedSize[0x0030])
class UKSBotDefinition : public UDataAsset
{
public:
	struct FString                                     FriendlySearchName;                                        // 0x0030(0x0010) (Edit, ZeroConstructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBotSpawnTableRow                           Info;                                                      // 0x0040(0x0198) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1015);
		return ptr;
	}



};

// Class Killstreak.KSBotDefinitionCollection
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSBotDefinitionCollection : public UDataAsset
{
public:
	TArray<class UKSBotDefinition*>                    BotDefinitions;                                            // 0x0030(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1016);
		return ptr;
	}



};

// Class Killstreak.KSBotEncounter
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
class UKSBotEncounter : public UDataAsset
{
public:
	int                                                BotSideNumber;                                             // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseTeamInsteadOfSide;                                     // 0x0034(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0JHQ[0x3];                                     // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                BotTeamNumber;                                             // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N58N[0x4];                                     // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UKSEncounterWave*>                    BotWaves;                                                  // 0x0040(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       nmEncounterName;                                           // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AT8T[0x8];                                     // 0x0058(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSTeamState*                                CachedTeamState;                                           // 0x0060(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1017);
		return ptr;
	}



	unsigned char GetTotalWaveNumber();
	struct FName GetEncounterName();
	unsigned char GetCurrentWaveNumber();
	class UKSEncounterWave* GetCurrentWave();
	TArray<struct FName> ChooseNSpawnTableRows(int nCount);
	int AdvanceWave();
};

// Class Killstreak.KSBotFactory
// 0x0118 (FullSize[0x0338] - InheritedSize[0x0220])
class AKSBotFactory : public AActor
{
public:
	bool                                               bFinishPrecacheOnBeginPlay;                                // 0x0220(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseTeamInsteadOfSide;                                     // 0x0221(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_K331[0x2];                                     // 0x0222(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SideNum;                                                   // 0x0224(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                TeamNum;                                                   // 0x0228(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_ECharacterBehaviorState                 InitialBehaviorState;                                      // 0x022C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseInlineSpawnCollection;                                 // 0x022D(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KH9D[0x2];                                     // 0x022E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSBotDefinitionCollection*                  SpawnCollectionAsset;                                      // 0x0230(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSBotDefinitionCollection*                  SpawnCollectionInline;                                     // 0x0238(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSpawnHidden;                                              // 0x0240(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRandomBot;                                                // 0x0241(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWithoutReplacement;                                       // 0x0242(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRandomLoadout;                                            // 0x0243(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPreserveAIControllers;                                    // 0x0244(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               OverrideTeamSizeFromQueue;                                 // 0x0245(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9YGW[0x2];                                     // 0x0246(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                FillTeamTo;                                                // 0x0248(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseAutoWayPointSets;                                      // 0x024C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KX91[0x3];                                     // 0x024D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSWayPointSet*                              WayPointSet;                                               // 0x0250(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ShouldReverseWayPointSetDirection;                         // 0x0258(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9K5Z[0x7];                                     // 0x0259(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class APlayerStart*>                        SpawnPoints;                                               // 0x0260(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                SpawnOnBeginPlay;                                          // 0x0270(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                SpawnOnRoundStart;                                         // 0x0274(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                SpawnOnRoundSetup;                                         // 0x0278(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                SpawnOnCollectionTimeout;                                  // 0x027C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                SpawnOnHackTimeout;                                        // 0x0280(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                SpawnOnEscapeTimeout;                                      // 0x0284(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                SpawnOnDownloadStart;                                      // 0x0288(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                SpawnOnAlarm;                                              // 0x028C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MinSpawnCount;                                             // 0x0290(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxSpawnCount;                                             // 0x0294(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bMaintainCountOnBotDeath;                                  // 0x0298(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Q9WU[0x7];                                     // 0x0299(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AKSAIController*>                     ActiveBots;                                                // 0x02A0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSTeamState*                                TeamState;                                                 // 0x02B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                NextSequentialSpawnStart;                                  // 0x02B8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CurrentLoadoutSeed;                                        // 0x02BC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               RelevantObjectiveStates;                                   // 0x02C0(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               RelevantGameStatesForObjectiveSpawning;                    // 0x02D0(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                NumberOfTimesToSpawnForObjectiveRelevancy;                 // 0x02E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DSQH[0x4];                                     // 0x02E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBoxComponent*                               RelevancyVolume;                                           // 0x02E8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AKSCharacter*>                        ContainedPlayers;                                          // 0x02F0(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AKSObjectiveBase*>                    ContainedObjectives;                                       // 0x0300(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_P49G[0x28];                                    // 0x0310(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1018);
		return ptr;
	}



	void UnhideSpawnedBots();
	TArray<class AKSAIController*> Spawn(int Count);
	void ShuffleSpawnPoints();
	void SetWayPointSet(class AKSWayPointSet* InWPS);
	void SetSpawnPoints(TArray<class APlayerStart*> InPlayerStarts);
	void SetSideNum(int InSideNum);
	void SetShouldReverseWayPointSetDirection(bool InShouldReverse);
	void SetBotSpawnCollection(class UKSBotDefinitionCollection* InSpawnCollection);
	void RestartBots();
	void OnSpawnedBotDestroyed(class AActor* DestroyedActor);
	void OnRoundStart(const struct FRoundInitState& RoundInitState);
	void OnRoundSetup(const struct FRoundInitState& RoundInitState);
	void OnRelevancyOverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnRelevancyOverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnPhaseChanged(const struct FMatchPhase& PreviousPhase, const struct FMatchPhase& NewPhase);
	void OnExtractionPhaseTimeout(const struct FName& PhaseName);
	void OnAllPlayersFinishedPrePrep();
	void OnAlarmPeriodStart();
	void HideSpawnedBots();
	int GetTeamSize();
	class UKSBotDefinitionCollection* GetBotSpawnCollection();
};

// Class Killstreak.KSBotJobConfigMap
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UKSBotJobConfigMap : public UDataAsset
{
public:
	unsigned char                                      JobConfigs[0x50];                                          // 0x0030(0x0050) UNKNOWN PROPERTY: MapProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1019);
		return ptr;
	}



};

// Class Killstreak.KSBoxDeadZoneFilter
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UKSBoxDeadZoneFilter : public UKSAnalogStickFilter
{
public:
	struct FVector2D                                   InnerDeadZone;                                             // 0x0038(0x0008) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   OuterDeadZone;                                             // 0x0040(0x0008) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1020);
		return ptr;
	}



};

// Class Killstreak.KSBRC_GiveEquipment
// 0x0028 (FullSize[0x00F0] - InheritedSize[0x00C8])
class UKSBRC_GiveEquipment : public UKSPlayerBehaviorRuleComponent
{
public:
	bool                                               bAddToLoadout;                                             // 0x00C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IF22[0x7];                                     // 0x00C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UKSItem*>                             ItemsToGive;                                               // 0x00D0(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGameplayTag>                        SlotsToRemove;                                             // 0x00E0(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1021);
		return ptr;
	}



};

// Class Killstreak.KSBTAbilityConditionValidator
// 0x0198 (FullSize[0x01C8] - InheritedSize[0x0030])
class UKSBTAbilityConditionValidator : public UDataAsset
{
public:
	bool                                               bShouldUsePerceptionFilter;                                // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WMFX[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              SensesToUse;                                               // 0x0038(0x0010) (Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKSPerceptionFilter                         PerceptionFilter;                                          // 0x0048(0x0170) (Edit, NativeAccessSpecifierPublic)
	int                                                MinPerceivedStimuliCount;                                  // 0x01B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCheckCombatTarget;                                        // 0x01BC(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCheckTargetVisible;                                       // 0x01BD(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCheckTargetHidden;                                        // 0x01BE(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCheckDistance;                                            // 0x01BF(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinDistanceMeters;                                         // 0x01C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDistanceMeters;                                         // 0x01C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1022);
		return ptr;
	}



};

// Class Killstreak.KSBTAction
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSBTAction : public UDataAsset
{
public:
	struct FString                                     ActionName;                                                // 0x0030(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1023);
		return ptr;
	}



};

// Class Killstreak.KSBTD_AbilityState
// 0x0008 (FullSize[0x0098] - InheritedSize[0x0090])
class UKSBTD_AbilityState : public UBTDecorator_BlackboardBase
{
public:
	bool                                               bCheckAbilityReady;                                        // 0x0090(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EBasicKeyOperation>           AbilityReady;                                              // 0x0091(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCheckActive;                                              // 0x0092(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EBasicKeyOperation>           AbilityActive;                                             // 0x0093(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5RDV[0x4];                                     // 0x0094(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1027);
		return ptr;
	}



};

// Class Killstreak.KSBTD_AnyActorPerceived
// 0x0180 (FullSize[0x01E8] - InheritedSize[0x0068])
class UKSBTD_AnyActorPerceived : public UBTDecorator
{
public:
	TArray<class UClass*>                              SensesToUse;                                               // 0x0068(0x0010) (Edit, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKSPerceptionFilter                         PerceptionFilter;                                          // 0x0078(0x0170) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1028);
		return ptr;
	}



};

// Class Killstreak.KSBTD_BlackboardPerceived
// 0x0018 (FullSize[0x00A8] - InheritedSize[0x0090])
class UKSBTD_BlackboardPerceived : public UBTDecorator_BlackboardBase
{
public:
	TArray<class UClass*>                              SensesToUse;                                               // 0x0090(0x0010) (Edit, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       PerceptionEvent;                                           // 0x00A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1029);
		return ptr;
	}



};

// Class Killstreak.KSBTD_CanActivateAbility
// 0x0028 (FullSize[0x0090] - InheritedSize[0x0068])
class UKSBTD_CanActivateAbility : public UBTDecorator
{
public:
	unsigned char                                      Ability[0x28];                                             // 0x0068(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1030);
		return ptr;
	}



};

// Class Killstreak.KSBTD_CanActivateUniqueAbility
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UKSBTD_CanActivateUniqueAbility : public UBTDecorator
{
public:
	class UDataTable*                                  AbilityValidatorTable;                                     // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1031);
		return ptr;
	}



};

// Class Killstreak.KSBTD_CanBuyWhileDead
// 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
class UKSBTD_CanBuyWhileDead : public UBTDecorator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1032);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_MoveToBlackboard
// 0x0040 (FullSize[0x00F0] - InheritedSize[0x00B0])
class UKSBTTask_MoveToBlackboard : public UBTTask_MoveTo
{
public:
	float                                              SpeedMultiplier;                                           // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSprint;                                                   // 0x00B4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZPGU[0x3];                                     // 0x00B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSBTAction*                                 MoveAction;                                                // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSBTAction*                                 SprintAction;                                              // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      AcceptableRadiusOverrideKey;                               // 0x00C8(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1109);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_MoveToward
// 0x0018 (FullSize[0x00D0] - InheritedSize[0x00B8])
class UKSBTTask_MoveToward : public UBTTask_MoveDirectlyToward
{
public:
	float                                              SpeedMultiplier;                                           // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSprint;                                                   // 0x00BC(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UJL4[0x3];                                     // 0x00BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSBTAction*                                 MoveAction;                                                // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSBTAction*                                 SprintAction;                                              // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1111);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_PerformPawnAction
// 0x0000 (FullSize[0x0078] - InheritedSize[0x0078])
class UKSBTTask_PerformPawnAction : public UBTTask_PushPawnAction
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1114);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_PerformRandomDodgeRoll
// 0x0030 (FullSize[0x00A0] - InheritedSize[0x0070])
class UKSBTTask_PerformRandomDodgeRoll : public UBTTask_PawnActionBase
{
public:
	TArray<float>                                      PreferredAngles;                                           // 0x0070(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                      SecondaryAngles;                                           // 0x0080(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinDodgeRollMovementPercent;                               // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DodgeRollCheckDistance;                                    // 0x0094(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaximumHeightChangePerCheckDistance;                       // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0BT7[0x4];                                     // 0x009C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1115);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_PlayVO
// 0x0010 (FullSize[0x0080] - InheritedSize[0x0070])
class UKSBTTask_PlayVO : public UBTTaskNode
{
public:
	struct FGameplayTag                                VOEvent;                                                   // 0x0070(0x0008) (Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ChanceToPlay;                                              // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_V6AE[0x4];                                     // 0x007C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1116);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_RandomizeWayPointDefensePoint
// 0x0050 (FullSize[0x00C0] - InheritedSize[0x0070])
class UKSBTTask_RandomizeWayPointDefensePoint : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      WayPoint;                                                  // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      DefensePoint;                                              // 0x0098(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1117);
		return ptr;
	}



};

// Class Killstreak.KSBTD_CharacterState
// 0x0098 (FullSize[0x0128] - InheritedSize[0x0090])
class UKSBTD_CharacterState : public UBTDecorator_BlackboardBase
{
public:
	struct FKSCharacterStateFilter                     CharacterStateFilter;                                      // 0x0090(0x0098) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1033);
		return ptr;
	}



};

// Class Killstreak.KSBTD_CheckRole
// 0x0018 (FullSize[0x0080] - InheritedSize[0x0068])
class UKSBTD_CheckRole : public UBTDecorator
{
public:
	TArray<Killstreak_ECharacterRole>                  RequiredRoles;                                             // 0x0068(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               RequireAll;                                                // 0x0078(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HDV8[0x7];                                     // 0x0079(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1034);
		return ptr;
	}



};

// Class Killstreak.KSBTD_CheckUniqueAbilityType
// 0x0010 (FullSize[0x0078] - InheritedSize[0x0068])
class UKSBTD_CheckUniqueAbilityType : public UBTDecorator
{
public:
	class UDataTable*                                  AbilityValidatorTable;                                     // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EAbilityExecutionType                   AbilityExecutionType;                                      // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8SFU[0x7];                                     // 0x0071(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1035);
		return ptr;
	}



};

// Class Killstreak.KSSeasonalItemSpawnLocationManager
// 0x00E0 (FullSize[0x0300] - InheritedSize[0x0220])
class AKSSeasonalItemSpawnLocationManager : public AActor
{
public:
	bool                                               bShouldSpawnAtSetup;                                       // 0x0220(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldSpawnPeriodically;                                  // 0x0221(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YGLG[0x2];                                     // 0x0222(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SpawnIntervalSeconds;                                      // 0x0224(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FC9S[0x88];                                    // 0x0228(0x0088) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FString, struct FSeasonalItemSpawnInfo> SeasonalSpawningInfos;                                     // 0x02B0(0x0050) (Edit, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1658);
		return ptr;
	}



	void Reset();
	void OnStart();
	void OnSpawnTimerTick();
	void OnSpawnLocationCleared(class AKSSeasonalItemSpawnLocation* SpawnLocationActor);
	void OnSetup();
	void OnSeasonalSublevelsLoaded();
	void OnEnd();
};

// Class Killstreak.KSSettingsCallbackInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSSettingsCallbackInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1659);
		return ptr;
	}



	bool GetSettingAsInt(const struct FName& Name, int* OutInt);
	bool GetSettingAsFloat(const struct FName& Name, float* OutFloat);
	bool GetSettingAsBool(const struct FName& Name, bool* OutBool);
	void BindSettingCallbacks(const struct FName& Name, const struct FSettingDelegateStruct& SettingDelegateStruct);
};

// Class Killstreak.KSSettingsCallbackStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSSettingsCallbackStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1660);
		return ptr;
	}



	void STATIC_GetLocalSettingsCallbackInterfaceFromPlayer(class APlayerController* InPlayer);
	void STATIC_GetLocalSettingsCallbackInterface(class UObject* WorldContextObject);
	bool STATIC_GetLocalSettingAsIntFromPlayer(const struct FName& Name, int* OutInt, class APlayerController* InPlayer);
	bool STATIC_GetLocalSettingAsInt(const struct FName& Name, int* OutInt, class UObject* WorldContextObject);
	bool STATIC_GetLocalSettingAsFloatFromPlayer(const struct FName& Name, float* OutFloat, class APlayerController* InPlayer);
	bool STATIC_GetLocalSettingAsFloat(const struct FName& Name, float* OutFloat, class UObject* WorldContextObject);
	bool STATIC_GetLocalSettingAsBoolFromPlayer(const struct FName& Name, bool* OutBool, class APlayerController* InPlayer);
	bool STATIC_GetLocalSettingAsBool(const struct FName& Name, bool* OutBool, class UObject* WorldContextObject);
	void STATIC_BindSettingCallbackToPlayer(const struct FName& Name, const struct FSettingDelegateStruct& SettingDelegateStruct, class APlayerController* InPlayer);
	void STATIC_BindSettingCallback(const struct FName& Name, const struct FSettingDelegateStruct& SettingDelegateStruct, class UObject* WorldContextObject);
};

// Class Killstreak.KSShield
// 0x0030 (FullSize[0x0250] - InheritedSize[0x0220])
class AKSShield : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnShieldDamagedDel;                                        // 0x0220(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JV2J[0x18];                                    // 0x0230(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bShieldEnabled;                                            // 0x0248(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1IC2[0x3];                                     // 0x0249(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Health;                                                    // 0x024C(0x0004) (Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1661);
		return ptr;
	}



	void SetShieldEnabled(bool ShieldEnabled);
	void OnRep_ShieldEnabled();
	void OnRep_Health();
};

// Class Killstreak.KSShopRuleComponent
// 0x0408 (FullSize[0x04B8] - InheritedSize[0x00B0])
class UKSShopRuleComponent : public UKSGameRuleComponent
{
public:
	unsigned char                                      UnknownData_PP4S[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                StartingCash;                                              // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EStartingCashRoundBonus                 StartingCashRoundBonus;                                    // 0x00BC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bResetShopsOnTeamSidesFlipped;                             // 0x00BD(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KBAT[0x2];                                     // 0x00BE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      TypesToNotResetOnTeamSidesFlipped[0x50];                   // 0x00BE(0x0050) UNKNOWN PROPERTY: SetProperty
	bool                                               bResetShopsOnRoundPrepare;                                 // 0x0110(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NFUR[0x7];                                     // 0x0111(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      TypesToNotResetOnRoundPrepare[0x50];                       // 0x0111(0x0050) UNKNOWN PROPERTY: SetProperty
	bool                                               bLockUndoEachRound;                                        // 0x0168(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowShopAccessWhileDead;                                 // 0x0169(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDisableShopOnClose;                                       // 0x016A(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDisableShopOnSignificantAction;                           // 0x016B(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6BNK[0x4];                                     // 0x016C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      ShopClass;                                                 // 0x0170(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<int64_t, class AKSPlayerShop*>                PlayerShops;                                               // 0x0178(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	struct FKSShopPricing                              ShopPricing;                                               // 0x01C8(0x0108) (Edit, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      PermanentItems[0x50];                                      // 0x02D0(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      StartActiveItems[0x50];                                    // 0x0320(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      OneTimePurchaseItems[0x50];                                // 0x0370(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      ExhaustibleItems[0x50];                                    // 0x03C0(0x0050) UNKNOWN PROPERTY: SetProperty
	TMap<Killstreak_EShopItemType, struct FShopItemList> PrerequisiteMap;                                           // 0x0410(0x0050) (Edit, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_EShopItemType, struct FShopItemList> RestrictionMap;                                            // 0x0460(0x0050) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FShopOptions                                ShopOptions;                                               // 0x04B0(0x0006) (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LIU9[0x2];                                     // 0x04B6(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1662);
		return ptr;
	}



	void OnGamePhaseChanged(const struct FMatchPhase& NewPhase, const struct FMatchPhase& PreviousPhase);
	int GetStartingCash();
	class AKSPlayerShop* GetShopForPlayer(class AKSPlayerState* InPlayerState);
	bool CanPlayersAccessShopWhileDead();
};

// Class Killstreak.KSPlayerStimulusComponentBase
// 0x0028 (FullSize[0x00D8] - InheritedSize[0x00B0])
class UKSPlayerStimulusComponentBase : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnStartStimulatingPlayer;                                  // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnStopStimulatingPlayer;                                   // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	Killstreak_EKSStimulateTarget                      StimulateTarget;                                           // 0x00D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRegisterOnBeginPlay;                                      // 0x00D1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CBH5[0x6];                                     // 0x00D2(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1594);
		return ptr;
	}



	void UnregisterFromStimulusSystem();
	bool ShouldStopStimulatingPlayer(class AKSPlayerState* PlayerState);
	bool ShouldBeginStimulatingPlayer(class AKSPlayerState* PlayerState);
	void RegisterToStimulusSystem();
};

// Class Killstreak.KSSightStimulusComponent
// 0x0018 (FullSize[0x00F0] - InheritedSize[0x00D8])
class UKSSightStimulusComponent : public UKSPlayerStimulusComponentBase
{
public:
	float                                              MaximumStimulusDistance;                                   // 0x00D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaximumStimulusAngle;                                      // 0x00DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     OffsetFromOwner;                                           // 0x00E0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCheckForOffsetBlocks;                                     // 0x00EC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JQ4E[0x3];                                     // 0x00ED(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1663);
		return ptr;
	}



};

// Class Killstreak.KSItemBundle
// 0x0010 (FullSize[0x0260] - InheritedSize[0x0250])
class UKSItemBundle : public UKSItem
{
public:
	unsigned char                                      BundledItems[0x10];                                        // 0x0250(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1317);
		return ptr;
	}



	void GetSortedBundledItems();
};

// Class Killstreak.KSSkinBundle
// 0x00A8 (FullSize[0x0308] - InheritedSize[0x0260])
class UKSSkinBundle : public UKSItemBundle
{
public:
	unsigned char                                      RogueSelectCharacterClass[0x28];                           // 0x0260(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      SkinSpecificWeaponAttachments[0x10];                       // 0x0288(0x0010) UNKNOWN PROPERTY: ArrayProperty
	bool                                               StarterSkin;                                               // 0x0298(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CHA6[0x7];                                     // 0x0299(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      SkinFlatImage[0x28];                                       // 0x0299(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      Job[0x28];                                                 // 0x02C8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               bOverrideJobLobbyProps;                                    // 0x02F0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3JEL[0x7];                                     // 0x02F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FSoftObjectPath>                     LobbyPropsToPreload;                                       // 0x02F8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1664);
		return ptr;
	}



	void STATIC_StaticGetAssociatedJob();
	bool IsStarterSkin();
	void GetSkinImage();
	class UClass* GetRogueSelectCharacterClass();
	void GetAssociatedJob();
};

// Class Killstreak.KSSkyDiveListener
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSSkyDiveListener : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1665);
		return ptr;
	}



};

// Class Killstreak.KSSmoothingComponent
// 0x0038 (FullSize[0x0240] - InheritedSize[0x0208])
class UKSSmoothingComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData_POT7[0x4];                                     // 0x0208(0x0004) Fix Super Size
	struct FVector                                     TranslationOffset;                                         // 0x020C(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DNR9[0x8];                                     // 0x0218(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FQuat                                       RotationOffset;                                            // 0x0220(0x0010) (Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class AKSCharacter*                                CharacterOwner;                                            // 0x0230(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SF10[0x8];                                     // 0x0238(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1666);
		return ptr;
	}



};

// Class Killstreak.KSSpawnRule
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UKSSpawnRule : public UObject
{
public:
	struct FName                                       RuleName;                                                  // 0x0028(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               OverridePropertyNames;                                     // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1667);
		return ptr;
	}



	void Initialize();
	bool GetWorldSettingsPropertyInt(const struct FName& PropertyName, int* OutInt);
	bool GetWorldSettingsPropertyFloat(const struct FName& PropertyName, float* OutFloat);
	bool GetWorldSettingsPropertyBool(const struct FName& PropertyName, bool* OutBool);
	float GetScoreForSpawn(class AController* Controller, class APlayerStart* PlayerStart);
	struct FName GetRuleName();
	class UKSSpawnSelectorComponent* GetOuterSpawnSelectorComponent();
};

// Class Killstreak.KSSpawnRule_Bot
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UKSSpawnRule_Bot : public UKSSpawnRule
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1668);
		return ptr;
	}



};

// Class Killstreak.KSSpawnRule_Initial
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UKSSpawnRule_Initial : public UKSSpawnRule
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1669);
		return ptr;
	}



};

// Class Killstreak.KSSpawnRule_Proximity
// 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
class UKSSpawnRule_Proximity : public UKSSpawnRule
{
public:
	float                                              OuterRadius;                                               // 0x0040(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InnerRadius;                                               // 0x0044(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1670);
		return ptr;
	}



	float GetScoreForDistance(const struct FVector& To, const struct FVector& From);
};

// Class Killstreak.KSSpawnRule_ObjectiveProximity
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
class UKSSpawnRule_ObjectiveProximity : public UKSSpawnRule_Proximity
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1671);
		return ptr;
	}



};

// Class Killstreak.KSSpawnRule_PIE
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UKSSpawnRule_PIE : public UKSSpawnRule
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1672);
		return ptr;
	}



};

// Class Killstreak.KSSpawnRule_PlayerEventProximity
// 0x0018 (FullSize[0x0060] - InheritedSize[0x0048])
class UKSSpawnRule_PlayerEventProximity : public UKSSpawnRule_Proximity
{
public:
	float                                              RecordDuration;                                            // 0x0048(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bScoreDecaysWithTime;                                      // 0x004C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bConsidersFriendlies;                                      // 0x004D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bConsidersEnemies;                                         // 0x004E(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bConsidersSelf;                                            // 0x004F(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B8HW[0x10];                                    // 0x0050(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1673);
		return ptr;
	}



	void OnPlayerEventRecordExpire(const struct FKSPlayerEventRecord& KSPlayerEventRecord);
	void OnPlayerEvent(class AController* Controller);
	void BindToEvent();
};

// Class Killstreak.KSSpawnRule_PlayerProximity
// 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
class UKSSpawnRule_PlayerProximity : public UKSSpawnRule_Proximity
{
public:
	bool                                               bConsiderFriendlies;                                       // 0x0048(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bConsiderEnemies;                                          // 0x0049(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseAverageScore;                                          // 0x004A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8GAZ[0x5];                                     // 0x004B(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1674);
		return ptr;
	}



};

// Class Killstreak.KSSpawnRule_Respawn
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UKSSpawnRule_Respawn : public UKSSpawnRule
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1675);
		return ptr;
	}



};

// Class Killstreak.KSSpawnRule_Side
// 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
class UKSSpawnRule_Side : public UKSSpawnRule
{
public:
	float                                              NullTeamScore;                                             // 0x0040(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_45X4[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1676);
		return ptr;
	}



};

// Class Killstreak.KSSpawnRule_Vacant
// 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
class UKSSpawnRule_Vacant : public UKSSpawnRule
{
public:
	float                                              OccupiedByPawnScore;                                       // 0x0040(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RequiresAdjustmentScore;                                   // 0x0044(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1677);
		return ptr;
	}



};

// Class Killstreak.KSSpawnRuleDebugComponent
// 0x0010 (FullSize[0x0490] - InheritedSize[0x0480])
class UKSSpawnRuleDebugComponent : public UTextRenderComponent
{
public:
	unsigned char                                      UnknownData_E7N4[0x4];                                     // 0x0480(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GameScore;                                                 // 0x0484(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       FailureReason;                                             // 0x0488(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1679);
		return ptr;
	}



};

// Class Killstreak.KSSpawnSelectorComponent
// 0x00D8 (FullSize[0x0188] - InheritedSize[0x00B0])
class UKSSpawnSelectorComponent : public UActorComponent
{
public:
	struct FKSSpawnSelectorTreeNode                    BaseRoot;                                                  // 0x00B0(0x0028) (Protected, NativeAccessSpecifierProtected)
	struct FKSSpawnSelectorTreeNode                    SideRoot;                                                  // 0x00D8(0x0028) (Protected, NativeAccessSpecifierProtected)
	struct FKSSpawnSelectorTreeNode                    FlipRoot;                                                  // 0x0100(0x0028) (Protected, NativeAccessSpecifierProtected)
	struct FKSSpawnSelectorTreeNode                    GameRoot;                                                  // 0x0128(0x0028) (Protected, NativeAccessSpecifierProtected)
	TArray<class APlayerStart*>                        PlayerStarts;                                              // 0x0150(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       FriendlyName;                                              // 0x0160(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FEA1[0x10];                                    // 0x0168(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bCanEverFlip;                                              // 0x0178(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UQLH[0x3];                                     // 0x0179(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InvalidFlipPercent;                                        // 0x017C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFlipped;                                                  // 0x0180(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2YIG[0x7];                                     // 0x0181(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1680);
		return ptr;
	}



	void InitSideRoot(struct FKSSpawnSelectorTreeNode* InSideRoot);
	void InitGameRoot(struct FKSSpawnSelectorTreeNode* InGameRoot);
	void InitFlipRoot(struct FKSSpawnSelectorTreeNode* InFlipRoot);
	void InitBaseRoot(struct FKSSpawnSelectorTreeNode* InBaseRoot);
	TArray<struct FName> GetSelectorComponentFriendlyNameHierarchy();
	TArray<class APlayerStart*> GetPlayerStarts();
	struct FName GetFriendlyName();
	bool AreSidesFlipped();
};

// Class Killstreak.KSSpawnRuleBlueprintFunctionLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSSpawnRuleBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1681);
		return ptr;
	}



};

// Class Killstreak.KSSpawnSelectorTierBranch
// 0x0058 (FullSize[0x0098] - InheritedSize[0x0040])
class UKSSpawnSelectorTierBranch : public UKSSpawnRule
{
public:
	struct FKSSpawnSelectorTreeNode                    DefaultBranch;                                             // 0x0040(0x0028) (BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	bool                                               bDoesHandleFailure;                                        // 0x0068(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PZMH[0x7];                                     // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSSpawnSelectorTreeNode                    FailureBranch;                                             // 0x0070(0x0028) (BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1682);
		return ptr;
	}



	struct FKSSpawnSelectorTreeNode SelectSpawnSelectorTreeNode(class AController* Controller, TArray<class APlayerStart*> SpawnPoints);
	void GetBranches(TArray<struct FKSSpawnSelectorTreeNode>* OutBranches);
};

// Class Killstreak.KSSpecialty
// 0x0188 (FullSize[0x03D8] - InheritedSize[0x0250])
class UKSSpecialty : public UKSItem
{
public:
	int                                                RequiredUnlockLevel;                                       // 0x0250(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C30P[0x4];                                     // 0x0254(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      DynamicPoseImage[0x28];                                    // 0x0254(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      BannerIcon[0x28];                                          // 0x0280(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      LeftBannerIcon[0x28];                                      // 0x02A8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      RightBannerIcon[0x28];                                     // 0x02D0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      SmallIcon[0x28];                                           // 0x02F8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      AvailableKillstreaks[0x10];                                // 0x0320(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      AvailableAbilities[0x10];                                  // 0x0330(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      AvailableGadgets[0x10];                                    // 0x0340(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      AvailablePistols[0x10];                                    // 0x0350(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      AvailableWeaponAttachments[0x10];                          // 0x0360(0x0010) UNKNOWN PROPERTY: ArrayProperty
	Killstreak_ESpecialtyRoleType                      RoleType;                                                  // 0x0370(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B6ZC[0x7];                                     // 0x0371(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      AutoEquippedMods[0x10];                                    // 0x0371(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      PerkSlotOneCategory[0x28];                                 // 0x0388(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      PerkSlotTwoCategory[0x28];                                 // 0x03B0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1683);
		return ptr;
	}



	class UTexture2D* GetDynamicPoseImage(bool bAllowSyncLoad);
};

// Class Killstreak.KSRadialMenuItem
// 0x0068 (FullSize[0x02B8] - InheritedSize[0x0250])
class UKSRadialMenuItem : public UKSItem
{
public:
	unsigned char                                      UnknownData_VPNF[0x8];                                     // 0x0250(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      RadialMenuItemInstanceClass[0x28];                         // 0x0250(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	TArray<struct FSoftDataTableInfo>                  AssetDataTables;                                           // 0x0280(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      JobAllowList[0x10];                                        // 0x0290(0x0010) UNKNOWN PROPERTY: ArrayProperty
	float                                              GlobalRadialMenuItemCooldownTime;                          // 0x02A0(0x0004) (Edit, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_ERadialMenuItemInterruptNotifyBehaviorType InterruptNotifyBehavior;                                   // 0x02A4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_E2LF[0x3];                                     // 0x02A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RadialMenuItemIsPlayingTimeout;                            // 0x02A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKSRadialMenuItemInterruptRules             InterruptRules;                                            // 0x02AC(0x0004) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                               bLockPawnRotationWhilePlaying;                             // 0x02B0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSEmotion                              Emotion;                                                   // 0x02B1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_THVZ[0x6];                                     // 0x02B2(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1180);
		return ptr;
	}



	bool ShouldPreventPlay(Killstreak_EKSRadialMenuItemInterruptReason InReason);
	bool ShouldInterrupt(Killstreak_EKSRadialMenuItemInterruptReason InReason);
	bool IsJobAllowed();
	bool IsAllowedForAllJobs();
	void GetRadialMenuItemInstanceClass();
	bool GetLockPawnRotationWhilePlaying();
	struct FGameplayTag GetGameplayTagBase();
	Killstreak_EKSEmotion GetEmotionToApply();
	struct FString GetCosmeticSlotString();
	Killstreak_EMercCosmeticSlot GetCosmeticSlot();
	void GetAllowedJobs();
};

// Class Killstreak.KSEmote
// 0x0058 (FullSize[0x0310] - InheritedSize[0x02B8])
class UKSEmote : public UKSRadialMenuItem
{
public:
	bool                                               bFlushKeysOnPlay;                                          // 0x02B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OQGL[0x7];                                     // 0x02B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      EmoteCosmeticComponentClass[0x28];                         // 0x02B9(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	Killstreak_EEmoteCameraPositionType                EmoteCameraPosition;                                       // 0x02E8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bMovingEmote;                                              // 0x02E9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AD41[0x6];                                     // 0x02EA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               ApparelObjectsToInfluence;                                 // 0x02F0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSoftObjectPath>                     WeaponPropsToPreload;                                      // 0x0300(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1222);
		return ptr;
	}



	bool IsMovingEmote();
	void GetEmoteCosmeticClass();
	Killstreak_EEmoteCameraPositionType GetEmoteCameraPosition();
};

// Class Killstreak.KSSpray
// 0x0028 (FullSize[0x0338] - InheritedSize[0x0310])
class UKSSpray : public UKSEmote
{
public:
	unsigned char                                      StatTrackingActivity[0x28];                                // 0x0310(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1684);
		return ptr;
	}



	void GetStatTrackingActivity();
};

// Class Killstreak.KSRadialMenuItemInstance
// 0x0008 (FullSize[0x02C8] - InheritedSize[0x02C0])
class AKSRadialMenuItemInstance : public AKSEquipment
{
public:
	class UKSRadialMenuItem*                           RadialMenuItemAsset;                                       // 0x02C0(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1182);
		return ptr;
	}



	void ServerPlayRadialMenuItem();
	void ServerForceStopRadialMenuItem();
	bool PlayRadialMenuItem(Killstreak_EKSRadialMenuItemInterruptReason* OutInterruptReason, bool bForcePlayRadialMenuItem);
	void OnRep_RadialMenuItemAsset();
	bool IsThrottled();
	bool IsManagingRadialMenuItemLocally();
	class UKSRadialMenuItem* GetRadialMenuItemAsset();
	class AKSCharacter* GetActiveCharacterOwner();
	void ForceStopRadialMenuItem();
	void DoRadialMenuItem();
	bool CanPlayRadialMenuItemNow(Killstreak_EKSRadialMenuItemInterruptReason* OutInterruptReason);
};

// Class Killstreak.KSEmoteInstance
// 0x0000 (FullSize[0x02C8] - InheritedSize[0x02C8])
class AKSEmoteInstance : public AKSRadialMenuItemInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1228);
		return ptr;
	}



	class UKSEmoteCosmeticComponent* GetEmoteCosmeticComponent();
};

// Class Killstreak.KSSprayInstance
// 0x0090 (FullSize[0x0358] - InheritedSize[0x02C8])
class AKSSprayInstance : public AKSEmoteInstance
{
public:
	TEnumAsByte<Engine_ECollisionChannel>              SprayTraceChannel;                                         // 0x02C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KLF8[0x3];                                     // 0x02C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SprayTraceDistance;                                        // 0x02CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAimData                                    CachedAim;                                                 // 0x02D0(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     CachedSprayLocation;                                       // 0x0320(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    CachedSprayRotation;                                       // 0x032C(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UPrimitiveComponent>          CachedSprayTarget;                                         // 0x0338(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     CachedSprayNormal;                                         // 0x0340(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    CachedSprayRotationByNormal;                               // 0x034C(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1685);
		return ptr;
	}



	void ServerPlaySpray(const struct FAimData& InSprayAim);
};

// Class Killstreak.KSSpringArmComponent
// 0x0050 (FullSize[0x02E0] - InheritedSize[0x0290])
class UKSSpringArmComponent : public USpringArmComponent
{
public:
	bool                                               bEnableSmoothLengthReturn;                                 // 0x0290(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BB2V[0x3];                                     // 0x0291(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SmoothLengthReturnSpeed;                                   // 0x0294(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 SmoothingCurve;                                            // 0x0298(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                                OffsetCurve;                                               // 0x02A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRelativeTargetOffset;                                     // 0x02A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OSQN[0x7];                                     // 0x02A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSCharacter*                                CharacterOwner;                                            // 0x02B0(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WMQT[0x28];                                    // 0x02B8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1687);
		return ptr;
	}



};

// Class Killstreak.KSCharacterCameraShake
// 0x001C (FullSize[0x017C] - InheritedSize[0x0160])
class UKSCharacterCameraShake : public UCameraShake
{
public:
	class AKSCharacterBase*                            AttachedCharacter;                                         // 0x0160(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PI2O[0x14];                                    // 0x0168(0x0014) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1159);
		return ptr;
	}



	void StopShakeOnViewTargetChanged(class APlayerController* NewController);
	void StopShakeOnActorDestroyed(class AActor* DestroyedActor);
	void StopShakeDynamic();
	void OnAimStateChanged(Killstreak_EKSCharacterAimMode NextAimState);
};

// Class Killstreak.KSVelocityCameraShake
// 0x0004 (FullSize[0x0180] - InheritedSize[0x017C])
class UKSVelocityCameraShake : public UKSCharacterCameraShake
{
public:
	float                                              VelocityForMaxShaking;                                     // 0x017C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1264);
		return ptr;
	}



};

// Class Killstreak.KSSprintCameraShake
// 0x0000 (FullSize[0x0180] - InheritedSize[0x0180])
class UKSSprintCameraShake : public UKSVelocityCameraShake
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1688);
		return ptr;
	}



	void StopShakeOnStopSprint(bool NewSprint);
};

// Class Killstreak.KSPlayerMatchStats
// 0x0050 (FullSize[0x0078] - InheritedSize[0x0028])
class UKSPlayerMatchStats : public UObject
{
public:
	TMap<Killstreak_EPlayerStatType, struct FPlayerMatchStatInfo> StatsByType;                                               // 0x0028(0x0050) (Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1689);
		return ptr;
	}



	bool GetStat(Killstreak_EPlayerStatType StatType, struct FPlayerMatchStatInfo* OutStat);
};

// Class Killstreak.KSStatWrapper
// 0x0048 (FullSize[0x0070] - InheritedSize[0x0028])
class UKSStatWrapper : public UObject
{
public:
	unsigned char                                      Icon[0x28];                                                // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	struct FText                                       DisplayName;                                               // 0x0050(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               ShouldRepresentValueAsFloat;                               // 0x0068(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_28LF[0x7];                                     // 0x0069(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1690);
		return ptr;
	}



	float GetTotalProgressSum(TArray<class UKSActivityInstance*> InActivityInstances);
	float GetTotalProgress(class UKSActivityInstance* InActivityInstance);
	struct FText GetStatValueText(class UObject* InWorldContextObject, class AKSPlayerState* InPlayerState, int DescriptorId, const struct FString& DescriptorString, bool ShouldOverwriteValue, float OverwriteValue);
	float GetStatValue(class UObject* InWorldContextObject, class AKSPlayerState* InPlayerState, int DescriptorId, const struct FString& DescriptorString, bool ShouldOverwriteValue, float OverwriteValue);
	float GetInventoryQuantitySum(TArray<class UKSActivityInstance*> InActivityInstances);
	float GetInventoryQuantity(class UKSActivityInstance* InActivityInstance);
	float GetCurrentProgressSum(TArray<class UKSActivityInstance*> InActivityInstances);
	float GetCurrentProgress(class UKSActivityInstance* InActivityInstance);
	TArray<class UKSActivityInstance*> GetActivityInstancesByDescriptors(class UObject* InWorldContextObject, TArray<struct FKSActivityDescriptor> InActivityDescriptors, class AKSPlayerState* InPlayerState);
	TArray<class UKSActivityInstance*> GetActivityInstancesByDescriptor(class UObject* InWorldContextObject, const struct FKSActivityDescriptor& InActivityDescriptor, class AKSPlayerState* InPlayerState);
	class UKSActivityInstance* GetActivityInstanceByDescriptors(class UObject* InWorldContextObject, TArray<struct FKSActivityDescriptor> InActivityDescriptors, class AKSPlayerState* InPlayerState);
	class UKSActivityInstance* GetActivityInstanceByDescriptor(class UObject* InWorldContextObject, const struct FKSActivityDescriptor& InActivityDescriptor, class AKSPlayerState* InPlayerState);
};

// Class Killstreak.KSStoreItem
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UKSStoreItem : public UPUMG_StoreItem
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1691);
		return ptr;
	}



	class UPUMG_StoreItem* GetDLCForVoucer();
	bool GetBundleContents(class UKSGameInstance* GameInstance, TArray<class UPUMG_StoreItem*>* BundleItems, TArray<class UPUMG_StoreItem*>* BlockedItems, TArray<class UPUMG_StoreItem*>* RefundedItems);
};

// Class Killstreak.KSStoreItemHelper
// 0x0090 (FullSize[0x0320] - InheritedSize[0x0290])
class UKSStoreItemHelper : public UPUMG_StoreItemHelper
{
public:
	int                                                StoreVendorGroupId;                                        // 0x0290(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StoreVendorsLoaded;                                        // 0x0294(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FCMG[0x3];                                     // 0x0295(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnStoreItemNewStatusChange;                                // 0x0298(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<int>                                        RecentlySeenItems;                                         // 0x02A8(0x0010) (ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      ActiveStoreItems[0x50];                                    // 0x02B8(0x0050) UNKNOWN PROPERTY: MapProperty
	unsigned char                                      UnknownData_D12O[0x8];                                     // 0x0308(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               StoreHasUnseenItems;                                       // 0x0310(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4CQ8[0xF];                                     // 0x0311(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1692);
		return ptr;
	}



	bool RedeemInactiveBoost(int InactiveBoostId);
	bool RedeemDLCVoucher(class UPUMG_StoreItem* DLCVoucher);
	bool HasUnseenItems();
	bool HasRecentlySeenItem(int LootId);
	TArray<struct FAccountConsumableDetails> GetInactiveBoosts();
	bool GetBundleByLootId(int BundleLootId, class UPUMG_StoreItem** VoucherItem, bool* bIsOwned);
	TArray<struct FAccountConsumableDetails> GetActiveBoosts();
};

// Class Killstreak.KSSwapHandlerProfile
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UKSSwapHandlerProfile : public UObject
{
public:
	TArray<struct FEquipPointDefinition>               EquipPointDefinitions;                                     // 0x0028(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1693);
		return ptr;
	}



};

// Class Killstreak.KSCharacterAnimInstBase
// 0x0000 (FullSize[0x0330] - InheritedSize[0x0330])
class UKSCharacterAnimInstBase : public UKSAnimInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1156);
		return ptr;
	}



};

// Class Killstreak.KSCharacterAnimInst
// 0x0DB8 (FullSize[0x10E8] - InheritedSize[0x0330])
class UKSCharacterAnimInst : public UKSCharacterAnimInstBase
{
public:
	float                                              GadgetAdditiveRetrieveBlendTime;                           // 0x0330(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GadgetAdditiveThrowBlendTime;                              // 0x0334(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMountedWeaponActive;                                      // 0x0338(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMountedOnCoverActive;                                     // 0x0339(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SUXP[0x2];                                     // 0x033A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MountedWeaponTargetHeight;                                 // 0x033C(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MountedWeaponModifiedAimPitch;                             // 0x0340(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     MountedWeaponMountLocation;                                // 0x0344(0x000C) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    MountedWeaponMountRotation;                                // 0x0350(0x000C) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bEmoteMontagePlayingGlobal;                                // 0x035C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEmoteMontagePlayingLocal;                                 // 0x035D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JCLX[0x2];                                     // 0x035E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EmoteMontageGlobalWeight;                                  // 0x0360(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EmoteMontageLocalWeight;                                   // 0x0364(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       EmoteSlotName;                                             // 0x0368(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                EmotePropRandomizerStoredInt;                              // 0x0370(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEmotePropRandomizerStaticSpawned;                         // 0x0374(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEmotePropRandomizerSkeletalSpawned;                       // 0x0375(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JR1G[0x2];                                     // 0x0376(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EmoteFastBlendMultiplier;                                  // 0x0378(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EmoteSlowBlendMultiplier;                                  // 0x037C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSprayIsPlaying;                                           // 0x0380(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OZWO[0x3];                                     // 0x0381(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CurrentMeshLOD;                                            // 0x0384(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Speed;                                                     // 0x0388(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpeedXY;                                                   // 0x038C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpeedZ;                                                    // 0x0390(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Forward;                                                   // 0x0394(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Right;                                                     // 0x0398(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BodyLean;                                                  // 0x039C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    BodyLeanRotator;                                           // 0x03A0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    HeadLeanRotator;                                           // 0x03AC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bEnableAnimMirroring;                                      // 0x03B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LPQG[0x3];                                     // 0x03B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bCanTransitionDirections : 1;                              // 0x03BC(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WG3N[0x3];                                     // 0x03BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bEnableMovementImprovements;                               // 0x03C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableDynamicLobbyPose;                                   // 0x03C1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K5C2[0x2];                                     // 0x03C2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SprintImpulseAmount;                                       // 0x03C4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   SprintLeftRightBodyLeanRange;                              // 0x03C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ForwardRotate;                                             // 0x03D0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RightRotate;                                               // 0x03D4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BackRotate;                                                // 0x03D8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LeftRotate;                                                // 0x03DC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ForwardRotatePostMirror;                                   // 0x03E0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RightRotatePostMirror;                                     // 0x03E4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BackRotatePostMirror;                                      // 0x03E8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LeftRotatePostMirror;                                      // 0x03EC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     ForwardCrouchPelvicVector;                                 // 0x03F0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     ForwardCrouchFeetIKVector;                                 // 0x03FC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     BackCrouchPelvicVector;                                    // 0x0408(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     BackCrouchFeetIKVector;                                    // 0x0414(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     LeftCrouchPelvicVector;                                    // 0x0420(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     LeftCrouchFeetIKVector;                                    // 0x042C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     RightCrouchPelvicVector;                                   // 0x0438(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     RightCrouchFeetIKVector;                                   // 0x0444(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ForwardCrouchPelvicOffset;                                 // 0x0450(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ForwardCrouchFeetIKOffset;                                 // 0x0454(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BackCrouchPelvicOffset;                                    // 0x0458(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BackCrouchFeetIKOffset;                                    // 0x045C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LeftCrouchPelvicOffset;                                    // 0x0460(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LeftCrouchFeetIKOffset;                                    // 0x0464(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RightCrouchPelvicOffset;                                   // 0x0468(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RightCrouchFeetIKOffset;                                   // 0x046C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentAccelVectorLength;                                  // 0x0470(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxSlowWalkSpeed;                                          // 0x0474(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxWalkSpeed;                                              // 0x0478(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxADSWalkSpeed;                                           // 0x047C(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxSprintSpeed;                                            // 0x0480(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxCrouchSpeed;                                            // 0x0484(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxADSCrouchSpeed;                                         // 0x0488(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bShouldTransitionADSCrouch : 1;                            // 0x048C(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_T5LG[0x3];                                     // 0x048D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CurSpeedFraction;                                          // 0x0490(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurMaxSpeed;                                               // 0x0494(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurSpeedScaling;                                           // 0x0498(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDoCheckFirstStepCurve;                                    // 0x049C(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_46LT[0x3];                                     // 0x049D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FirstStepTransitionAlpha;                                  // 0x04A0(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpeedWarpingAlpha;                                         // 0x04A4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ParachuteMovementPitch;                                    // 0x04A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ParachuteMovementYaw;                                      // 0x04AC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ParachuteMovementForward;                                  // 0x04B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ParachuteMovementLateral;                                  // 0x04B4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSkydiveTurnOverridesStrafe;                               // 0x04B8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsNoseDiving;                                             // 0x04B9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_45KO[0x2];                                     // 0x04BA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ParachuteYawInterpSpeed;                                   // 0x04BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ParachutePitchInterpSpeed;                                 // 0x04C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ParachuteForwardInterpSpeed;                               // 0x04C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ParachuteLateralInterpSpeed;                               // 0x04C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ParachuteForwardThreshold;                                 // 0x04CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bParachuteReady;                                           // 0x04D0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TKPM[0x3];                                     // 0x04D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ParachuteYawRotationFactor;                                // 0x04D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     LastFreeFallMovementVector;                                // 0x04D8(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFloatHitSpringState                        HitSpringRollState;                                        // 0x04E4(0x0008) (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFloatHitSpringState                        HitSpringPitchState;                                       // 0x04EC(0x0008) (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFloatHitSpringState                        HitSpringYawState;                                         // 0x04F4(0x0008) (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              HitRotationAmountRoll;                                     // 0x04FC(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HitRotationAmountPitch;                                    // 0x0500(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HitRotationAmountYaw;                                      // 0x0504(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HitRotationPitchMax;                                       // 0x0508(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HitRotationRollMax;                                        // 0x050C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HitRotationYawMax;                                         // 0x0510(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     PelvisHitOffset;                                           // 0x0514(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    SpineHitOffset;                                            // 0x0520(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    NeckHitOffset;                                             // 0x052C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    ArmHitOffset;                                              // 0x0538(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QQ9B[0x4];                                     // 0x0544(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FHitReaction>                        QueuedHits;                                                // 0x0548(0x0010) (BlueprintVisible, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveVector*                                HitReactionTimeScale;                                      // 0x0558(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 HitReactionDamageScale;                                    // 0x0560(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ADSHitReactionBlend;                                       // 0x0568(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AOSHitReactionBlend;                                       // 0x056C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HipfireHitReactionBlend;                                   // 0x0570(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SimClientHitReactionBlend;                                 // 0x0574(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentHitReactionBlend;                                   // 0x0578(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpineFireRotationLimit;                                    // 0x057C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NeckFireRotationLimit;                                     // 0x0580(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ClavicleFireRotationLimit;                                 // 0x0584(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              UpperArmFireRotationPitchLimit;                            // 0x0588(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              UpperArmFireRotationYawLimit;                              // 0x058C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ForearmFireRotationLimit;                                  // 0x0590(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFloatHitSpringState                        SpineFireSpringState;                                      // 0x0594(0x0008) (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFloatHitSpringState                        NeckFireSpringState;                                       // 0x059C(0x0008) (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFloatHitSpringState                        ClavicleFireSpringState;                                   // 0x05A4(0x0008) (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFloatHitSpringState                        UpperArmFireSpringState;                                   // 0x05AC(0x0008) (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFloatHitSpringState                        UpperArmFireYawSpringState;                                // 0x05B4(0x0008) (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FFloatHitSpringState                        ForearmFireSpringState;                                    // 0x05BC(0x0008) (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              SpineFireRotationAmountPitch;                              // 0x05C4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NeckFireRotationAmountPitch;                               // 0x05C8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ClavicleFireRotationAmountYaw;                             // 0x05CC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              UpperArmFireRotationAmountPitch;                           // 0x05D0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              UpperArmFireRotationAmountYaw;                             // 0x05D4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ForarmFireRotationAmountPitch;                             // 0x05D8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    SpineFireOffset;                                           // 0x05DC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    NeckFireOffset;                                            // 0x05E8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    ClavicleFireOffset;                                        // 0x05F4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    UpperArmFireOffset;                                        // 0x0600(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    ForearmFireOffset;                                         // 0x060C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              WeaponFireAlpha;                                           // 0x0618(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WeaponAdditiveAlpha;                                       // 0x061C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRecoilProfile                              CurrentRecoilProfile;                                      // 0x0620(0x01EC) (BlueprintVisible, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	int                                                FireImpulseCounter;                                        // 0x080C(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsRecoiling;                                              // 0x0810(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bBypassRecoiling;                                          // 0x0811(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WKFB[0x6];                                     // 0x0812(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, class UKSCharacterAnimInst*>    SubAnimInstances;                                          // 0x0818(0x0050) (BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                               bCanSwitchStartAnim;                                       // 0x0868(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTriggerCustomPivot;                                       // 0x0869(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bActionDisablesLeftHandIKAlpha;                            // 0x086A(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bActionDisablesRightHandIKAlpha;                           // 0x086B(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bActionDisablesLeftHandGripOnly;                           // 0x086C(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bActionDisablesRightHandGripOnly;                          // 0x086D(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceDisableLHIK;                                         // 0x086E(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceDisableRHIK;                                         // 0x086F(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseRightHandGadgetOverride;                               // 0x0870(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldUseFootIKDuringFreefall;                            // 0x0871(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K1NR[0x2];                                     // 0x0872(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ADSRollValue;                                              // 0x0874(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ADSBumpValue;                                              // 0x0878(0x000C) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWantsNonComOffset;                                        // 0x0884(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsWeaponNonComOffset;                                     // 0x0885(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSkinUseNonComOffset;                                      // 0x0886(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SQMD[0x1];                                     // 0x0887(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EngHeadAdditiveAlpha;                                      // 0x0888(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTestGadgetAdditive;                                       // 0x088C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               GadgetStartedRetrieve;                                     // 0x088D(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               GadgetFinishedRetrieve;                                    // 0x088E(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               GadgetStartedThrow;                                        // 0x088F(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               GadgetFinishedThrow;                                       // 0x0890(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_X545[0x3];                                     // 0x0891(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HandIKAdditiveAlpha;                                       // 0x0894(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LeftHandIKAlpha;                                           // 0x0898(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LeftHandIKAlphaTarget;                                     // 0x089C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LeftHandIKBlendSpeed;                                      // 0x08A0(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RightHandIKAlpha;                                          // 0x08A4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RightHandIKAlphaTarget;                                    // 0x08A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RightHandIKBlendSpeed;                                     // 0x08AC(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SlowIKBlendSpeed;                                          // 0x08B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MediumIKBlendSpeed;                                        // 0x08B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FastIKBlendSpeed;                                          // 0x08B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              UplineIKAlpha;                                             // 0x08BC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              UplineIKAlphaTarget;                                       // 0x08C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                NextLeftHandIKForceRequestId;                              // 0x08C4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLeftHandIKForceOffFromRequests;                           // 0x08C8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_I1WS[0x7];                                     // 0x08C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      LeftHandIkForceOffRequests[0x50];                          // 0x08C9(0x0050) UNKNOWN PROPERTY: SetProperty
	bool                                               bLeftHandIKOffFromMainInstNotifyStates;                    // 0x0920(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VUGM[0x57];                                    // 0x0921(0x0057) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FootIKAlpha;                                               // 0x0978(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FootIKAlphaTarget;                                         // 0x097C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnBeginZipline;                                            // 0x0980(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnEndZipline;                                              // 0x0990(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     ZiplineRootOffset;                                         // 0x09A0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     AppliedADSRootTranslation;                                 // 0x09AC(0x000C) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     DefaultADSRootTranslation;                                 // 0x09B8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ForceZiplineMontage;                                       // 0x09C4(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ApplyAimstoZiplineMontage;                                 // 0x09C5(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ZiplineMontageLHIKOverride;                                // 0x09C6(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O9KR[0x1];                                     // 0x09C7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ZiplineMontageLHIKAlpha;                                   // 0x09C8(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ActionPreventsZiplineIntro;                                // 0x09CC(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ForceZiplineLoop;                                          // 0x09CD(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IG0B[0x2];                                     // 0x09CE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector2D                                   ForwardRotateInputRange;                                   // 0x09D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   ForwardRotateOutputRange;                                  // 0x09D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   RightRotateInputRange;                                     // 0x09E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   RightRotateOutputRange;                                    // 0x09E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSMovementDirection                    MovementDirection;                                         // 0x09F0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSMovementDirection                    LocomotionStartDirection;                                  // 0x09F1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSMovementDirection                    LocomotionStopDirection;                                   // 0x09F2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSMovementDirection                    LocomotionPivotDirection;                                  // 0x09F3(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MovementDirectionRotate;                                   // 0x09F4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MovementDirectionRotateOnStartOrStop;                      // 0x09F8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DirectionBlendSpeed;                                       // 0x09FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SV4A[0x4];                                     // 0x0A00(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DirectionChangedBlendSpeed;                                // 0x0A04(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseLimitedMovement;                                       // 0x0A08(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEngUseLimitedMovement;                                    // 0x0A09(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bComUseLimitedMovement;                                    // 0x0A0A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bNonComUseLimitedMovement;                                 // 0x0A0B(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bZeroVelocity : 1;                                         // 0x0A0C(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bZeroAcceleration : 1;                                     // 0x0A0C(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bJumping : 1;                                              // 0x0A0C(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bWasJumping : 1;                                           // 0x0A0C(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bDisableUpperBodyLands : 1;                                // 0x0A0C(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bFalling : 1;                                              // 0x0A0C(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bInFreeFall : 1;                                           // 0x0A0C(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bReadyForFreeFall : 1;                                     // 0x0A0C(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bVaulting : 1;                                             // 0x0A0D(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bIsMantling : 1;                                           // 0x0A0D(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bMantleIsVault : 1;                                        // 0x0A0D(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bCanInterruptMantle : 1;                                   // 0x0A0D(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N8Q7[0x2];                                     // 0x0A0E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TotalVaultDuration;                                        // 0x0A10(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JKYT[0x4];                                     // 0x0A14(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequence*                               CurrentMantleSequence;                                     // 0x0A18(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FMantleConfig                               CurrentMantleConfig;                                       // 0x0A20(0x00A8) (Transient, Protected, NativeAccessSpecifierProtected)
	float                                              VaultStartTime;                                            // 0x0AC8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PreVaultWorldHeight;                                       // 0x0ACC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentVaultTime;                                          // 0x0AD0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NK5P[0x4];                                     // 0x0AD4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FInterpCurveFloat                           VaultTimeScaleCurve;                                       // 0x0AD8(0x0018) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FInterpCurveFloat                           VaultScaledVertCurve;                                      // 0x0AF0(0x0018) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     MantleGrabLocation;                                        // 0x0B08(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MantleDistanceToTop;                                       // 0x0B14(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     MantleTowardsWallDir;                                      // 0x0B18(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bMantleIKLeftHand;                                         // 0x0B24(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bMantleIKRightHand;                                        // 0x0B25(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TH2D[0x2];                                     // 0x0B26(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MantleIKLeftHandAlpha;                                     // 0x0B28(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MantleIKRightHandAlpha;                                    // 0x0B2C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     MantleIKLeftHandLocation;                                  // 0x0B30(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     MantleIKRightHandLocation;                                 // 0x0B3C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bDodgeRolling : 1;                                         // 0x0B48(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2FKT[0x3];                                     // 0x0B49(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DodgeRollDuration;                                         // 0x0B4C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       DodgeRollDirection;                                        // 0x0B50(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bIsInPowerSlide : 1;                                       // 0x0B58(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bAbilityMovement : 1;                                      // 0x0B58(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bZipLining : 1;                                            // 0x0B58(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bZipLineBracing : 1;                                       // 0x0B58(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bZipLineEnding : 1;                                        // 0x0B58(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bZipLineIsUpline : 1;                                      // 0x0B58(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bZipLineIntro : 1;                                         // 0x0B58(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bStunned : 1;                                              // 0x0B58(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bIsBlinded : 1;                                            // 0x0B59(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bHardLand : 1;                                             // 0x0B59(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bCrouching : 1;                                            // 0x0B59(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bWantsToCrouch : 1;                                        // 0x0B59(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bWasCrouchedBeforeRoll : 1;                                // 0x0B59(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bSprinting : 1;                                            // 0x0B59(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bIsInVehicle : 1;                                          // 0x0B59(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NWIV[0x6];                                     // 0x0B5A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequence*                               VehicleIdle;                                               // 0x0B60(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bIsSwimming : 1;                                           // 0x0B68(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bIsSubmerged : 1;                                          // 0x0B68(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FR9T[0x3];                                     // 0x0B69(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    SwimSpineRotation;                                         // 0x0B6C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              AdditiveLandsAlphaMin;                                     // 0x0B78(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AdditiveLandsAlphaMax;                                     // 0x0B7C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bUpdateMovement : 1;                                       // 0x0B80(0x0001) BIT_FIELD (Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bCombat : 1;                                               // 0x0B80(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bDead : 1;                                                 // 0x0B80(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bDowned : 1;                                               // 0x0B80(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bKnockedBack : 1;                                          // 0x0B80(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bIsStopped : 1;                                            // 0x0B80(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BVSM[0x3];                                     // 0x0B81(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    DownedRootFacing;                                          // 0x0B84(0x000C) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnGoDown;                                                  // 0x0B90(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      bActivatingMod : 1;                                        // 0x0BA0(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bAnyModsActive : 1;                                        // 0x0BA0(0x0001) BIT_FIELD (BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PD9Z[0x3];                                     // 0x0BA1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bEnableSprintAdditiveForAbilities;                         // 0x0BA4(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JH6B[0x3];                                     // 0x0BA5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       InteractionState;                                          // 0x0BA8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsReviving;                                               // 0x0BB0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4X48[0x3];                                     // 0x0BB1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              IsInVehicleAlpha;                                          // 0x0BB4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              IsInVehicleInverseAlpha;                                   // 0x0BB8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinZSpeedforJumpLand;                                      // 0x0BBC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bCachedCameraLockout : 1;                                  // 0x0BC0(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bCachedCameraLockoutCooldown : 1;                          // 0x0BC0(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QCZE[0x7];                                     // 0x0BC1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CachedCameraLockoutAlpha;                                  // 0x0BC8(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NU19[0x4];                                     // 0x0BCC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequence*                               FallDown;                                                  // 0x0BD0(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AdditiveLandsAlpha;                                        // 0x0BD8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDownedCosmetic;                                           // 0x0BDC(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWasRecentlyRevived;                                       // 0x0BDD(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasManuallyCanceledDownedCosmetic;                        // 0x0BDE(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IH12[0x1];                                     // 0x0BDF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     AccelDirection;                                            // 0x0BE0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     LocalAccelDirection;                                       // 0x0BEC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     PreviousLocalAccelDirection;                               // 0x0BF8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     Velocity;                                                  // 0x0C04(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     LocalVelocity;                                             // 0x0C10(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     LocalRelativeVelocity;                                     // 0x0C1C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FwdBackIntroLean;                                          // 0x0C28(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LeftRightIntroLean;                                        // 0x0C2C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              IntroLeanMultiplier;                                       // 0x0C30(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              IntroLeanSpeed;                                            // 0x0C34(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              VelocityVsAccelDotProduct;                                 // 0x0C38(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     FacingDirection;                                           // 0x0C3C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     FloorNormal;                                               // 0x0C48(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     AccelRightDirection;                                       // 0x0C54(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     AccelNormDirection;                                        // 0x0C60(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SlopeAngle;                                                // 0x0C6C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SlopeAngleTarget;                                          // 0x0C70(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   SlopeAngleDirectional;                                     // 0x0C74(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    SlopeAngleDirectionalRotation;                             // 0x0C7C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    PowerSlideSlopeAngleRotation;                              // 0x0C88(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              SlopeFeetAlpha;                                            // 0x0C94(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SlopeFeetAlphaTarget;                                      // 0x0C98(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     FootHeightAdjustmentOnSlope;                               // 0x0C9C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     PelvisAdjustmentOnSlope;                                   // 0x0CA8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     RootAdjustmentOnSlope;                                     // 0x0CB4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDisableFeetTilting;                                       // 0x0CC0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IDAB[0x3];                                     // 0x0CC1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              fSlopeInterpSpeed;                                         // 0x0CC4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSLocomotionState                      LocomotionState;                                           // 0x0CC8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               HasLocomotionStartLocation;                                // 0x0CC9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_41P3[0x2];                                     // 0x0CCA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     LocomotionStartLocation;                                   // 0x0CCC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DistFromLocomotionStart;                                   // 0x0CD8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DistFromLocomotionStartMax;                                // 0x0CDC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               HasLocomotionStopLocation;                                 // 0x0CE0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7UH0[0x3];                                     // 0x0CE1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     LocomotionStopLocation;                                    // 0x0CE4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DistFromLocomotionStop;                                    // 0x0CF0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LocomotionStopBufferTime;                                  // 0x0CF4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LocomotionStopBufferExpireTime;                            // 0x0CF8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSuccessPivotCompleteThisFrame;                            // 0x0CFC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               HasLocomotionPivotLocation;                                // 0x0CFD(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               HasLocomotionPrePivotLocation;                             // 0x0CFE(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               HasLocomotionPostPivotLocation;                            // 0x0CFF(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LocomotionPivotThreshold;                                  // 0x0D00(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     LocomotionPivotLocation;                                   // 0x0D04(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     CachedLocomotionPivotLocation;                             // 0x0D10(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DistFromLocomotionPivot;                                   // 0x0D1C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DistFromLocomotionPivotMax;                                // 0x0D20(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     LocomotionPrePivotLocation;                                // 0x0D24(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DistFromLocomotionPrePivot;                                // 0x0D30(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     LocomotionPostPivotLocation;                               // 0x0D34(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DistFromLocomotionPostPivot;                               // 0x0D40(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLocomotionStartUsesPivotDistance;                         // 0x0D44(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               HasJumpStartLocation;                                      // 0x0D45(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KXZO[0x2];                                     // 0x0D46(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     JumpStartLocation;                                         // 0x0D48(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsSprintJumping;                                           // 0x0D54(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsShortJumping;                                            // 0x0D55(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GF5B[0x2];                                     // 0x0D56(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DistFromJumpStart;                                         // 0x0D58(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DistFromJumpStartMax;                                      // 0x0D5C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ShortJumpThreshold;                                        // 0x0D60(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               HasJumpLandLocation;                                       // 0x0D64(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               JumpLandLocationOnGround;                                  // 0x0D65(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DO2C[0x2];                                     // 0x0D66(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     JumpLandLocation;                                          // 0x0D68(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     JumpLandLocationTarget;                                    // 0x0D74(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              JumpLandLocationInterpSpeed;                               // 0x0D80(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NKUX[0x1C];                                    // 0x0D84(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DistFromJumpLand;                                          // 0x0DA0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InitialDistFromJumpLand;                                   // 0x0DA4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DistFromJumpLandTarget;                                    // 0x0DA8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DistFromJumpLandInterpSpeed;                               // 0x0DAC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     SmoothedVelocity;                                          // 0x0DB0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SmoothedVelocityInterp;                                    // 0x0DBC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SmoothedVelocitySpeedThreshold;                            // 0x0DC0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SmoothedVelocityInterpRate;                                // 0x0DC4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SmoothedVelocityInterpRateBelowThreshold;                  // 0x0DC8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PowerSlideProgress;                                        // 0x0DCC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PowerSlideAngle;                                           // 0x0DD0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    PowerSlideRotation;                                        // 0x0DD4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	Killstreak_EKSPowerSlideEndReason                  PowerSlideEndReason;                                       // 0x0DE0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsPowerSlidingOnSlope;                                    // 0x0DE1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsLocallyViewed;                                          // 0x0DE2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               JumpLandLocationInWater;                                   // 0x0DE3(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DesiredComponentYaw;                                       // 0x0DE4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTurnInPlaceInProgress;                                    // 0x0DE8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LA0T[0x3];                                     // 0x0DE9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TurnInPlaceTurnValue;                                      // 0x0DEC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentTurnInPlaceThreshold;                               // 0x0DF0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EKSTurnInPlaceAnimationVariant          LastTurnInPlaceAnimationVariant;                           // 0x0DF4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_83A3[0x3];                                     // 0x0DF5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TurnInPlaceMinThreshold;                                   // 0x0DF8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurnInPlaceMaxOffset;                                      // 0x0DFC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurnInPlaceRetriggerMinThreshold;                          // 0x0E00(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurnInPlaceRecoverySpeedWithAcceleration;                  // 0x0E04(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurnInPlaceRecoverySpeed90;                                // 0x0E08(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurnInPlaceRecoverySpeed180;                               // 0x0E0C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    AppliedTurnInPlaceRotator;                                 // 0x0E10(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    WorldTurnInPlaceRotator;                                   // 0x0E1C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2DTW[0x10];                                    // 0x0E28(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bDisableTurnInPlaceCounterRotate;                          // 0x0E38(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableTurnInPlaceForAOS;                                  // 0x0E39(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EF7X[0x2];                                     // 0x0E3A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EnableCounterRotateBlendTime;                              // 0x0E3C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DisableCounterRotateBlendTime;                             // 0x0E40(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldSplitUpperBody;                                     // 0x0E44(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableSplitUpperBodyForAbilities;                         // 0x0E45(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableUpperBodyTurnInPlace;                              // 0x0E46(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsLockedToWorldRotation;                                  // 0x0E47(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsLockedToWorldRotationAlpha;                              // 0x0E48(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KEJ3[0x3];                                     // 0x0E49(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    LockedWorldRotation;                                       // 0x0E4C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      WorldRotationLockIds[0x50];                                // 0x0E58(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      NextWorldRotationLockId;                                   // 0x0EA8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BW71[0x1F];                                    // 0x0EA9(0x001F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsAimOverShoulder;                                        // 0x0EC8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsLeavingAOS;                                             // 0x0EC9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsAimDownSights;                                          // 0x0ECA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5U7G[0x1];                                     // 0x0ECB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              IsAimDownSightsAlpha;                                      // 0x0ECC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsAimDownSightsFirstPerson;                               // 0x0ED0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_00QH[0x3];                                     // 0x0ED1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              IsAimDownSightsFirstPersonAlpha;                           // 0x0ED4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIs3PAimDownSights;                                        // 0x0ED8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PPCN[0x3];                                     // 0x0ED9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    PreviousCachedAimRotation;                                 // 0x0EDC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    CachedAimRotation;                                         // 0x0EE8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    DeltaAimRotation;                                          // 0x0EF4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    ThirdPersonAppliedAimRotator;                              // 0x0F00(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              ThirdPersonAimYaw;                                         // 0x0F0C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ThirdPersonAimYawInverted;                                 // 0x0F10(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ThirdPersonAimYawCosmetic;                                 // 0x0F14(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ThirdPersonEngagedAimYawCosmetic;                          // 0x0F18(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ThirdPersonAimPitch;                                       // 0x0F1C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ThirdPersonAimPitchInverted;                               // 0x0F20(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ThirdPersonAimPitchUpline;                                 // 0x0F24(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ThirdPersonLean;                                           // 0x0F28(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ThirdPersonFwdLean;                                        // 0x0F2C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ThirdPersonLeanAlpha;                                      // 0x0F30(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ThirdPersonLeanMultiplier;                                 // 0x0F34(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ComLeanMultiplier;                                         // 0x0F38(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NonComLeanMultiplier;                                      // 0x0F3C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EngagedLeanMultiplier;                                     // 0x0F40(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ThirdPersonLeanSpeed;                                      // 0x0F44(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              YawDeltaMinimum;                                           // 0x0F48(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinPitchAngle;                                             // 0x0F4C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxPitchAngle;                                             // 0x0F50(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinYawAngle;                                               // 0x0F54(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxYawAngle;                                               // 0x0F58(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NormalYawInterpSpeed;                                      // 0x0F5C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ZipLineYawInterpSpeed;                                     // 0x0F60(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ZipLineYawInterpSpeedOver180;                              // 0x0F64(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentYawInterpSpeed;                                     // 0x0F68(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TargetYawInterpSpeed;                                      // 0x0F6C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NormalYawInterpAcceleration;                               // 0x0F70(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ADSBlendToCrouchSlotTime;                                  // 0x0F74(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ADSBlendToStandingSlotTime;                                // 0x0F78(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bIsReloading : 1;                                          // 0x0F7C(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bIsSwitchingWeapon : 1;                                    // 0x0F7C(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bIsUsingItem : 1;                                          // 0x0F7C(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bIsUsingAbility : 1;                                       // 0x0F7C(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bIsRetrievingWeapon : 1;                                   // 0x0F7C(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bIsHacking : 1;                                            // 0x0F7C(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bAttachHandWhileCrouching : 1;                             // 0x0F7C(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bAttachHandMelee : 1;                                      // 0x0F7C(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bAttachHandWhileIdle : 1;                                  // 0x0F7D(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bAttachHandWhileSprinting : 1;                             // 0x0F7D(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bAttachHandWhileMoving : 1;                                // 0x0F7D(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bAttachHandWhileZiplining : 1;                             // 0x0F7D(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bAttachRightHandWhileZiplining : 1;                        // 0x0F7D(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bForceAttachHandIfNotNonCom : 1;                           // 0x0F7D(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bAttachRightHand : 1;                                      // 0x0F7D(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bWeaponScale : 1;                                          // 0x0F7D(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bRightPropBScale : 1;                                      // 0x0F7E(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bLeftPropBScale : 1;                                       // 0x0F7E(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bAimsDisabled : 1;                                         // 0x0F7E(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bMantlePlaying : 1;                                        // 0x0F7E(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bIsPreRagdoll : 1;                                         // 0x0F7E(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bIsRagdoll : 1;                                            // 0x0F7E(0x0001) BIT_FIELD (BlueprintVisible, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VNZR[0x1];                                     // 0x0F7F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LeftPropBScaleAlpha;                                       // 0x0F80(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RightPropBScaleAlpha;                                      // 0x0F84(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FreeFallAlpha;                                             // 0x0F88(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BlindedAlpha;                                              // 0x0F8C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TabletScaleAlpha;                                          // 0x0F90(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HolsterLockAlpha;                                          // 0x0F94(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PropLockAlpha;                                             // 0x0F98(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeftHolsterLockAlpha;                                      // 0x0F9C(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    DebugDesiredAimDifference;                                 // 0x0FA0(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                               bUsingZipLineOver180InterpSpeed;                           // 0x0FAC(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4V5U[0x3];                                     // 0x0FAD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    FirstPersonAppliedAimRotator;                              // 0x0FB0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     FirstPersonAppliedBreathStepTranslation;                   // 0x0FBC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FirstPersonBreathSpeed;                                    // 0x0FC8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FirstPersonBreathHeight;                                   // 0x0FCC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FirstPersonStepSpeedStanding;                              // 0x0FD0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FirstPersonStepSpeedCrouching;                             // 0x0FD4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FirstPersonStepHeight;                                     // 0x0FD8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FirstPersonStepMinSpeed;                                   // 0x0FDC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    FirstPersonLaggingAimRotator;                              // 0x0FE0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              Normal1PAimInterpSpeed;                                    // 0x0FEC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentAimPitchSway;                                       // 0x0FF0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentAimPitchSwayOffset;                                 // 0x0FF4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentAimYawSway;                                         // 0x0FF8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentAimYawSwayOffset;                                   // 0x0FFC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NormalLeanAndSwayInterpSpeed;                              // 0x1000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BZDQ[0xC];                                     // 0x1004(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ADSBreathingTime;                                          // 0x1010(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ADSSteppingTime;                                           // 0x1014(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bScaleOutWeapon;                                           // 0x1018(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EY2T[0x3];                                     // 0x1019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              WeaponScaleAlpha;                                          // 0x101C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               WeaponScaleLeftPropOnly;                                   // 0x1020(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               WeaponScaleRightPropOnly;                                  // 0x1021(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUnarmed;                                                  // 0x1022(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMelee;                                                    // 0x1023(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bQuickMelee;                                               // 0x1024(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsUsingMedPen;                                            // 0x1025(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableMeleeLowerBody;                                     // 0x1026(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMeleeAim;                                                 // 0x1027(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMeleeNoAim;                                               // 0x1028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J80T[0x3];                                     // 0x1029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MeleeLowerBodyDuration;                                    // 0x102C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EKSMovementDirection                    MeleeLowerBodyDirection;                                   // 0x1030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsUsingTestLocomotion;                                    // 0x1031(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_ECombatState                            TestCombatState;                                           // 0x1032(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_ECombatState                            CombatState;                                               // 0x1033(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_ECombatState                            InitialCombatState;                                        // 0x1034(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_ECombatState                            DefaultCombatState;                                        // 0x1035(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FGW2[0x2];                                     // 0x1036(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CombatStateCooldownTime;                                   // 0x1038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TestCombatStateCooldownTime;                               // 0x103C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WeaponCombatStateCooldownTime;                             // 0x1040(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DKMU[0x4];                                     // 0x1044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCombatStateChanged;                                      // 0x1048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FTimerHandle                                CombatStateCooldownTimer;                                  // 0x1058(0x0008) (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                                TestCombatStateCooldownTimer;                              // 0x1060(0x0008) (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                                EngHeadAdditiveAlphaTimer;                                 // 0x1068(0x0008) (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCooldownBlocked;                                          // 0x1070(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XDT1[0x3];                                     // 0x1071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EngagedBlendTime;                                          // 0x1074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ComBlendTime;                                              // 0x1078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NonComBlendTime;                                           // 0x107C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LeftHandAdditiveReloadOverrideDisableBlendTime;            // 0x1080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDownedIdleToCrawlLoop;                                    // 0x1084(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDownedCrawlLoopToIdle;                                    // 0x1085(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanBlink;                                                 // 0x1086(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsBlinking;                                               // 0x1087(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bBlinkIsClosingEyes;                                       // 0x1088(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsSlowBlinking;                                           // 0x1089(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsDoubleBlinking;                                         // 0x108A(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UT72[0x1];                                     // 0x108B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EyeBlinkAlpha;                                             // 0x108C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeToNextBlink;                                           // 0x1090(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinimumTimeBetweenBlinks;                                  // 0x1094(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaximumTimeBetweenBlinks;                                  // 0x1098(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EyeBlinkSpeed;                                             // 0x109C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EyeBlinkSpeedSlow;                                         // 0x10A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SlowBlinkPercentageChance;                                 // 0x10A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DoubleBlinkPercentageChance;                               // 0x10A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UHXP[0x4];                                     // 0x10AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                BlinkTimer;                                                // 0x10B0(0x0008) (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSEmotion                              Emotion;                                                   // 0x10B8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PJNG[0x3];                                     // 0x10B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EmotionAnimTime;                                           // 0x10BC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnAnimationEvent;                                          // 0x10C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RSR6[0x10];                                    // 0x10D0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsNonComIdle;                                             // 0x10E0(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q4TS[0x7];                                     // 0x10E1(0x0007) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1157);
		return ptr;
	}



	void UpdateTurnInPlace(float DeltaSeconds);
	void UpdateTestCombatState(Killstreak_ECombatState NewCombatState, bool bBlockCooldown, bool bForce);
	void UpdatePostMirrorRotateValues();
	void UpdateCombatState(Killstreak_ECombatState NewCombatState, bool bBlockCooldown, bool bForce);
	void UpdateCachedPivotLocation();
	void UnplantRightHand();
	void UnplantLeftHand();
	void UnhideWeapon();
	void UnhideMag();
	void UnhideGadget();
	void TryToTriggerTurnInPlaceAnimation(Killstreak_EKSTurnInPlaceAnimationVariant AnimationVariant, float DelayTime);
	class AKSCharacterBase* TryGetKSCharacterBase();
	void TriggerDisableAims(bool bShouldDisable);
	void TriggerCustomPivot();
	void SwitchWeaponNative(class UKSWeaponComponent* Weapon);
	void SwitchWeaponIKNative(class UKSWeaponComponent* Weapon);
	void StopFire();
	void StopEmote();
	void StartRevivee();
	void StartFire();
	void ShoulderCharge();
	void SetMaxSpeedValues(class UKSWeaponAsset* WeaponAsset);
	void ReviveMesh(class UAnimMontage* ReviveMontage, bool bIsInAir);
	void RetrieveEnd();
	void RetrieveBegin();
	void RequestNewCombatState(Killstreak_ECombatState NewCombatState, bool bBlockCooldown, bool bForce);
	int RequestLeftHandIKForceOff();
	bool ReleaseWorldRotationLock(unsigned char InLockId);
	bool PopLeftHandIKForceOffRequest(int RequestID);
	void PlayRecoilProfile(const struct FRecoilProfile& RecoilProfile);
	void OnTestCombatStateCooldown();
	void OnMovementDirectionChanged(Killstreak_EKSMovementDirection OldDirection, Killstreak_EKSMovementDirection NewDirection);
	void OnCombatStateCooldown();
	void LocomotionStop(const struct FVector& StopLocation);
	void LocomotionStart(const struct FVector& StartLocation);
	void LocomotionPrePivot();
	void LocomotionPivotCheckpoint();
	void LocomotionPivot(const struct FVector& PivotLocation);
	void LocomotionJumpStart(const struct FVector& StartLocation);
	void LocomotionJumpLand(const struct FVector& LandLocation);
	unsigned char LockToCurrentInWorldRotation(bool bOverrideRotation, const struct FRotator& Override);
	bool IsPlayingEmote();
	bool IsLeftHandIKForcedOff();
	void HideWeapon();
	void HideMag();
	void HideGadget();
	Killstreak_EKSMovementDirection GetMovementDirectionFromLocalAcceleration(const struct FVector& NormalizedLocalAccel, bool bGetOppositeDirection);
	Killstreak_ECombatState GetCombatState();
	float STATIC_FloatSpringInterp(float Current, float Target, struct FFloatHitSpringState* SpringState, float Stiffness, float CriticalDampingFactor, float DeltaTime, float Mass);
	void EventStopSwimming();
	void EventStopSubmerge();
	void EventStartSwimming();
	void EventStartSubmerge();
	void EventStartInteraction(const struct FName& NewInteractState, float NewInteractHeight, float NewInteractTime);
	void EventPlayHitReactionAnimation(const struct FName& AttackDirection, bool bWillReturnDamage);
	void EventPlayFireAnimation();
	bool EventPlayDeathAnimation();
	void EventEndZipLineEnding();
	void EventEndZipLineBrace();
	void EventEndZipLine();
	void EventEndVault();
	void EventEndStun();
	void EventEndPowerSlide(Killstreak_EKSPowerSlideEndReason EndReason);
	void EventEndInteraction(const struct FName& OldInteractState);
	void EventEndHardLand();
	void EventEndActivatingMod();
	void EventEndAbilityMovement();
	void EventDoZipLineEnding();
	void EventDoZipLineBrace();
	void EventDoZipLine();
	void EventDoVault(float InMantleHeight, bool bInVault, float InVaultDrop, float InUpDuration, float InAcrossDuration, float InDownDuration, const struct FName& InMantleName);
	void EventDoStun();
	void EventDoPowerSlide();
	void EventDoHardLandAvoid();
	void EventDoHardLand();
	void EventDoGoDown();
	void EventDoDodgeRoll(float Duration, const struct FVector2D& Direction);
	void EventDoActivatingMod();
	void EventDoAbilityMovement();
	void EventActivatedModExpired();
	void EndRevivee();
	void EnableAims();
	void EmoteMontageLostAllLocalWeight();
	void EmoteMontageLostAllGlobalWeight();
	void DoResetCustomPivot();
	void DodgeRollExpire();
	void DisableAims();
	bool CheckCanSpray();
	bool CheckCanEmote();
	bool CanUseCombatState(Killstreak_ECombatState TestState);
	void CancelDownedCosmetic();
	void BroadcastOnGoDown();
	void BroadcastAnimationEvent(const struct FName& EventName);
	void BlinkEyes();
	void AttemptTestCombatStateCooldown();
	void AttemptCombatStateCooldown();
	void AdditiveRetrieveEnd();
	void AdditiveRetrieveBegin();
};

// Class Killstreak.KSSwimmingAnimInst
// 0x0000 (FullSize[0x10E8] - InheritedSize[0x10E8])
class UKSSwimmingAnimInst : public UKSCharacterAnimInst
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1694);
		return ptr;
	}



	void SwimNotifyTransitionStateLock(bool bShouldLock);
	void SwimNotifyTransitionEnd();
};

// Class Killstreak.KSSwimmingPhysicsVolume
// 0x0000 (FullSize[0x0268] - InheritedSize[0x0268])
class AKSSwimmingPhysicsVolume : public APhysicsVolume
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1695);
		return ptr;
	}



};

// Class Killstreak.KSTabletAnimInstance
// 0x0030 (FullSize[0x0360] - InheritedSize[0x0330])
class UKSTabletAnimInstance : public UKSAnimInstance
{
public:
	bool                                               bIsClosed;                                                 // 0x0330(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PWU4[0x2F];                                    // 0x0331(0x002F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1696);
		return ptr;
	}



	bool OpenTablet();
	void FullyOpened();
	void FullyClosed();
	bool CloseTablet();
	bool CheckFullyOpened();
	bool CheckFullyClosed();
};

// Class Killstreak.KSSkeletalMeshComponent
// 0x0050 (FullSize[0x0DA0] - InheritedSize[0x0D50])
class UKSSkeletalMeshComponent : public USkinnableMergedMeshComponent
{
public:
	bool                                               bForceTextureResidentFlagOnAllTextures;                    // 0x0D50(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GTDC[0x17];                                    // 0x0D51(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TeleportDistanceDeltaThreshold;                            // 0x0D68(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NK0T[0x1C];                                    // 0x0D6C(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bEnableDedicatedServerRequiredBones;                       // 0x0D88(0x0001) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_85T6[0x7];                                     // 0x0D89(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               RequiredDedicatedServerBoneNames;                          // 0x0D90(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1163);
		return ptr;
	}



	void SetTeleportDistanceDeltaThreshold(float Threshold);
	void SetForceTextureResidentFlag(bool bEnable);
	float GetTeleportDistanceDeltaThreshold();
	bool GetForceTextureResidentFlag();
};

// Class Killstreak.KSTabletMeshComponent
// 0x0000 (FullSize[0x0DA0] - InheritedSize[0x0DA0])
class UKSTabletMeshComponent : public UKSSkeletalMeshComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1697);
		return ptr;
	}



	void OpenTablet();
	void OnOpenComplete();
	void OnCloseComplete();
	void CloseTablet();
};

// Class Killstreak.KSTargeter
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSTargeter : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1698);
		return ptr;
	}



	class AActor* GetCurrentTarget();
};

// Class Killstreak.KSTargetingDetailsWidget
// 0x0008 (FullSize[0x0240] - InheritedSize[0x0238])
class UKSTargetingDetailsWidget : public UUserWidget
{
public:
	float                                              CurrentDistance;                                           // 0x0238(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_I91W[0x4];                                     // 0x023C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1699);
		return ptr;
	}



	void OnCurrentDistanceChanged(float NewDistance);
};

// Class Killstreak.KSTeamCreator
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSTeamCreator : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1700);
		return ptr;
	}



};

// Class Killstreak.KSTeamKillTracker
// 0x0018 (FullSize[0x00B8] - InheritedSize[0x00A0])
class UKSTeamKillTracker : public UKSAccoladeTracker
{
public:
	TArray<struct FPlayerTeamTracker>                  PlayerTeamKillTracker;                                     // 0x00A0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TeamKillRequirement;                                       // 0x00B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IADT[0x4];                                     // 0x00B4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1701);
		return ptr;
	}



	void StoreCombatInfo(const struct FCombatEventInfo& ElimEvent);
	bool HasEliminateVictim(const struct FPlayerTeamTracker& PlayerTeamTracker, int VictimPlayerId);
	bool ContainsPlayer(class AKSPlayerState* PlayerState, struct FPlayerTeamTracker* PlayerTeamTracker, int* TrackerIndex);
	bool CheckRequirements(const struct FCombatEventInfo& ElimEvent);
};

// Class Killstreak.KSTeamState
// 0x04D0 (FullSize[0x06F0] - InheritedSize[0x0220])
class AKSTeamState : public AInfo
{
public:
	int                                                r_TeamNum;                                                 // 0x0220(0x0004) (Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTeamEliminated;                                           // 0x0224(0x0001) (Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTeamEliminatedOrDowned;                                   // 0x0225(0x0001) (Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NQN5[0x2];                                     // 0x0226(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnTeamEliminated;                                          // 0x0228(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnTeamEliminatedOrDowned;                                  // 0x0238(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnTeamMemberEliminatedDel;                                 // 0x0248(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnTeamMemberDownedDel;                                     // 0x0258(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_73PY[0x18];                                    // 0x0268(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AKSPlayerState*>                      AllMembers;                                                // 0x0280(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AKSPlayerState*>                      PlayerMembers;                                             // 0x0290(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2XAA[0x10];                                    // 0x02A0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnMemberAdded;                                             // 0x02B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9HE7[0x18];                                    // 0x02C0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnMemberRemoved;                                           // 0x02D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_V5G5[0x18];                                    // 0x02E8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSRespawnConfig                            RespawnConfig;                                             // 0x0300(0x0018) (BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	int                                                Respawns;                                                  // 0x0318(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SRTN[0x4];                                     // 0x031C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnRespawnsChangedDel;                                      // 0x0320(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRespawnQueueChangedDel;                                  // 0x0330(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRespawnConfigChangedDel;                                 // 0x0340(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TArray<class AKSPlayerState*>                      RespawnQueue;                                              // 0x0350(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKSPersistentPlayerData*>             PersistentRespawnQueue;                                    // 0x0360(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                Score;                                                     // 0x0370(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                IntraScore;                                                // 0x0374(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                IntraScoreGoal;                                            // 0x0378(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RoundWins;                                                 // 0x037C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RoundLosses;                                               // 0x0380(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VTPR[0x4];                                     // 0x0384(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnScoreChanged;                                            // 0x0388(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnIntraScoreChanged;                                       // 0x0398(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnIntraScoreGoalChanged;                                   // 0x03A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnObjectiveRoleChanged;                                    // 0x03B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	Killstreak_EExtractionTeamType                     TeamType;                                                  // 0x03C8(0x0001) (Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KZTJ[0x7];                                     // 0x03C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPingAdded;                                               // 0x03D0(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPingRemoved;                                             // 0x03E0(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPingChanged;                                             // 0x03F0(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	class UClass*                                      JobSelectionClass;                                         // 0x0400(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSJobSelectionComponent*                    JobSelectionComponent;                                     // 0x0408(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnJobSelectionComponentReady;                              // 0x0410(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PF4F[0x48];                                    // 0x0420(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                TotalKills;                                                // 0x0468(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                TotalDeaths;                                               // 0x046C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                TotalAssists;                                              // 0x0470(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                SideNum;                                                   // 0x0474(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                LocalSideNum;                                              // 0x0478(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8UAY[0x4];                                     // 0x047C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UKSPersistentPlayerData*>             PersistentTeamMembers;                                     // 0x0480(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnPersistentTeamMemberAdded;                               // 0x0490(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TPLF[0x18];                                    // 0x04A0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPersistentTeamMemberRemoved;                             // 0x04B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YJC2[0x18];                                    // 0x04C8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnTeamCanSurrenderChanged;                                 // 0x04E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bTeamCanProposeSurrender;                                  // 0x04F0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_E48U[0x27];                                    // 0x04F1(0x0027) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FMultiPlayerSkinMapReplicator               SkinMapReplicator;                                         // 0x0518(0x01D8) (Net, Transient, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1702);
		return ptr;
	}



	bool SubtractTickets(int NumTickets);
	bool ShouldKeepTeamAlive();
	void SetTeamType(Killstreak_EExtractionTeamType NewType);
	void ResetTeamElimination();
	bool RequestQueueRespawn(int Count);
	void OnTeamUpdated();
	void OnTeamMemberRemoved(class AKSPlayerState* LostMember);
	void OnTeamMemberEliminated(class AKSPlayerState* Member);
	void OnTeamMemberDowned(class AKSPlayerState* Member);
	void OnTeamMemberAdded(class AKSPlayerState* NewMember);
	void OnSurrenderPollStarted();
	void OnSurrenderPollFailed();
	void OnSideNumUpdated();
	void OnRep_TeamType();
	void OnRep_TeamEliminatedOrDowned();
	void OnRep_TeamEliminated();
	void OnRep_TeamCanProposeSurrender();
	void OnRep_Score();
	void OnRep_Respawns();
	void OnRep_RespawnQueue();
	void OnRep_RespawnConfig();
	void OnRep_JobSelectionComponent();
	void OnRep_IntraScoreGoal();
	void OnRep_IntraScore();
	void OnPlayerLogout(class AController* Controller);
	void NewPingRequest(const struct FPingInfo& PingInfo);
	void NewPingRemoveRequest(int PingId, class AKSPlayerState* PingingPlayer);
	void NewPingChangeRequest(int PingId, class AKSPlayerState* PingingPlayer, class AKSPlayerState* AcknowledgingPlayer);
	bool IsEliminated();
	bool IsDefending();
	bool IsAttacking();
	Killstreak_EExtractionTeamType GetTeamType();
	TArray<class AKSPlayerState*> GetSortedPlayers();
	struct FKSRespawnConfig GetRespawnConfig();
	int GetRemainingRespawns();
	int GetPlayersRemaining(bool DownAsDead);
	int GetNumberOfPlayers();
	int GetNumberOfHumanPlayers();
	int GetNumberOfBotPlayers();
	int GetLivesRemaining(bool CountDowned);
	int GetExpectedTeamSize();
	void GetAllPersistentTeamMembers(TArray<class UKSPersistentPlayerData*>* OutPersistentTeamMembers);
	TArray<class AKSPlayerState*> GetAllMembers();
	void ForceResetTeamElimination();
	void EliminateTeam();
	bool AllPlayersEliminatedOrDowned();
};

// Class Killstreak.KSTeamState_Control
// 0x0008 (FullSize[0x06F8] - InheritedSize[0x06F0])
class AKSTeamState_Control : public AKSTeamState
{
public:
	int                                                ControlScore;                                              // 0x06F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BKUB[0x4];                                     // 0x06F4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1703);
		return ptr;
	}



};

// Class Killstreak.KSTestWeaponCategory
// 0x00C8 (FullSize[0x0318] - InheritedSize[0x0250])
class UKSTestWeaponCategory : public UKSItem
{
public:
	struct FText                                       CategoryDisplayNameSingular;                               // 0x0250(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTag                                CategoryTag;                                               // 0x0268(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      SoftSymbolIcon[0x28];                                      // 0x0270(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      SoftMasteryIcon[0x28];                                     // 0x0298(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      SoftVerticalSplash[0x28];                                  // 0x02C0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      SoftHorizontalSplash[0x28];                                // 0x02E8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               ShowsMasteryUI;                                            // 0x0310(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShowsWeaponUnlockUI;                                       // 0x0311(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShowsRelatedJobsUI;                                        // 0x0312(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PPYB[0x5];                                     // 0x0313(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1704);
		return ptr;
	}



};

// Class Killstreak.KSThreatComponent
// 0x00E0 (FullSize[0x0190] - InheritedSize[0x00B0])
class UKSThreatComponent : public UActorComponent
{
public:
	int                                                ThreatUpdateIndex;                                         // 0x00B0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentThreat;                                             // 0x00B4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ThreatBucketValue;                                         // 0x00B8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N372[0x4];                                     // 0x00BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSThreatComponent*                          OwningThreat;                                              // 0x00C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKSThreatComponent*>                  OwnedThreats;                                              // 0x00C8(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSCharacter*                                OwningCharacter;                                           // 0x00D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AKSCharacter>                 LocalPlayerCharacter;                                      // 0x00E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SWLK[0x10];                                    // 0x00E8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SelfThreatValue;                                           // 0x00F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AllyThreatValue;                                           // 0x00FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DefaultThreatValue;                                        // 0x0100(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TDO7[0x4];                                     // 0x0104(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<float>                                      BucketValues;                                              // 0x0108(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseFocused;                                               // 0x0118(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_I28G[0x3];                                     // 0x0119(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FocusedValue;                                              // 0x011C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FocusedWeight;                                             // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FocusedInnerAngle;                                         // 0x0124(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BLZL[0x4];                                     // 0x0128(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FocusedOuterAngle;                                         // 0x012C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5F1I[0x4];                                     // 0x0130(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bUseFocusTarget;                                           // 0x0134(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_V5WI[0x3];                                     // 0x0135(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FocusTargetValue;                                          // 0x0138(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FocusTargetWeight;                                         // 0x013C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FocusTargetInnerAngle;                                     // 0x0140(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_61DP[0x4];                                     // 0x0144(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FocusTargetOuterAngle;                                     // 0x0148(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_531L[0x4];                                     // 0x014C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bUseProximity;                                             // 0x0150(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AI6I[0x3];                                     // 0x0151(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ProximityValue;                                            // 0x0154(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ProximityWeight;                                           // 0x0158(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ProximityInnerDistance;                                    // 0x015C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ProximityOuterDistance;                                    // 0x0160(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseBehind;                                                // 0x0164(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Y7VS[0x3];                                     // 0x0165(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BehindValue;                                               // 0x0168(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BehindWeight;                                              // 0x016C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BehindInnerAngle;                                          // 0x0170(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_G6DH[0x4];                                     // 0x0174(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BehindOuterAngle;                                          // 0x0178(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2VDB[0x4];                                     // 0x017C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bUseEffectiveRange;                                        // 0x0180(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_72BM[0x3];                                     // 0x0181(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EffectiveRangeValue;                                       // 0x0184(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EffectiveRangeWeight;                                      // 0x0188(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_THCJ[0x4];                                     // 0x018C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1705);
		return ptr;
	}



	void DebugThreatLevels(bool Show);
};

// Class Killstreak.KSBTD_CompareBetweenBlackboards
// 0x00A0 (FullSize[0x0108] - InheritedSize[0x0068])
class UKSBTD_CompareBetweenBlackboards : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                      SourceBlackboardActor;                                     // 0x0068(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      SourceKey;                                                 // 0x0090(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      TargetBlackboardActor;                                     // 0x00B8(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      TargetKey;                                                 // 0x00E0(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1036);
		return ptr;
	}



};

// Class Killstreak.KSBTD_CompareBlackboardToValue
// 0x0008 (FullSize[0x0098] - InheritedSize[0x0090])
class UKSBTD_CompareBlackboardToValue : public UBTDecorator_BlackboardBase
{
public:
	float                                              TargetValue;                                               // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ADOP[0x4];                                     // 0x0094(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1037);
		return ptr;
	}



};

// Class Killstreak.KSBTD_CompareGrenadeFuseTimeLeft
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UKSBTD_CompareGrenadeFuseTimeLeft : public UBTDecorator
{
public:
	float                                              Time;                                                      // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EArithmeticKeyOperation>      ArithmeticOperation;                                       // 0x006C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Y4O5[0x3];                                     // 0x006D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1038);
		return ptr;
	}



};

// Class Killstreak.KSBTD_CompareKeyToObjective
// 0x0008 (FullSize[0x0098] - InheritedSize[0x0090])
class UKSBTD_CompareKeyToObjective : public UBTDecorator_BlackboardBase
{
public:
	class UKSBTObjective*                              Objective;                                                 // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1039);
		return ptr;
	}



};

// Class Killstreak.KSBTD_CompareMatchPhaseTimeLeft
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UKSBTD_CompareMatchPhaseTimeLeft : public UBTDecorator
{
public:
	float                                              Time;                                                      // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EArithmeticKeyOperation>      ArithmeticOperation;                                       // 0x006C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TRUI[0x3];                                     // 0x006D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1040);
		return ptr;
	}



};

// Class Killstreak.KSBTD_CompareRoundNumber
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UKSBTD_CompareRoundNumber : public UBTDecorator
{
public:
	int                                                RoundNumber;                                               // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EArithmeticKeyOperation>      ArithmeticOperation;                                       // 0x006C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DHU6[0x3];                                     // 0x006D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1041);
		return ptr;
	}



};

// Class Killstreak.KSBTD_DestroyableHazardState
// 0x0008 (FullSize[0x0098] - InheritedSize[0x0090])
class UKSBTD_DestroyableHazardState : public UBTDecorator_BlackboardBase
{
public:
	struct FKSDestroyableHazardStateFilter             DestroyableHazardStateFilter;                              // 0x0090(0x0007) (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JAAP[0x1];                                     // 0x0097(0x0001) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1042);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_RunBehaviorForTarget
// 0x00F0 (FullSize[0x0168] - InheritedSize[0x0078])
class UKSBTTask_RunBehaviorForTarget : public UBTTask_RunBehavior
{
public:
	TArray<struct FBlackboardKeySelector>              SourceKeyVector;                                           // 0x0078(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FBlackboardKeySelector>              TargetKeyVector;                                           // 0x0088(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                      SourceFloatVector;                                         // 0x0098(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FBlackboardKeySelector>              TargetFloatKeyVector;                                      // 0x00A8(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<bool>                                       TempBools;                                                 // 0x00B8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UClass*>                              TempClasses;                                               // 0x00C8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<unsigned char>                              TempEnums;                                                 // 0x00D8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<float>                                      TempFloats;                                                // 0x00E8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<int>                                        TempInts;                                                  // 0x00F8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FName>                               TempNames;                                                 // 0x0108(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<unsigned char>                              TempNativeEnums;                                           // 0x0118(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UObject*>                             TempObjects;                                               // 0x0128(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FRotator>                            TempRotators;                                              // 0x0138(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FString>                             TempStrings;                                               // 0x0148(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FVector>                             TempVectors;                                               // 0x0158(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1119);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_SelectBlackboardTarget
// 0x01B0 (FullSize[0x0220] - InheritedSize[0x0070])
class UKSBTTask_SelectBlackboardTarget : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      BlackboardKey;                                             // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              SensesToUse;                                               // 0x0098(0x0010) (Edit, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKSPerceptionFilter                         PerceptionFilter;                                          // 0x00A8(0x0170) (Edit, Protected, NativeAccessSpecifierProtected)
	bool                                               SelectClosestTarget;                                       // 0x0218(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               SelectFurthestTarget;                                      // 0x0219(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               SelectRandomTarget;                                        // 0x021A(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PN0T[0x5];                                     // 0x021B(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1120);
		return ptr;
	}



};

// Class Killstreak.KSBTD_DestructibleState
// 0x0008 (FullSize[0x0098] - InheritedSize[0x0090])
class UKSBTD_DestructibleState : public UBTDecorator_BlackboardBase
{
public:
	struct FKSDestructibleStateFilter                  DestructibleStateFilter;                                   // 0x0090(0x0002) (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NUDL[0x6];                                     // 0x0092(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1043);
		return ptr;
	}



};

// Class Killstreak.KSBTD_DistanceFromBlackboard
// 0x0008 (FullSize[0x0098] - InheritedSize[0x0090])
class UKSBTD_DistanceFromBlackboard : public UBTDecorator_BlackboardBase
{
public:
	TEnumAsByte<AIModule_EArithmeticKeyOperation>      ArithmeticOperation;                                       // 0x0090(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9GB3[0x3];                                     // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DistanceThreshold;                                         // 0x0094(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1044);
		return ptr;
	}



};

// Class Killstreak.KSBTD_EquipmentState
// 0x0090 (FullSize[0x00F8] - InheritedSize[0x0068])
class UKSBTD_EquipmentState : public UBTDecorator
{
public:
	struct FGameplayTag                                EquipPoint;                                                // 0x0068(0x0008) (Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCheckIsEquipped;                                          // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EBasicKeyOperation>           IsEquipped;                                                // 0x0071(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCheckIsActiveWeapon;                                      // 0x0072(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EBasicKeyOperation>           IsActiveWeapon;                                            // 0x0073(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCheckIsReloading;                                         // 0x0074(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EBasicKeyOperation>           IsReloading;                                               // 0x0075(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCheckEquipmentType;                                       // 0x0076(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EBasicKeyOperation>           EquipmentType;                                             // 0x0077(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       ComparedEquipmentTypes;                                    // 0x0078(0x0020) (Edit, Protected, NativeAccessSpecifierProtected)
	bool                                               bCheckEquipmentClass;                                      // 0x0098(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EBasicKeyOperation>           EquipmentClassComparison;                                  // 0x0099(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XIW4[0x6];                                     // 0x009A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      ComparedEquipmentClass[0x28];                              // 0x009A(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	bool                                               bCheckComponentClass;                                      // 0x00C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EBasicKeyOperation>           ComponentClassComparison;                                  // 0x00C9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TDN0[0x6];                                     // 0x00CA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      ComparedComponentClass[0x28];                              // 0x00CA(0x0028) UNKNOWN PROPERTY: SoftClassProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1045);
		return ptr;
	}



};

// Class Killstreak.KSBTD_GameState
// 0x0010 (FullSize[0x0078] - InheritedSize[0x0068])
class UKSBTD_GameState : public UBTDecorator
{
public:
	bool                                               bCheckMatchInProgress;                                     // 0x0068(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EBasicKeyOperation>           MatchInProgress;                                           // 0x0069(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCheckInSetup;                                             // 0x006A(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EBasicKeyOperation>           InSetup;                                                   // 0x006B(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCheckMatchPhase;                                          // 0x006C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EBasicKeyOperation>           MatchPhase;                                                // 0x006D(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_P89Z[0x2];                                     // 0x006E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       MatchPhaseName;                                            // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1046);
		return ptr;
	}



};

// Class Killstreak.KSBTD_HasAmmo
// 0x0018 (FullSize[0x0080] - InheritedSize[0x0068])
class UKSBTD_HasAmmo : public UBTDecorator
{
public:
	struct FGameplayTag                                EquipPoint;                                                // 0x0068(0x0008) (Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EArithmeticKeyOperation>      ClipOperation;                                             // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AKJU[0x3];                                     // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ClipPercentage;                                            // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bOrCheck;                                                  // 0x0078(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EArithmeticKeyOperation>      InventoryOperation;                                        // 0x0079(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_03MM[0x2];                                     // 0x007A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InventoryPercentage;                                       // 0x007C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1047);
		return ptr;
	}



};

// Class Killstreak.KSBTD_HasBeenCollected
// 0x0000 (FullSize[0x0090] - InheritedSize[0x0090])
class UKSBTD_HasBeenCollected : public UBTDecorator_BlackboardBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1048);
		return ptr;
	}



};

// Class Killstreak.KSBTD_HasBeenHitRecently
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UKSBTD_HasBeenHitRecently : public UBTDecorator
{
public:
	float                                              MaxTimeSinceHit;                                           // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5I4R[0x4];                                     // 0x006C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1049);
		return ptr;
	}



};

// Class Killstreak.KSBTD_HasSwappedEquipment
// 0x0028 (FullSize[0x0090] - InheritedSize[0x0068])
class UKSBTD_HasSwappedEquipment : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                      CachedWeaponClassKey;                                      // 0x0068(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1050);
		return ptr;
	}



};

// Class Killstreak.KSGrenadeSpreadRule
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSGrenadeSpreadRule : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1605);
		return ptr;
	}



	TArray<struct FTransform> GetSpread(class UWorld* World, const struct FTransform& Transform, float Radius, float NormalZMin);
};

// Class Killstreak.KSGroundSpreadRule
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UKSGroundSpreadRule : public UKSGrenadeSpreadRule
{
public:
	TArray<struct FVector>                             GroundSpreadVectors;                                       // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1607);
		return ptr;
	}



};

// Class Killstreak.KSClusterSpreadRule
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSClusterSpreadRule : public UKSGrenadeSpreadRule
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1608);
		return ptr;
	}



};

// Class Killstreak.KSBTD_InteractableState
// 0x0018 (FullSize[0x00A8] - InheritedSize[0x0090])
class UKSBTD_InteractableState : public UBTDecorator_BlackboardBase
{
public:
	struct FKSInteractableStateFilter                  InteractableStateFilter;                                   // 0x0090(0x0018) (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1051);
		return ptr;
	}



};

// Class Killstreak.KSBTD_IsActionAllowed
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UKSBTD_IsActionAllowed : public UBTDecorator
{
public:
	class UKSBTAction*                                 Action;                                                    // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1052);
		return ptr;
	}



};

// Class Killstreak.KSBTD_IsActorPendingKill
// 0x0000 (FullSize[0x0090] - InheritedSize[0x0090])
class UKSBTD_IsActorPendingKill : public UBTDecorator_BlackboardBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1053);
		return ptr;
	}



};

// Class Killstreak.KSBTD_IsApproachingDropLocation
// 0x0050 (FullSize[0x00B8] - InheritedSize[0x0068])
class UKSBTD_IsApproachingDropLocation : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                      DropLocationKey;                                           // 0x0068(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      DropLocationVectorKey;                                     // 0x0090(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1054);
		return ptr;
	}



};

// Class Killstreak.KSBTD_IsApproachingFall
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UKSBTD_IsApproachingFall : public UBTDecorator
{
public:
	float                                              LookAheadDistance;                                         // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FallDistance;                                              // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1055);
		return ptr;
	}



};

// Class Killstreak.KSBTD_IsBlackboardSet
// 0x0000 (FullSize[0x0090] - InheritedSize[0x0090])
class UKSBTD_IsBlackboardSet : public UBTDecorator_BlackboardBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1056);
		return ptr;
	}



};

// Class Killstreak.KSBTD_IsBlackboardVisible
// 0x0000 (FullSize[0x0090] - InheritedSize[0x0090])
class UKSBTD_IsBlackboardVisible : public UBTDecorator_BlackboardBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1057);
		return ptr;
	}



};

// Class Killstreak.KSBTD_IsFreeFalling
// 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
class UKSBTD_IsFreeFalling : public UBTDecorator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1058);
		return ptr;
	}



};

// Class Killstreak.KSBTD_IsGameMode
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UKSBTD_IsGameMode : public UBTDecorator
{
public:
	class UClass*                                      GameModeClass;                                             // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1059);
		return ptr;
	}



};

// Class Killstreak.KSBTD_IsOnNavMesh
// 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
class UKSBTD_IsOnNavMesh : public UBTDecorator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1060);
		return ptr;
	}



};

// Class Killstreak.KSBTD_IsRidingZipline
// 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
class UKSBTD_IsRidingZipline : public UBTDecorator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1061);
		return ptr;
	}



};

// Class Killstreak.KSBTD_IsSprinting
// 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
class UKSBTD_IsSprinting : public UBTDecorator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1062);
		return ptr;
	}



};

// Class Killstreak.KSBTD_IsSwimming
// 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
class UKSBTD_IsSwimming : public UBTDecorator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1063);
		return ptr;
	}



};

// Class Killstreak.KSBTD_IsWeaponFiring
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UKSBTD_IsWeaponFiring : public UBTDecorator
{
public:
	struct FGameplayTag                                EquipPoint;                                                // 0x0068(0x0008) (Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1064);
		return ptr;
	}



};

// Class Killstreak.KSBTD_IsWeaponReady
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UKSBTD_IsWeaponReady : public UBTDecorator
{
public:
	struct FGameplayTag                                EquipPoint;                                                // 0x0068(0x0008) (Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1065);
		return ptr;
	}



};

// Class Killstreak.KSBTD_ItemDropState
// 0x0010 (FullSize[0x00A0] - InheritedSize[0x0090])
class UKSBTD_ItemDropState : public UBTDecorator_BlackboardBase
{
public:
	struct FKSItemDropStateFilter                      ItemDropStateFilter;                                       // 0x0090(0x0010) (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1066);
		return ptr;
	}



};

// Class Killstreak.KSBTD_NearbyEnemyCount
// 0x0020 (FullSize[0x0088] - InheritedSize[0x0068])
class UKSBTD_NearbyEnemyCount : public UBTDecorator
{
public:
	TArray<class UClass*>                              SensesToUse;                                               // 0x0068(0x0010) (Edit, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<AIModule_EArithmeticKeyOperation>      ArithmeticOperation;                                       // 0x0078(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QEIZ[0x3];                                     // 0x0079(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                EnemyCount;                                                // 0x007C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DistanceThreshold;                                         // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCheckLOS;                                                 // 0x0084(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ULJO[0x3];                                     // 0x0085(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1067);
		return ptr;
	}



};

// Class Killstreak.KSBTD_RandomCooldown
// 0x0008 (FullSize[0x0070] - InheritedSize[0x0068])
class UKSBTD_RandomCooldown : public UBTDecorator
{
public:
	float                                              MinCoolDownTime;                                           // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxCoolDownTime;                                           // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1068);
		return ptr;
	}



};

// Class Killstreak.KSBTD_ShouldCrouchAtPoint
// 0x0028 (FullSize[0x0090] - InheritedSize[0x0068])
class UKSBTD_ShouldCrouchAtPoint : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                      PointKey;                                                  // 0x0068(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1069);
		return ptr;
	}



};

// Class Killstreak.KSBTD_ShouldDodgeRoll
// 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
class UKSBTD_ShouldDodgeRoll : public UBTDecorator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1070);
		return ptr;
	}



};

// Class Killstreak.KSBTD_ShouldStrafe
// 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
class UKSBTD_ShouldStrafe : public UBTDecorator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1071);
		return ptr;
	}



};

// Class Killstreak.KSBTD_ShouldThrowGrenade
// 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
class UKSBTD_ShouldThrowGrenade : public UBTDecorator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1072);
		return ptr;
	}



};

// Class Killstreak.KSBTD_ShouldThrowMelee
// 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
class UKSBTD_ShouldThrowMelee : public UBTDecorator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1073);
		return ptr;
	}



};

// Class Killstreak.KSBTD_TimerComplete
// 0x0000 (FullSize[0x0090] - InheritedSize[0x0090])
class UKSBTD_TimerComplete : public UBTDecorator_BlackboardBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1074);
		return ptr;
	}



};

// Class Killstreak.KSBTD_WantsToVaultFromSwimming
// 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
class UKSBTD_WantsToVaultFromSwimming : public UBTDecorator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1075);
		return ptr;
	}



};

// Class Killstreak.KSBTD_WeightedPerceptionCheck
// 0x0018 (FullSize[0x0080] - InheritedSize[0x0068])
class UKSBTD_WeightedPerceptionCheck : public UBTDecorator
{
public:
	TArray<struct FKSWeightedPerceptionEntry>          WeightedEntries;                                           // 0x0068(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                CriticalWeightDifference;                                  // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0SOY[0x4];                                     // 0x007C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1076);
		return ptr;
	}



};

// Class Killstreak.KSBTD_WillActiveGrenadeHitTarget
// 0x0008 (FullSize[0x0098] - InheritedSize[0x0090])
class UKSBTD_WillActiveGrenadeHitTarget : public UBTDecorator_BlackboardBase
{
public:
	float                                              OverrideMinRadius;                                         // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_V1TF[0x4];                                     // 0x0094(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1077);
		return ptr;
	}



};

// Class Killstreak.KSBTDifficulty
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UKSBTDifficulty : public UDataAsset
{
public:
	struct FString                                     DifficultyName;                                            // 0x0030(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1078);
		return ptr;
	}



};

// Class Killstreak.KSBTObjective
// 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
class UKSBTObjective : public UDataAsset
{
public:
	struct FString                                     ObjectiveName;                                             // 0x0030(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     ObjectiveTargetKeyName;                                    // 0x0040(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UKSBTAction*>                         RequiredActions;                                           // 0x0050(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      RequiredAbilities[0x10];                                   // 0x0060(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1079);
		return ptr;
	}



};

// Class Killstreak.KSBTObjective_DestroyHazard
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UKSBTObjective_DestroyHazard : public UKSBTObjective
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1080);
		return ptr;
	}



};

// Class Killstreak.KSBTObjective_Patrol
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UKSBTObjective_Patrol : public UKSBTObjective
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1081);
		return ptr;
	}



};

// Class Killstreak.KSBTObjective_PickUpItem
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UKSBTObjective_PickUpItem : public UKSBTObjective
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1082);
		return ptr;
	}



};

// Class Killstreak.KSBTTargetSelector
// 0x0188 (FullSize[0x01B8] - InheritedSize[0x0030])
class UKSBTTargetSelector : public UDataAsset
{
public:
	TArray<class UClass*>                              SensesToUse;                                               // 0x0030(0x0010) (Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKSPerceptionFilter                         PerceptionFilter;                                          // 0x0040(0x0170) (Edit, NativeAccessSpecifierPublic)
	bool                                               SelectCombatTargetOfResult;                                // 0x01B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               SelectClosestTarget;                                       // 0x01B1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               SelectFurthestTarget;                                      // 0x01B2(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               SelectRandomTarget;                                        // 0x01B3(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WJRZ[0x4];                                     // 0x01B4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1083);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_ActivateAbility
// 0x0028 (FullSize[0x0098] - InheritedSize[0x0070])
class UKSBTTask_ActivateAbility : public UBTTaskNode
{
public:
	unsigned char                                      ActivatedAbility[0x28];                                    // 0x0070(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1084);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_ActivateUniqueAbility
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UKSBTTask_ActivateUniqueAbility : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1085);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_LookAt
// 0x0020 (FullSize[0x00C0] - InheritedSize[0x00A0])
class UKSBTTask_LookAt : public UBTTask_RotateToFaceBBEntry
{
public:
	unsigned char                                      UnknownData_CD8Z[0x4];                                     // 0x00A0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LookRotationRate;                                          // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    HorizonAngle;                                              // 0x00A8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	int                                                CorridorSmoothingCount;                                    // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                FirstCorridorIndex;                                        // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FTO2[0x4];                                     // 0x00BC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1087);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_AimAt
// 0x0018 (FullSize[0x00D8] - InheritedSize[0x00C0])
class UKSBTTask_AimAt : public UKSBTTask_LookAt
{
public:
	float                                              AimRadius;                                                 // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     AimOffset;                                                 // 0x00C4(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AimAheadSeconds;                                           // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SQGP[0x4];                                     // 0x00D4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1088);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_BuyItemFromShop
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UKSBTTask_BuyItemFromShop : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1089);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_ClearFocus
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UKSBTTask_ClearFocus : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1090);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_ClearNavigationInteractTarget
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UKSBTTask_ClearNavigationInteractTarget : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1091);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_ClearReviverForTarget
// 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
class UKSBTTask_ClearReviverForTarget : public UBTTask_BlackboardBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1092);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_ClearValue
// 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
class UKSBTTask_ClearValue : public UBTTask_BlackboardBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1093);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_CopyActorLocation
// 0x0050 (FullSize[0x00C0] - InheritedSize[0x0070])
class UKSBTTask_CopyActorLocation : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      ActorKey;                                                  // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      LocationKey;                                               // 0x0098(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1094);
		return ptr;
	}



};

// Class Killstreak.KSEmoteCosmeticComponent
// 0x0178 (FullSize[0x0298] - InheritedSize[0x0120])
class UKSEmoteCosmeticComponent : public UKSEquipmentCosmeticComponent
{
public:
	unsigned char                                      PawnRotationLockId;                                        // 0x0120(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JW2O[0x3];                                     // 0x0121(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                EmotionInstanceId;                                         // 0x0124(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RWMZ[0x30];                                    // 0x0128(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSEmote*                                    EmoteAsset;                                                // 0x0158(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint16_t                                           PlayTicker;                                                // 0x0160(0x0002) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6FSQ[0x6];                                     // 0x0162(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMultiSkinObject*                            SkinObject;                                                // 0x0168(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDynamicSkinTable*                           SkinTable;                                                 // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_51BC[0xA0];                                    // 0x0178(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsInitialized;                                            // 0x0218(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bIsPlaying;                                                // 0x0219(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bShouldLoop;                                               // 0x021A(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ESA9[0x1];                                     // 0x021B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     LastEmotePlayedLocation;                                   // 0x021C(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MJ8Y[0x8];                                     // 0x0228(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSEmoteInterruptTickFunction               InterruptTick;                                             // 0x0230(0x0030) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QQMY[0x28];                                    // 0x0260(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UKSEmoteCosmeticSubInstance*>         SubInstances;                                              // 0x0288(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1223);
		return ptr;
	}



	void OnRep_PlayTicker();
	void OnRep_EmoteAsset();
	void OnInitialize();
	void MarkStopped();
	void MarkPlaying();
	bool IsPlaying();
	bool IsInitialized();
	class UMultiSkinObject* GetSkinObject();
	class UKSEmote* GetEmoteAsset();
	void BlueprintPlayEmote();
	void BlueprintInterruptEmote(Killstreak_EKSRadialMenuItemInterruptReason Reason);
	class UKSEmoteCosmeticSubInstance* AddEmoteCosmeticSubInstance(class UClass* SubInstanceClass);
};

// Class Killstreak.KSEmoteCosmeticComponent_Spray
// 0x0038 (FullSize[0x02D0] - InheritedSize[0x0298])
class UKSEmoteCosmeticComponent_Spray : public UKSEmoteCosmeticComponent
{
public:
	int                                                StatTrackingNumber;                                        // 0x0298(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B6NS[0x34];                                    // 0x029C(0x0034) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1224);
		return ptr;
	}



	void OnRep_UpdateStatTrackingNumber();
	void NetMulticastPlaySpray(const struct FVector& SprayLocation, const struct FRotator& SprayRotation, class UPrimitiveComponent* SprayTarget);
	void BlueprintUpdateStatTrackingNumber(int NewStatTrackingNumber);
	void BlueprintPlaySpray(const struct FVector& SprayLocation, const struct FRotator& SprayRotation, class UPrimitiveComponent* SprayTarget);
};

// Class Killstreak.KSEmoteCosmeticSubInstance
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSEmoteCosmeticSubInstance : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1225);
		return ptr;
	}



	void MarkOwnerStopped();
	bool IsOwnerDeadOrDestroyed();
	bool IsLocallyViewed();
	bool IsLocallyManaged();
	void HandleEmoteStarted();
	void HandleEmoteFinished();
	class UMultiSkinObject* GetSkinObject();
	class UKSEmoteCosmeticComponent* GetOwningEmoteCosmeticComponent();
	class UKSCharacterAnimInst* GetCharAnimInstance();
	class AKSCharacter* GetCharacterOwner();
	class USkeletalMeshComponent* GetCharacterMesh();
	void BlueprintStopped();
	void BlueprintOnUnregister();
	void BlueprintOnRegister();
	void BlueprintInterrupt(Killstreak_EKSRadialMenuItemInterruptReason Reason);
};

// Class Killstreak.KSEmoteCosmeticSubInstance_Play
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UKSEmoteCosmeticSubInstance_Play : public UKSEmoteCosmeticSubInstance
{
public:
	float                                              MinimumEmoteLoopDuration;                                  // 0x0028(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RLEP[0xC];                                     // 0x002C(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1226);
		return ptr;
	}



	class UAnimMontage* SetupEmoteMontage(class UMultiSkinObject* inSkinObject);
	bool GetShouldLoop();
	void BlueprintPlayEmote();
};

// Class Killstreak.KSEmoteCosmeticSubInstance_Spray
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UKSEmoteCosmeticSubInstance_Spray : public UKSEmoteCosmeticSubInstance_Play
{
public:
	unsigned char                                      UnknownData_9L04[0x10];                                    // 0x0038(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1227);
		return ptr;
	}



	void SetPrimarySprayDecalForOwner(class UPoolableDecalComponent* InDecalComponent);
	void BlueprintUpdateStatTrackingNumber(int NewStatTrackingNumber);
	void BlueprintPlaySpray(const struct FVector& SprayLocation, const struct FRotator& SprayRotation, class UPrimitiveComponent* SprayTarget);
};

// Class Killstreak.KSEmoteMusicManager
// 0x0040 (FullSize[0x0260] - InheritedSize[0x0220])
class AKSEmoteMusicManager : public AActor
{
public:
	unsigned char                                      UnknownData_96HV[0x28];                                    // 0x0220(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxAudibleEmoteDistance;                                   // 0x0248(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FMC2[0x14];                                    // 0x024C(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1229);
		return ptr;
	}



	void RemovePlayingMusic(class UAkComponent* Sound);
	void AddPlayingMusic(class UAkComponent* Sound);
};

// Class Killstreak.KSEmoteMusicManagerOwner
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSEmoteMusicManagerOwner : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1230);
		return ptr;
	}



	class AKSEmoteMusicManager* GetEmoteMusicManager();
};

// Class Killstreak.KSEmoteMusicManagerStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSEmoteMusicManagerStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1231);
		return ptr;
	}



	class AKSEmoteMusicManager* STATIC_GetEmoteMusicManager(class UObject* WorldContextObject);
};

// Class Killstreak.KSEmoteTestManager
// 0x0068 (FullSize[0x0288] - InheritedSize[0x0220])
class AKSEmoteTestManager : public AActor
{
public:
	class UKSAssetQueryHelperComponent*                SkinAssetQueryComponent;                                   // 0x0220(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UKSAssetQueryHelperComponent*                EmoteAssetQueryComponent;                                  // 0x0228(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStartOnBeginPlay;                                         // 0x0230(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAutoDisableTick;                                          // 0x0231(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E7JO[0x6];                                     // 0x0232(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSEmote*                                    DefaultEmote;                                              // 0x0238(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UKSSkinBundle*>                       RequestedSkinBundles;                                      // 0x0240(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRequestedSkinsOnly;                                       // 0x0250(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QA8U[0x7];                                     // 0x0251(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AKSBotFactory*>                       BotFactories;                                              // 0x0258(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SkinArrayIdx;                                              // 0x0268(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                EmoteArrayIdx;                                             // 0x026C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AKSEmoteInstance*>                    EmoteInstances;                                            // 0x0270(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEmotesNeedPlay;                                           // 0x0280(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7AFQ[0x7];                                     // 0x0281(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1232);
		return ptr;
	}



	void start();
	void RestartCurrentEmote();
	void OnSkinApplied(class AKSCharacter* Character, class UKSSkinBundle* Skin);
	void OnEmoteApplied(class AKSCharacter* Character, class UKSEmote* Emote);
	void ApplyNextSkins();
	void ApplyNextEmote();
};

// Class Killstreak.KSEmotionComponentOwner
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSEmotionComponentOwner : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1233);
		return ptr;
	}



	float GetEmotionFloat();
	Killstreak_EKSEmotion GetEmotion();
};

// Class Killstreak.KSEmotionComponent
// 0x0188 (FullSize[0x0238] - InheritedSize[0x00B0])
class UKSEmotionComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnEmotionChanged;                                          // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      EmotionComponentOwner[0x10];                               // 0x00C0(0x0010) UNKNOWN PROPERTY: InterfaceProperty
	TMap<int, Killstreak_EKSEmotion>                   EmotionInstances;                                          // 0x00D0(0x0050) (Transient, NativeAccessSpecifierPrivate)
	int                                                TopInstanceId;                                             // 0x0120(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	Killstreak_EKSEmotion                              TopEmotionEnum;                                            // 0x0124(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EU9K[0x3];                                     // 0x0125(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                NextEmotionId;                                             // 0x0128(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_G2UU[0x54];                                    // 0x012C(0x0054) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FKSEmoteConversionEntry>             ConversionEntries;                                         // 0x0180(0x0010) (ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FName, Killstreak_EKSEmotion>          EmotionNameToEnumMap;                                      // 0x0190(0x0050) (Transient, NativeAccessSpecifierPrivate)
	TMap<Killstreak_EKSEmotion, struct FName>          EmotionEnumToNameMap;                                      // 0x01E0(0x0050) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IYHW[0x8];                                     // 0x0230(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1234);
		return ptr;
	}



	bool RemoveEmotionById(int InstanceId);
	int RemoveEmotion(Killstreak_EKSEmotion InEmotion);
	void GetEmotionComponentOwner();
	Killstreak_EKSEmotion GetCurrentEmotion();
	void AddEmotionInternal(Killstreak_EKSEmotion Emotion, int ID);
	int AddEmotionForDuration(Killstreak_EKSEmotion InEmotion, float Duration);
	int AddEmotion(Killstreak_EKSEmotion InEmotion);
	int AddAndRemoveEmotion(Killstreak_EKSEmotion InEmotion, int InInstanceID);
};

// Class Killstreak.KSEncounterManager
// 0x0170 (FullSize[0x0390] - InheritedSize[0x0220])
class AKSEncounterManager : public AActor
{
public:
	TArray<class UKSBotEncounter*>                     BotEncounters;                                             // 0x0220(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBotDeath;                                                // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWaveFinished;                                            // 0x0240(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBotSpawned;                                              // 0x0250(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bPermaRevealFill;                                          // 0x0260(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPermaRevealMark;                                          // 0x0261(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPreferHiddenPlayerStarts;                                 // 0x0262(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2RIE[0x95];                                    // 0x0263(0x0095) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              fAutoSpawnScoreRate;                                       // 0x02F8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GO3R[0x8];                                     // 0x02FC(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              fAutoSpawnScore;                                           // 0x0304(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_H5RM[0x88];                                    // 0x0308(0x0088) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1235);
		return ptr;
	}



	int SpawnQueuedBots(int nCount);
	void RemoveQueuedBots(int nCount);
	void PerformAutomaticSpawns(float fScoreBudget);
	void OnSpawnedBotDestroyed(class AActor* DestroyedActor);
	void OnSpawnedBotDeath(class AKSAIController* DeadBot);
	bool IsPlayerStartUnseen(class APlayerStart* PlayerStart);
	bool IsBotQueueEmpty();
	void IncreaseCurrentAutoSpawnScore(float fPercent);
	int GetWaveActiveBotCount(const struct FName& EncounterName, int WaveNumber);
	int GetNumHumanPlayers();
	float GetNextBotSpawnCost();
	TArray<class AKSPlayerState*> GetHumanPlayers();
	int GetEncounterActiveBotCount(const struct FName& EncounterName);
	int GetActiveBotCount();
	class UKSBotEncounter* FindEncounter(const struct FName& nmEncounter);
	int EnqueueEncounterWave(const struct FName& nmEncounter, TArray<class APlayerStart*> SpawnLocations, class AKSWayPointSet* Waypoints);
	void EnableAutoSpawn(float fAverageSpawnPeriod, int nSpawnGroupMin, int nSpawnGroupMax);
	void DisableAutoSpawn();
	void ClearQueuedBots();
	bool CanSpawnNextBot();
	bool CanSpawnBotNow(const struct FName& Encounter, int WaveNumber);
	int AdvanceWave(const struct FName& EncounterName);
};

// Class Killstreak.KSBTTask_CopyObjectFacingVector
// 0x0050 (FullSize[0x00C0] - InheritedSize[0x0070])
class UKSBTTask_CopyObjectFacingVector : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      CopyTarget;                                                // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      FacingVector;                                              // 0x0098(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1095);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_CopyReviverToBlackboard
// 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
class UKSBTTask_CopyReviverToBlackboard : public UBTTask_BlackboardBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1096);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_FindGrenadeTarget
// 0x00A8 (FullSize[0x0118] - InheritedSize[0x0070])
class UKSBTTask_FindGrenadeTarget : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      TargetKey;                                                 // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      WeaponOverrideKey;                                         // 0x0098(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      OutTargetLocationKey;                                      // 0x00C0(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      OutIntendedTargetLocationKey;                              // 0x00E8(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	bool                                               bDrawDebug;                                                // 0x0110(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CTV0[0x7];                                     // 0x0111(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1097);
		return ptr;
	}



	bool FindAimPoints(class AKSCharacter* Instigator, class AActor* Target, const struct FVector& StartPoint, TArray<struct FVector>* OutEndPoints);
};

// Class Killstreak.KSBTTask_FindGrenadeTarget_SimpleCover
// 0x0010 (FullSize[0x0128] - InheritedSize[0x0118])
class UKSBTTask_FindGrenadeTarget_SimpleCover : public UKSBTTask_FindGrenadeTarget
{
public:
	float                                              FloorHeightFudgeFactor;                                    // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FullCoverOffsetDistance;                                   // 0x011C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MediumCoverHeightOffset;                                   // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MediumCoverHeightOffsetCrouched;                           // 0x0124(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1098);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_GetNavigationInteractTarget
// 0x0028 (FullSize[0x0098] - InheritedSize[0x0070])
class UKSBTTask_GetNavigationInteractTarget : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      InteractTarget;                                            // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1099);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_GetRotationFromPoint
// 0x0050 (FullSize[0x00C0] - InheritedSize[0x0070])
class UKSBTTask_GetRotationFromPoint : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      MapPointActorKey;                                          // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      MapPointRotationKey;                                       // 0x0098(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1100);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_HandleChangedCombatTarget
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UKSBTTask_HandleChangedCombatTarget : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1101);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_InteractWith
// 0x0008 (FullSize[0x00A0] - InheritedSize[0x0098])
class UKSBTTask_InteractWith : public UBTTask_BlackboardBase
{
public:
	bool                                               ShouldHold;                                                // 0x0098(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1X4T[0x7];                                     // 0x0099(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1102);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_InterruptInteraction
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UKSBTTask_InterruptInteraction : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1103);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_LeaveDefensePoint
// 0x0028 (FullSize[0x0098] - InheritedSize[0x0070])
class UKSBTTask_LeaveDefensePoint : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      DefensePoint;                                              // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1104);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_LookInDirection
// 0x0030 (FullSize[0x00A0] - InheritedSize[0x0070])
class UKSBTTask_LookInDirection : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      DirectionKey;                                              // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	float                                              LookRotationRate;                                          // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6G0X[0x4];                                     // 0x009C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1105);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_MakeNoiseEvent
// 0x0010 (FullSize[0x0080] - InheritedSize[0x0070])
class UKSBTTask_MakeNoiseEvent : public UBTTaskNode
{
public:
	float                                              Loudness;                                                  // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       EventTag;                                                  // 0x0074(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4HX9[0x4];                                     // 0x007C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1106);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_MarkAsSeen
// 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
class UKSBTTask_MarkAsSeen : public UBTTask_BlackboardBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1107);
		return ptr;
	}



};

// Class Killstreak.KSCharacterFoundation
// 0x05D8 (FullSize[0x0A90] - InheritedSize[0x04B8])
class AKSCharacterFoundation : public ACharacter
{
public:
	class AKSPlayerModManager*                         PlayerModManagerOverride;                                  // 0x04B8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnKilled;                                                  // 0x04C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T7VD[0x18];                                    // 0x04D0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, class UKSFXCurveComponent*>     ActiveFXCurveComponents;                                   // 0x04E8(0x0050) (ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5ZID[0x8];                                     // 0x0538(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPostProcessSettings                        BlendableSettings;                                         // 0x0540(0x0550) (Transient, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1153);
		return ptr;
	}



	void StopKSEffect(const struct FName& InFxID);
	class UKSFXCurveComponent* StartKSSpecialEffect(const struct FKSSpecialEffect& Effect, float PlayRate, bool bRestart);
	void ReverseKSEffect(const struct FName& InFxID);
	void ResetKSEffectTime(const struct FName& InFxID);
	void RemoveParticleEffects(TArray<class UParticleSystemComponent*> ParticleSystems);
	bool RemoveModInstance(class UKSPlayerModInstance* ModInst, bool bRemoveAll);
	bool RemoveMod(class UKSPlayerMod* Mod, bool bRemoveAll);
	void RemoveEffectCurve(const struct FName& InFxID);
	void RemoveBlendable();
	bool IsDeadOrDestroyed();
	bool HasModAny(TArray<class UKSPlayerMod*> TestPlayerMods);
	bool HasMod(class UKSPlayerMod* TestPlayerMod);
	bool GiveModInstance(class UKSPlayerMod* Mod, class AKSPlayerState* ModInstigator, class UKSPlayerModInstance** Instance, bool Unique);
	bool GiveMod(class UKSPlayerMod* Mod, class AKSPlayerState* ModInstigator, bool Unique);
	class AKSPlayerModManager* GetPlayerModManagerOverride();
	bool GetModInstances(TArray<class UKSPlayerModInstance*>* OutMods);
	class AKSPlayerState* GetKSPlayerState();
	class AKSPlayerState* GetKSBestPlayerState();
	bool GetGameModeMods(TArray<class UKSModInst_Activated*>* OutMods);
	class UKSFXCurveComponent* GetFXCurveComponentByFXID(const struct FName& InFxID);
	bool GetActiveMods(TArray<class UKSPlayerMod*>* OutMods);
	TArray<class UParticleSystemComponent*> AddParticleEffects(TArray<struct FKSParticleSystemAttachment> ParticleSystemAttachments);
	void AddOrUpdateBlendable(float InWeight);
};

// Class Killstreak.KSCharacterBase
// 0x0890 (FullSize[0x1320] - InheritedSize[0x0A90])
class AKSCharacterBase : public AKSCharacterFoundation
{
public:
	unsigned char                                      UnknownData_Z7M6[0x28];                                    // 0x0A90(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      PawnId;                                                    // 0x0AB8(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OB5S[0x7];                                     // 0x0AB9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnTakeArmorDamage;                                         // 0x0AC0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1547[0x18];                                    // 0x0AD0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnHealthChangedDel;                                        // 0x0AE8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Q0Q9[0x18];                                    // 0x0AF8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HealthRegenerationPerSecond;                               // 0x0B10(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HealthRegenerationPeriod;                                  // 0x0B14(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HealthRegenerationDelay;                                   // 0x0B18(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3GLQ[0x4];                                     // 0x0B1C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnHealthRegenDelayTimerActive;                             // 0x0B20(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnHealthRegenDelayTimerTick;                               // 0x0B30(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnHealthRegenDelayTimerComplete;                           // 0x0B40(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UKSTimerComponent*                           HealthRegenDelayTimer;                                     // 0x0B50(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XRE6[0x8];                                     // 0x0B58(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CurrentOverheal;                                           // 0x0B60(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OverhealDecayPerSecond;                                    // 0x0B64(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OverhealDecayPeriod;                                       // 0x0B68(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UU7R[0x24];                                    // 0x0B6C(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnOverhealChanged;                                         // 0x0B90(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	float                                              QueuedMovementForgivenessPeriod;                           // 0x0BA0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              QueuedMovementForgivenessEndTime;                          // 0x0BA4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSQueuedMovement                       CurrentQueuedMovement;                                     // 0x0BA8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S4EE[0x3];                                     // 0x0BA9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       FreeFallCollisionProfileName;                              // 0x0BAC(0x0008) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_S2II[0x10];                                    // 0x0BB4(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UCameraShake>                 CurrentFreeFallCameraShake;                                // 0x0BC4(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WHJ3[0xC];                                     // 0x0BCC(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      FreeFallCameraShake;                                       // 0x0BD8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnEndFreeFallDel;                                          // 0x0BE0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                               bRealWantsCrouch;                                          // 0x0BF0(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0DXC[0x7];                                     // 0x0BF1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnSprintChanged;                                           // 0x0BF8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bReplicatedSprinting;                                      // 0x0C08(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_15GV[0x3];                                     // 0x0C09(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector_NetQuantizeNormal                   ReplicatedAccelDirection;                                  // 0x0C0C(0x000C) (Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnPowerSlideChanged;                                       // 0x0C18(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FKSPowerSlideInfo                           bReplicatedPowerSlide;                                     // 0x0C28(0x0002) (Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7F92[0x2];                                     // 0x0C2A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DodgeRollDuration;                                         // 0x0C2C(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReplicatedDodgeRoll;                                      // 0x0C30(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P008[0x7];                                     // 0x0C31(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnDOdgeRollChanged;                                        // 0x0C38(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RKUK[0x30];                                    // 0x0C48(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnNearMiss;                                                // 0x0C78(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M92L[0x8];                                     // 0x0C88(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              NearMissRange;                                             // 0x0C90(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NearMissCooldownTime;                                      // 0x0C94(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NearMissADSCameraShakeScaleOverride;                       // 0x0C98(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HY1U[0x4];                                     // 0x0C9C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSSpecialEffect                            NearMissSpecialEffect;                                     // 0x0CA0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UClass*                                      NearMissFrontCameraShake;                                  // 0x0CF0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      NearMissBackCameraShake;                                   // 0x0CF8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      NearMissRightCameraShake;                                  // 0x0D00(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      NearMissLeftCameraShake;                                   // 0x0D08(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKSLungeInfo                                LungeInfo;                                                 // 0x0D10(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnLungeChanged;                                            // 0x0D20(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                               bReplicatedAbilityMovement;                                // 0x0D30(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReplicatedZipLineBracing;                                 // 0x0D31(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReplicatedZipLineEnding;                                  // 0x0D32(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReplicatedUpline;                                         // 0x0D33(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SecondsAwayToBraceOnZipLine;                               // 0x0D34(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SecondsAwayToEndOnZipLine;                                 // 0x0D38(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TEH3[0x4];                                     // 0x0D3C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSZipLineInfo                              ReplicatedZipLineInfo;                                     // 0x0D40(0x0010) (Net, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bPrevPressedJump;                                          // 0x0D50(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1AJP[0x7];                                     // 0x0D51(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnJumpedDel;                                               // 0x0D58(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLandedDel;                                               // 0x0D68(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnStartFallingDel;                                         // 0x0D78(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3JJ9[0x16];                                    // 0x0D88(0x0016) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bReplicatedStun;                                           // 0x0D9E(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X2R0[0x21];                                    // 0x0D9F(0x0021) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bReplicatedHardLand;                                       // 0x0DC0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PNNU[0x37];                                    // 0x0DC1(0x0037) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UCameraShake>                 CurrentSprintCameraShake;                                  // 0x0DF8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L8XM[0x8];                                     // 0x0E00(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      SprintCameraShake;                                         // 0x0E08(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UCameraShake>                 CurrentLandedCameraShake;                                  // 0x0E10(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4JAP[0x8];                                     // 0x0E18(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      LandedCameraShake;                                         // 0x0E20(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnAimStateChanged;                                         // 0x0E28(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USceneComponent*                             ProjectileThrowComponent;                                  // 0x0E38(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             GrenadeThrowComponent;                                     // 0x0E40(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             MeleeThrowComponent;                                       // 0x0E48(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSCharacterAimMode                     ReplicatedAimState;                                        // 0x0E50(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	Killstreak_EKSCharacterAimMode                     LastReplicatedAimState;                                    // 0x0E51(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bEnableSmoothedAimRotation;                                // 0x0E52(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_69LG[0x1];                                     // 0x0E53(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FReplicatedViewInfo                         ViewInfo;                                                  // 0x0E54(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bUseCameraLagSubstepping;                                  // 0x0E5C(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LCND[0x3];                                     // 0x0E5D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CameraLagMaxTimeStep;                                      // 0x0E60(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraRotationLagSpeed;                                    // 0x0E64(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    PreviousDesiredRot;                                        // 0x0E68(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    SmoothedViewRotation;                                      // 0x0E74(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsSmoothingAimRotation;                                   // 0x0E80(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O8SA[0x7];                                     // 0x0E81(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSDeathInfo                                DeathInfo;                                                 // 0x0E88(0x0028) (Edit, Net, DisableEditOnTemplate, EditConst, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UClass*                                      InstantDeathDamageType;                                    // 0x0EB0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRadialMiss;                                               // 0x0EB8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7RZR[0x7];                                     // 0x0EB9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSCharacterBase*                            LastCharacterToDamageMe;                                   // 0x0EC0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_W22W[0x18];                                    // 0x0EC8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnDeathStateChangedDel;                                    // 0x0EE0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UO7X[0x38];                                    // 0x0EF0(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USphereComponent*                            HeadCollisionComponent;                                    // 0x0F28(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      ZiplineMeshComponent;                                      // 0x0F30(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      UplineMeshComponent;                                       // 0x0F38(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerState*                                BackupPlayerState;                                         // 0x0F40(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_M36H[0x10];                                    // 0x0F48(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPlayerStateChangedDel;                                   // 0x0F58(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_J72L[0x18];                                    // 0x0F68(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               HeadBones;                                                 // 0x0F80(0x0010) (Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               LimbBones;                                                 // 0x0F90(0x0010) (Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FName, Killstreak_EHitLocationType>    CachedBoneToHitLocationType;                               // 0x0FA0(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FName>                               HeadshotPassthroughBones;                                  // 0x0FF0(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DKEW[0x8];                                     // 0x1000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSRevealInfo                               FriendlyVisibilityRevealParameters;                        // 0x1008(0x0048) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FKSRevealInfo                               AimedAtRevealParameters;                                   // 0x1050(0x0048) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FKSRevealInfo                               KilledByRevealParameters;                                  // 0x1098(0x0048) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              KilledByRevealTimeSeconds;                                 // 0x10E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRevealed;                                                 // 0x10E4(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8GVU[0x3];                                     // 0x10E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FLinearColor                                CurrentRevealColor;                                        // 0x10E8(0x0010) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OutlineZFadeMin;                                           // 0x10F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OutlineZFadeMax;                                           // 0x10FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                SpawnImmuneOutlineColorEnemy;                              // 0x1100(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FriendlyOutlineFadeDistanceMin;                            // 0x1110(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FriendlyOutlineFadeDistanceMax;                            // 0x1114(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bReevaluateSilhouetteNextTick;                             // 0x1118(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bForceSilhouette;                                          // 0x1119(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	Killstreak_EPlayerSilhouetteType                   ForcedSilhouetteType;                                      // 0x111A(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bForcedFillSilhouette;                                     // 0x111B(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bForcedMarkSilhouette;                                     // 0x111C(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	Killstreak_EPlayerSilhouetteType                   SilhouetteType;                                            // 0x111D(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bFillSilhouette;                                           // 0x111E(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bMarkSilhouette;                                           // 0x111F(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	Killstreak_EPlayerSilhouetteQualifier              SilhouetteQualifier;                                       // 0x1120(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NSHO[0x17];                                    // 0x1121(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bSilhouetteComponentsDirty;                                // 0x1138(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Q653[0x7];                                     // 0x1139(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UPrimitiveComponent*>                 CachedSilhouetteComponents;                                // 0x1140(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRootChanged;                                             // 0x1150(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, BlueprintCallable, NativeAccessSpecifierProtected)
	struct FKSMantleInfo                               ReplicatedMantleInfo;                                      // 0x1160(0x0044) (Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L5TH[0x4];                                     // 0x11A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnMantleChanged;                                           // 0x11A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZWRJ[0x18];                                    // 0x11B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               CachedAimAssistVisibility;                                 // 0x11D0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WSJD[0x3];                                     // 0x11D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              NextValidAimAssistVisibiltyTime;                           // 0x11D4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bCanEverBeConsideredForAimAssist;                          // 0x11D8(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2QKC[0x3];                                     // 0x11D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       InteractionState;                                          // 0x11DC(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InteractionHeight;                                         // 0x11E4(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InteractionTime;                                           // 0x11E8(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4I6K[0x1C];                                    // 0x11EC(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCharacterStartedMovingDel;                               // 0x1208(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCharacterStoppedMovingDel;                               // 0x1218(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SS5B[0x18];                                    // 0x1228(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnSwimmingChangedDel;                                      // 0x1240(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnSubmergedChangedDel;                                     // 0x1250(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnBreathUpdate;                                            // 0x1260(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsSubmerged;                                              // 0x1270(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PJOF[0x3];                                     // 0x1271(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaximumLungCapacity;                                       // 0x1274(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentLungCapacity;                                       // 0x1278(0x0004) (Edit, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LungCapacityRecoveryTime;                                  // 0x127C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDestroyOnRoundSetup;                                      // 0x1280(0x0001) (Edit, Net, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      RoundCreated;                                              // 0x1281(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8A1S[0x1E];                                    // 0x1282(0x001E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIgnoreCollisionWithTeammates;                             // 0x12A0(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RBYC[0x7];                                     // 0x12A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, struct FKSCharacterSocketInfo>  CharacterSockets;                                          // 0x12A8(0x0050) (Transient, DuplicateTransient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnEmoteStartedPlaying;                                     // 0x12F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEmoteStoppedPlaying;                                     // 0x1308(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bIsSpawnImmune;                                            // 0x1318(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HG34[0x7];                                     // 0x1319(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1154);
		return ptr;
	}



	void UpdateSilhouette(float DeltaSeconds);
	void UpdateDebugHealthVisibility();
	void UnSubmerge(bool bClientSimulation);
	void Submerge(bool bClientSimulation);
	void StopSprint(bool bInterrupted);
	void StopRegenerationTimers();
	void StartSprint();
	class UCameraShake* StartCameraShakeFull(class UClass* ShakeClass, class APlayerCameraManager** OutShakeOwner);
	class UCameraShake* StartCameraShake(class UClass* ShakeClass);
	void ShowDebugLocation(bool bVisible);
	void SetSilhouetteQualifier(Killstreak_EPlayerSilhouetteQualifier InQualifier);
	void SetHealth(float NewHealth);
	void ResetHealthRegeneration();
	void ResetHealthRegenDelay();
	void ResetFreeFallState();
	void RemoveCameraShakeFull(class UCameraShake* CameraShake, class APlayerCameraManager* InShakeOwner);
	void RemoveCameraShake(class UCameraShake* CameraShake);
	void OverhealDecayTick();
	float Overheal(float OverhealValue, class AController* HealInstigator, class AActor* HealCauser);
	void OnTeamUpdated();
	void OnStopDefaultAim();
	void OnStopAimOverShoulder();
	void OnStopAimDownSights();
	void OnStopAimAlternate();
	void OnStartDefaultAim();
	void OnStartAimOverShoulder();
	void OnStartAimDownSights();
	void OnStartAimAlternate();
	void OnRep_Sprint();
	void OnRep_Silhouette();
	void OnRep_ReplicatedStun();
	void OnRep_ReplicatedAimState();
	void OnRep_ReplicatedAbilityMovement();
	void OnRep_PowerSlide();
	void OnRep_MantleInfo();
	void OnRep_LungeInfo();
	void OnRep_IsSubmerged();
	void OnRep_DeathState();
	void OnRep_CurrentOverheal();
	void OnRep_CurrentLungCapacity();
	void OnRep_BackupPlayerState();
	void OnLeaveTeam(class AKSTeamState* OldTeam);
	void OnJoinTeam(class AKSTeamState* NewTeam);
	void OnEndPowerSlide(Killstreak_EKSPowerSlideEndReason EndReason);
	void OnBeginPowerSlide();
	void NetMulticast_PlayNearMissEffects(const struct FVector& TraceStart, const struct FVector& TraceEnd, class UAkAudioEvent* WhizbyAudioEvent);
	void MarkSilhouetteComponentsDirty();
	void LockoutMovement(float Time);
	bool IsUnderwater();
	bool IsThermalDetectable();
	bool IsStunned();
	bool IsSprinting();
	bool IsPlayingEmote();
	bool IsNearMissOnCooldown();
	bool IsLunging();
	bool IsLocallyViewed();
	bool IsLaunched();
	bool IsInPowerSlide();
	bool IsInHardLandLockout();
	bool IsInAimTransition();
	bool IsBot();
	bool IsAimingOverShoulder();
	bool IsAimingDownSights();
	bool IsAimingAlternate();
	bool IsAiming();
	bool IsAbilityMoving();
	void HealthRegenerationTick();
	void HealthRegenerationStopped(bool bFullyHealed);
	void HealthRegenerationStarted();
	void HealthRegenDelayTimerTick(float Seconds);
	void HealthRegenDelayTimerComplete();
	void HealthRegenDelayTimerActive(bool bActive);
	float Heal(float HealAmount, class AController* HealInstigator, class AActor* HealCauser);
	bool HasCharacterSocket(const struct FName& InSocketName);
	float GetZiplineAdjustHeight();
	class AActor* GetStartSpot();
	class AKSRevealManager* GetRevealManager();
	Killstreak_EKSCharacterAimMode GetReplicatedAimState();
	struct FTransform GetProjectileThrowTransform();
	struct FVector GetProjectileThrowLocation();
	float GetPowerSlideProgress();
	float GetPowerSlideAngle();
	Killstreak_EPlayerSilhouetteQualifier GetPlayerSilhouetteQualifier();
	unsigned char GetPawnId();
	struct FKSSpecialEffect GetNearMissSpecialEffect();
	float GetNearMissRange();
	struct FTransform GetMeleeThrowTransform();
	struct FVector GetMeleeThrowLocation();
	float GetMaximumLungCapacity();
	float GetMaxHealth();
	float GetLungRecoveryTime();
	Killstreak_EKSCharacterAimMode GetLastReplicatedAimState();
	class UKSCharacterMovementComponent* GetKSMovementComponent();
	class UKSCharacterAnimInst* GetKSCharacterAnimInst();
	class AKSCharacter* GetKSCharacter();
	class UKSAnimInstance* GetKSAnimInstance();
	struct FName GetInteractionState();
	bool GetImmediateDeathRagdoll();
	float GetHealthRegenDelayTime();
	float GetHealthPct();
	float GetHealth();
	struct FTransform GetGrenadeThrowTransform();
	struct FVector GetGrenadeThrowLocation();
	Killstreak_EKSDeathState GetDeathState();
	float GetCurrentOverheal();
	float GetCurrentLungCapacity();
	struct FVector GetCurrentDesiredMovementDirection();
	Killstreak_EKSCharacterAimMode GetCurrentAimState();
	struct FVector GetCurrentAccelDirection();
	struct FTransform GetCharacterSocketTransform(const struct FName& InSocketName);
	struct FRotator GetCharacterSocketRotator(const struct FName& InSocketName);
	struct FVector GetCharacterSocketLocation(const struct FName& InSocketName);
	class APlayerState* GetBestPlayerState();
	class APlayerState* GetBackupPlayerState();
	void ForceStartHealthRegeneration();
	void ForceSilhouette(bool bInForceSilhouette, Killstreak_EPlayerSilhouetteType InSilhouetteType, bool InFillSilhouette, bool InMarkSilhouette);
	void EndAbilityMovement();
	void DoStun(float StunDuration, bool FreezeInPlace);
	void DoHardLandAvoid();
	void DoHardLand(float LockoutDuration);
	bool CanViewDebugHealth();
	void BroadcastInstantInteraction(const struct FName& InInteractionState, float InInteractionHeight);
	void BroadcastHealthRegenerationStopped(bool bFullyHealed);
	void BroadcastHardLandAvoid();
	void BlueprintOnStopSwimming();
	void BlueprintOnStopSubmerged();
	void BlueprintOnStartSwimming();
	void BlueprintOnStartSubmerged();
	void BlueprintEmoteStoppedPlaying();
	void BlueprintEmoteStartedPlaying();
	void BeginDodgeRoll();
	void BeginAbilityMovement();
	bool AllowSprintingRightNow();
	bool AllowPowerSlideRightNow();
};

// Class Killstreak.KSCharacter
// 0x2958 (FullSize[0x3C78] - InheritedSize[0x1320])
class AKSCharacter : public AKSCharacterBase
{
public:
	unsigned char                                      UnknownData_XZ1Y[0x3A];                                    // 0x1320(0x003A) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bTapRadialButtonToUseLastSelectedItem;                     // 0x135A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DXDV[0xD5];                                    // 0x135B(0x00D5) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               ReleasedInputsOnOpenUI;                                    // 0x1430(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               ExcludedReleasedInputsOnOpenRadialMenu;                    // 0x1440(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               ExcludedReleasedInputsOnOpenEscapeMenu;                    // 0x1450(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               ExcludedReleasedInputsOnOpenScoreboard;                    // 0x1460(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               ExcludedReleasedInputsOnOpenMap;                           // 0x1470(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               ReleasedInputsOnCloseRadialMenu;                           // 0x1480(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnPossessedBy;                                             // 0x1490(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnUnpossessed;                                             // 0x14A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class AKSPlayerController*                         CachedKSPlayerController;                                  // 0x14B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                 // 0x14B8(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      InteractionType;                                           // 0x14C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKSObjectiveInfo                            ObjectiveInfo;                                             // 0x14C8(0x0068) (Net, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FKSObjectiveTimerInfo                       ObjectiveTimerInfo;                                        // 0x1530(0x0038) (Net, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FKSObjectiveCaptureInfo                     ObjectiveCaptureInfo;                                      // 0x1568(0x0014) (Net, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7MOS[0x4];                                     // 0x157C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSAutoPickupComponent*                      AutoPickupComponent;                                       // 0x1580(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bProcessingReverseFriendlyFireDamageEvent;                 // 0x1588(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CFD5[0x1F];                                    // 0x1589(0x001F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSOutOfBoundsManager*                       OutOfBoundsManager;                                        // 0x15A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               RumbleDamageAudioEvent;                                    // 0x15B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               RumbleJumpAudioEvent;                                      // 0x15B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               RumbleReviveAudioEvent;                                    // 0x15C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               RumbleReviveAudioEventEnd;                                 // 0x15C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               RumbleDownedAudioEvent;                                    // 0x15D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               RumbleDownedAudioEventEnd;                                 // 0x15D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_C2PM[0x8];                                     // 0x15E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinimumFlinchHeight;                                       // 0x15E8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinimumFlinchDamage;                                       // 0x15EC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaximumFlinchHeight;                                       // 0x15F0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaximumFlinchDamage;                                       // 0x15F4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FlinchDuration;                                            // 0x15F8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FlinchRecoveryRate;                                        // 0x15FC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFlinchSnipersOnly;                                        // 0x1600(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_18RB[0x7];                                     // 0x1601(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class AKSPlayerState*, struct FKSDamageRecord> DamageRecord;                                              // 0x1608(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	float                                              DamageRecordResetTime;                                     // 0x1658(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9AOV[0x4];                                     // 0x165C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                DamageRecordResetTimer;                                    // 0x1660(0x0008) (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKSShotgunHitChangeList                     ReplicatedShotgunHits;                                     // 0x1668(0x0088) (Net, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnNewShotgunHit;                                           // 0x16F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QHSD[0x50];                                    // 0x1700(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPlayHitFromPointDamageDel;                               // 0x1750(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayHitFromRadialDamageDel;                              // 0x1760(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AE3Y[0x50];                                    // 0x1770(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              KillCamHitRecordTime;                                      // 0x17C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HTDU[0x34];                                    // 0x17C4(0x0034) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnLocalViewChanged;                                        // 0x17F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class APlayerController>>    LocalViewers;                                              // 0x1808(0x0010) (ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnCanRemoveBackPackChanged;                                // 0x1818(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCharacterFreeFallStartedDel;                             // 0x1828(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCharacterFreeFallCompletedDel;                           // 0x1838(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HB7Y[0x8];                                     // 0x1848(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       RemoveBackpackInteractionPromptText;                       // 0x1850(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              SkyDiveMaxPitch;                                           // 0x1868(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SkyDiveMinPitch;                                           // 0x186C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SkyDiveExitDistance;                                       // 0x1870(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SkyDiveExitThreshold;                                      // 0x1874(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SkyDiveForceExitDistance;                                  // 0x1878(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLeftHandMantleIK;                                         // 0x187C(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRightHandMantleIK;                                        // 0x187D(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0Z33[0x2];                                     // 0x187E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     LeftHandMantleIKLocation;                                  // 0x1880(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RightHandMantleIKLocation;                                 // 0x188C(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeftHandMantleIKAlpha;                                     // 0x1898(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RightHandMantleIKAlpha;                                    // 0x189C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFadeOutLeftHandMantleIK;                                  // 0x18A0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFadeOutRightHandMantleIK;                                 // 0x18A1(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CLLT[0x6];                                     // 0x18A2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FSmoothedComponentInfo>              SmoothedComponents;                                        // 0x18A8(0x0010) (ZeroConstructor, Transient, DuplicateTransient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UKSSmoothingComponent*>               RegisteredSmoothingComponents;                             // 0x18B8(0x0010) (ExportObject, ZeroConstructor, Transient, DuplicateTransient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LRAW[0x98];                                    // 0x18C8(0x0098) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 SprintImpulseCurve;                                        // 0x1960(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_01JS[0x4];                                     // 0x1968(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SprintPressLeeway;                                         // 0x196C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SprintLeewayExpire;                                        // 0x1970(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFacingVaultWall;                                          // 0x1974(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWantsToAutoSprint;                                        // 0x1975(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAutoSprintTimerComplete;                                  // 0x1976(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_G5C4[0x1];                                     // 0x1977(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AutoSprintDelay;                                           // 0x1978(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MJYO[0xC];                                     // 0x197C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LeftHandMantleIKOffset;                                    // 0x1988(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RightHandMantleIKOffset;                                   // 0x198C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HandMantleIKFadeTime;                                      // 0x1990(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MantleIKHandsToWallForwardOffset;                          // 0x1994(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CrouchCameraShiftInterpSpeed;                              // 0x1998(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CrouchCameraBoomLengthScale;                               // 0x199C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RiseFromCrouchDelayTime;                                   // 0x19A0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7T2S[0x4];                                     // 0x19A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CameraInterpSpeed;                                         // 0x19A8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUsingEmoteCamera;                                         // 0x19AC(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VOOD[0x3];                                     // 0x19AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CurrentEmoteCameraVertOffset;                              // 0x19B0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentEmoteCameraInterpSpeed;                             // 0x19B4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              StandEmoteCameraVertOffset;                                // 0x19B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CrouchEmoteCameraVertOffset;                               // 0x19BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ProneEmoteCameraVertOffset;                                // 0x19C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              StandEmoteCameraInterpSpeed;                               // 0x19C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CrouchEmoteCameraInterpSpeed;                              // 0x19C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ProneEmoteCameraInterpSpeed;                               // 0x19CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EmoteFinishedDisableFireTimeSeconds;                       // 0x19D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ActiveEmoteActionRestrictorID;                             // 0x19D4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                                RemoveEmoteActionRestrictorTimerHandle;                    // 0x19D8(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SprintCameraChangeDuration;                                // 0x19E0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SprintOutCameraChangeDuration;                             // 0x19E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H2IF[0x48];                                    // 0x19E8(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCrouchStartedDel;                                        // 0x1A30(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCrouchEndedDel;                                          // 0x1A40(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              GamepadInput;                                              // 0x1A50(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HasGamepadInput;                                           // 0x1A54(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bZiplineActive;                                            // 0x1A55(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7CJ6[0x2];                                     // 0x1A56(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ZipLineShoulderCameraBoomLength;                           // 0x1A58(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ZipLineShoulderBoomLengthChangeTime;                       // 0x1A5C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSModInst_Activated*                        AbilityMovementMod;                                        // 0x1A60(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ZiplineMeshHeightAdjust;                                   // 0x1A68(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SwimCameraBoomFloatHeight;                                 // 0x1A6C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DrownDamagePeriod;                                         // 0x1A70(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DrownPerTickDamage;                                        // 0x1A74(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      DrownDamageType;                                           // 0x1A78(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6ACO[0x8];                                     // 0x1A80(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPGame_PositionHistoryComponent*             PositionHistoryComponent;                                  // 0x1A88(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OCOZ[0x8];                                     // 0x1A90(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnOutOfBoundsBeginDel;                                     // 0x1A98(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnOutOfBoundsWarningEndDel;                                // 0x1AA8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnOutOfBoundsEndDel;                                       // 0x1AB8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FKSOutOfBoundsInfo                          OutOfBoundsInfo;                                           // 0x1AC8(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bLocalOutOfBounds;                                         // 0x1AD0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MHRM[0x7];                                     // 0x1AD1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPGame_ReplicatedTimer                      ReplicatedEMPLockoutTimer;                                 // 0x1AD8(0x0038) (Edit, Net, DisableEditOnTemplate, EditConst, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZY9M[0x18];                                    // 0x1B10(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsEMPLocked;                                              // 0x1B28(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1JBU[0x7];                                     // 0x1B29(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnEMPLocked;                                               // 0x1B30(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnEMPLockoutTick;                                          // 0x1B40(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_07EI[0x18];                                    // 0x1B50(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsOnFire;                                                 // 0x1B68(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KINU[0x3];                                     // 0x1B69(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CachedPrimaryWeaponFieldOfView;                            // 0x1B6C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UKSSmoothingComponent*                       CameraRootComponent;                                       // 0x1B70(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSSpringArmComponent*                       MainCameraBoom;                                            // 0x1B78(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                            MainCameraComponent;                                       // 0x1B80(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSSpringArmComponent*                       SprintCameraBoom;                                          // 0x1B88(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                            SprintCameraComponent;                                     // 0x1B90(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSSpringArmComponent*                       TransitionCameraBoom;                                      // 0x1B98(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                            TransitionCameraComponent;                                 // 0x1BA0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSSpringArmComponent*                       ShoulderCameraBoom;                                        // 0x1BA8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                            ShoulderCameraComponent;                                   // 0x1BB0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                            FirstPersonCameraComponent;                                // 0x1BB8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSSpringArmComponent*                       TabletCameraBoom;                                          // 0x1BC0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                            TabletCameraComponent;                                     // 0x1BC8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSSpringArmComponent*                       ActionCameraBoom1;                                         // 0x1BD0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                            ActionCameraComponent;                                     // 0x1BD8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSSpringArmComponent*                       SwimCameraBoom;                                            // 0x1BE0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                            SwimCameraComponent;                                       // 0x1BE8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSSpringArmComponent*                       MountedCameraBoom;                                         // 0x1BF0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                            MountedCameraComponent;                                    // 0x1BF8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                            ActiveCameraComponent;                                     // 0x1C00(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4GIK[0x8];                                     // 0x1C08(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCameraComponent*                            PendingCameraComponent;                                    // 0x1C10(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9C27[0x8];                                     // 0x1C18(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Killstreak_ECameraShoulder                         CameraShoulder;                                            // 0x1C20(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_ECameraShoulder                         DesiredCameraShoulder;                                     // 0x1C21(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5W9I[0x2];                                     // 0x1C22(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ShoulderSwapProgress;                                      // 0x1C24(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ShoulderSwapTime;                                          // 0x1C28(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AutoShoulderSwapTime;                                      // 0x1C2C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentShoulderSwapTime;                                   // 0x1C30(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LastShoulderSwapTimestamp;                                 // 0x1C34(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     LastManualShoulderSwapLocation;                            // 0x1C38(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ShoulderSwapCooldownTime;                                  // 0x1C44(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ShoulderSwapBlendExponent;                                 // 0x1C48(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NextShoulderSwapTime;                                      // 0x1C4C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HUAI[0x4];                                     // 0x1C50(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AimDownSightsScopeInterpSpeed;                             // 0x1C54(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ZiplineAOSCamVertOffset;                                   // 0x1C58(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CrouchAOSCamVertOffset;                                    // 0x1C5C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CrouchAOSAimVertOffset;                                    // 0x1C60(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CrouchAOSCamVertOffsetBlendTime;                           // 0x1C64(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CrouchAimingCapsuleHeightAdjustment;                       // 0x1C68(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_A9EM[0x34];                                    // 0x1C6C(0x0034) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bFocalPointMaintenanceEnabled;                             // 0x1CA0(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bMantainFocualPointOnCameraTransition;                     // 0x1CA1(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MM1Y[0x2];                                     // 0x1CA2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CameraFocualThreshold;                                     // 0x1CA4(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaximumFocalPointMaintenanceAngle;                         // 0x1CA8(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaximumFocalPointMaintenanceAngleLeaveADS;                 // 0x1CAC(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinimumFocalPointMaintenanceDistance;                      // 0x1CB0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    CameraTransitionRotationDelta;                             // 0x1CB4(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    CameraTransitionRotationDeltaRemaining;                    // 0x1CC0(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bUseAdvancedFocalPointTracking;                            // 0x1CCC(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseFocalPointDoubleCheck;                                 // 0x1CCD(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_03B3[0x2];                                     // 0x1CCE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FocalPointDoubleCheckAllowedBlockDistance;                 // 0x1CD0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IHQC[0x4];                                     // 0x1CD4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     RelativeFocalPoint;                                        // 0x1CD8(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    AppliedFocalPointCorrection;                               // 0x1CE4(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FName                                       MeshADSPitchPivotBoneName;                                 // 0x1CF0(0x0008) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AimSnapThrottleTime;                                       // 0x1CF8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HPU2[0x14];                                    // 0x1CFC(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSAimAssistAnchorComponent*                 CachedSnapAnchor;                                          // 0x1D10(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NextValidAimSnapTime;                                      // 0x1D18(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2NMS[0x4];                                     // 0x1D1C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LockoutCameraCooldownSpeed;                                // 0x1D20(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BQTS[0x1C];                                    // 0x1D24(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    NonFocalPointRotation;                                     // 0x1D40(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    AppliedFocalPointYawRotation;                              // 0x1D4C(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 CameraPivotCurve;                                          // 0x1D58(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPivotCameraToActorNotLocation;                            // 0x1D60(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTrackTargetAfterPivotingToIt;                             // 0x1D61(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IOEP[0x36];                                    // 0x1D62(0x0036) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      CameraPivotTargetActor;                                    // 0x1D98(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     AutoShoulderSwapExtent;                                    // 0x1DA0(0x000C) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoShoulderSwapForwardCheckDist;                          // 0x1DAC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoShoulderSwapRightCheckDist;                            // 0x1DB0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoShoulderSwapRightForwardCheckDist;                     // 0x1DB4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LockedAutoShoulderSwapTimeThreshold;                       // 0x1DB8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LockedAutoShoulderSwapWeaponFireTime;                      // 0x1DBC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LockedAutoShoulderSwapDistance;                            // 0x1DC0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_INPR[0x14];                                    // 0x1DC4(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Killstreak_EKSCharacterAimMode                     AimState;                                                  // 0x1DD8(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSCharacterAimMode                     DesiredAimState;                                           // 0x1DD9(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAimPressed;                                               // 0x1DDA(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWasAimDownSightsWhenAimPressed;                           // 0x1DDB(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWasAimAlternateWhenAimPressed;                            // 0x1DDC(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_45SL[0x3];                                     // 0x1DDD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AimHoldTime;                                               // 0x1DE0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AimOverShoulderHoldTime;                                   // 0x1DE4(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<Killstreak_EKSMaterialHideType, class UMaterial*> MaterialHideTypeMap;                                       // 0x1DE8(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<int, Killstreak_EKSMaterialHideType>          MaterialIndexesToHide;                                     // 0x1E38(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<int, class UMaterialInterface*>               HiddenMaterials;                                           // 0x1E88(0x0050) (Protected, NativeAccessSpecifierProtected)
	bool                                               bIsAimLocked;                                              // 0x1ED8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_M85B[0x7];                                     // 0x1ED9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnAimLockedChangedDel;                                     // 0x1EE0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                               bIsCrosshairHidden;                                        // 0x1EF0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N12F[0x7];                                     // 0x1EF1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCrosshairHiddenChangedDel;                               // 0x1EF8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnCannonBonusAmmoRecieved;                                 // 0x1F08(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NVX6[0x60];                                    // 0x1F18(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       AvailableEquipPoints_New;                                  // 0x1F78(0x0020) (Edit, DisableEditOnTemplate, Transient, EditConst, DuplicateTransient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FKSInitialInventoryItem>             InitialInventory;                                          // 0x1F98(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FKSInitialAmmo>                      InitialAmmo;                                               // 0x1FA8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSEquipmentManagerComponent*                EquipmentManagerComponent;                                 // 0x1FB8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDropAmmoOnDeath;                                          // 0x1FC0(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7ZSS[0x7];                                     // 0x1FC1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       WeaponSlotsToDropOnDeath;                                  // 0x1FC8(0x0020) (Edit, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       WeaponSlotsToDropOnDowned;                                 // 0x1FE8(0x0020) (Edit, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGameplayTagContainer>               ActiveWeaponSlotTiers;                                     // 0x2008(0x0010) (ZeroConstructor, Deprecated, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGameplayTagContainer>               GrenadeSlotTiers;                                          // 0x2018(0x0010) (ZeroConstructor, Deprecated, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FKSLootLockerItem>                   LootLockerInventory;                                       // 0x2028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                                StartingActiveWeaponEquipPoint;                            // 0x2038(0x0008) (Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSSwapHandlerProfile*                       MainSwapHandlerProfile;                                    // 0x2040(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoClear, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSSwapHandlerProfile*                       GadgetSwapHandlerProfile;                                  // 0x2048(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoClear, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSSwapHandlerProfile*                       MedpackSwapHandlerProfile;                                 // 0x2050(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoClear, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSSwapHandlerProfile*                       PassiveSwapHandlerProfile;                                 // 0x2058(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoClear, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSSwapHandlerProfile*                       QuickMeleeSwapHandlerProfile;                              // 0x2060(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoClear, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSWeaponAsset*                              EmergencyWeaponAsset;                                      // 0x2068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7X24[0x8];                                     // 0x2070(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       ObjectiveWeaponDropPrompt;                                 // 0x2078(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       ObjectiveWeaponDropProgressText;                           // 0x2090(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              DropObjectiveWeaponInteractTime;                           // 0x20A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ENTL[0x4];                                     // 0x20AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCharacterStartedWeaponFireNativeDel;                     // 0x20B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bSelfDestruct;                                             // 0x20C0(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VXN0[0x77];                                    // 0x20C1(0x0077) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, int>                            SubTypeComponentIndexMap;                                  // 0x2138(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	float                                              MeleeHoldTime;                                             // 0x2188(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                PrimaryTier;                                               // 0x218C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                SecondaryTier;                                             // 0x2190(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MeleeTier;                                                 // 0x2194(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WeaponDropHoldTime;                                        // 0x2198(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WeaponDoubleTapTime;                                       // 0x219C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LastActiveWeaponFireTimestamp;                             // 0x21A0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NUT6[0x4];                                     // 0x21A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnActiveWeaponChangedDel;                                  // 0x21A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CW61[0x18];                                    // 0x21B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnActiveGrenadeChangedDel;                                 // 0x21D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AU06[0x18];                                    // 0x21E0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnActiveMedPackChangedDel;                                 // 0x21F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_D84L[0x18];                                    // 0x2208(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                MeleeHoldTimer;                                            // 0x2220(0x0008) (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                                DoubleTapTimer;                                            // 0x2228(0x0008) (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                                DropHoldTimer;                                             // 0x2230(0x0008) (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              WeaponSwapThrottleExpire;                                  // 0x2238(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              WeaponSwapThrottlePeriod;                                  // 0x223C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              QuickMeleeHoldTime;                                        // 0x2240(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QO6Z[0x4];                                     // 0x2244(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSWeapon_Melee*                             CurrentQuickMeleeWeapon;                                   // 0x2248(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bQuickMeleeHoldCompleted;                                  // 0x2250(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSwapOffQuickMeleeAfterFire;                               // 0x2251(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_P2ZA[0x1E];                                    // 0x2252(0x001E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnStartFireFailed;                                         // 0x2270(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bNoFire;                                                   // 0x2280(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1F1B[0x1F];                                    // 0x2281(0x001F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               IsFireWeaponHeld;                                          // 0x22A0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bStartFireAfterAnimFinish;                                 // 0x22A1(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bIsThrowGrenadeHeld;                                       // 0x22A2(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               IsAimDownSightsHeld;                                       // 0x22A3(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MHYX[0x4];                                     // 0x22A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     SwingMontageSection;                                       // 0x22A8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OHVQ[0x10];                                    // 0x22B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnWeaponInventoryChanged;                                  // 0x22C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGadgetResupplied;                                        // 0x22D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMeleeHoldStart;                                          // 0x22E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMeleeHoldEnd;                                            // 0x22F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UKSWeaponComponent*                          ActiveWeaponComponent[0xB];                                // 0x2308(0x0058) (Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint16_t                                           ActiveEquipmentId[0xB];                                    // 0x2360(0x0016) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SB9G[0x12];                                    // 0x2376(0x0012) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSEquipmentContainer                       EquipmentContainer;                                        // 0x2388(0x0228) (Net, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<uint16_t, struct FKSPendingWeaponStateUpdates> PendingWeaponStateUpdates;                                 // 0x25B0(0x0050) (NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnEquipmentAddedDel;                                       // 0x2600(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Z71B[0x18];                                    // 0x2610(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnEquipmentRemovedDel;                                     // 0x2628(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_U492[0x18];                                    // 0x2638(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnEquipmentBecomeActiveDel;                                // 0x2650(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6FO5[0x18];                                    // 0x2660(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnEquipmentEndActiveDel;                                   // 0x2678(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HVBM[0x18];                                    // 0x2688(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnSpecialAmmoEvent;                                        // 0x26A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<Killstreak_EAmmoType, class UKSAmmoDropAsset*> AmmoDropAssets;                                            // 0x26B0(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FKSAmmoManager                              AmmoManager;                                               // 0x2700(0x0130) (Net, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3OEB[0x18];                                    // 0x2830(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              OutOfSightWeaponPickupRange;                               // 0x2848(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WeaponPickupRange;                                         // 0x284C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                            PickUpSphereComponent;                                     // 0x2850(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LabelPickupRange;                                          // 0x2858(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JZDN[0x4];                                     // 0x285C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnItemPickedUp;                                            // 0x2860(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TMap<class AActor*, float>                         OutOfRangePickups;                                         // 0x2870(0x0050) (Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GSLW[0x4];                                     // 0x28C0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ReloadTapThreshold;                                        // 0x28C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ContextualPressTime;                                       // 0x28C8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWantsToInteract;                                          // 0x28CC(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_P3LK[0x3];                                     // 0x28CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Health;                                                    // 0x28D0(0x0004) (Edit, Net, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CachedMaxHealth;                                           // 0x28D4(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DownedHealth;                                              // 0x28D8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RevivedHealth;                                             // 0x28DC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ArmorHelmetLevel;                                          // 0x28E0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ArmorVestLevel;                                            // 0x28E4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ArmorDurabilityPercent;                                    // 0x28E8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentArmorDurability;                                    // 0x28EC(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxHealthBonus;                                            // 0x28F0(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxMaxHealthBonus;                                         // 0x28F4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LocalMaxHealthBonus;                                       // 0x28F8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Y98O[0x4];                                     // 0x28FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnMaxHealthBonusChanged;                                   // 0x2900(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H4A8[0x1];                                     // 0x2910(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bDowned;                                                   // 0x2911(0x0001) (Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IWWR[0x6];                                     // 0x2912(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSTimerComponent*                           GiveUpTimer;                                               // 0x2918(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              GiveUpHoldTime;                                            // 0x2920(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9CVC[0x4];                                     // 0x2924(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnGiveUpTimerActive;                                       // 0x2928(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnGiveUpTimerTick;                                         // 0x2938(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnGiveUpAllowed;                                           // 0x2948(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	float                                              DownedImmuneTime;                                          // 0x2958(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DownedImmuneTimeStamp;                                     // 0x295C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NGLQ[0x4];                                     // 0x2960(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bAllowGiveUp;                                              // 0x2964(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1KDM[0x3];                                     // 0x2965(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BleedPeriod;                                               // 0x2968(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BleedDamage;                                               // 0x296C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      BleedDamageType;                                           // 0x2970(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1IZ7[0x8];                                     // 0x2978(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AController*                                 DownInstigator;                                            // 0x2980(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      DownDamageType;                                            // 0x2988(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                      DownDamageCauser;                                          // 0x2990(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OGQW[0x60];                                    // 0x2998(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCharacterDownedChangedDel;                               // 0x29F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	int                                                DownSpree;                                                 // 0x2A08(0x0004) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QO72[0x4];                                     // 0x2A0C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UAkAudioEvent*>                       DownSpreeSounds;                                           // 0x2A10(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DefaultAssistDuration;                                     // 0x2A20(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NGM5[0x4];                                     // 0x2A24(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FAssistTag>                          DownAssistTagQueue;                                        // 0x2A28(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class APlayerState*>                        DownAssists;                                               // 0x2A38(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AController*                                 KillInstigator;                                            // 0x2A48(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class APlayerState*>                        EliminationAssists;                                        // 0x2A50(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class APlayerState*>                        PlayersWithEliminationCredit;                              // 0x2A60(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GSO2[0x8];                                     // 0x2A70(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       ReviveInteractionProgressText;                             // 0x2A78(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       ReviveInteractionPromptText;                               // 0x2A90(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UCameraShake*                                InteractionCameraShake;                                    // 0x2AA8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeToRevive;                                              // 0x2AB0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              bForceCrouchOnRevive;                                      // 0x2AB4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FReviveInfo                                 ReviveInfo;                                                // 0x2AB8(0x0030) (Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bCanMoveWhileRevivingOther;                                // 0x2AE8(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZA1D[0xF];                                     // 0x2AE9(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USphereComponent*                            ReviveRangeSphereComponent;                                // 0x2AF8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EEK8[0x58];                                    // 0x2B00(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AActor>                       ActorTargetingMeForRevive;                                 // 0x2B58(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnStartReviveDel;                                          // 0x2B60(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BBGM[0x18];                                    // 0x2B70(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnStartReviveOtherDel;                                     // 0x2B88(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HZZK[0x18];                                    // 0x2B98(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnReviveInterruptedDel;                                    // 0x2BB0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_P3RV[0x18];                                    // 0x2BC0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnReviveOtherInterruptedDel;                               // 0x2BD8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GITG[0x18];                                    // 0x2BE8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnReviveCompletedDel;                                      // 0x2C00(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YOZS[0x18];                                    // 0x2C10(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnReviveOtherCompletedDel;                                 // 0x2C28(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_A3B9[0x18];                                    // 0x2C38(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                NumOngoingRemoteRevives;                                   // 0x2C50(0x0004) (Net, ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VCVX[0x64];                                    // 0x2C54(0x0064) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnShoulderSwapChanged;                                     // 0x2CB8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UKSInteractionManager*                       InteractionManager;                                        // 0x2CC8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UKSInteractionManager*                       ReceivedInteractionManager;                                // 0x2CD0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                       InteractionHoverTarget;                                    // 0x2CD8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHoverTargetPress;                                         // 0x2CE0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHoverTargetHold;                                          // 0x2CE1(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DUWP[0x6];                                     // 0x2CE2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      InteractionTarget;                                         // 0x2CE8(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsInInteraction;                                           // 0x2CF0(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FPPE[0x7];                                     // 0x2CF1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      MostRecentInteractionType;                                 // 0x2CF8(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSInteractionResult                    MostRecentInteractionResult;                               // 0x2D00(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MGIS[0x3];                                     // 0x2D01(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     MostRecentInteractionStartLocation;                        // 0x2D04(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               InteractionFacesRotation;                                  // 0x2D10(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MNOW[0x7];                                     // 0x2D11(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSInteractableCameraTransition             InteractionCameraTransition;                               // 0x2D18(0x0030) (Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UClass*                                      DefaultInteractionType;                                    // 0x2D48(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InteractionDistance;                                       // 0x2D50(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxInteractionAngle;                                       // 0x2D54(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InteractionHoldTime;                                       // 0x2D58(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InteractionPriorityBaseModifier;                           // 0x2D5C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUncrouchAfterInteraction;                                 // 0x2D60(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bInteractionCrouchLock;                                    // 0x2D61(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ER7B[0x1E];                                    // 0x2D62(0x001E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                InstantInteractHandle;                                     // 0x2D80(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InstantInteractCooldownTime;                               // 0x2D88(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QE1U[0x4];                                     // 0x2D8C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnHoveredInteractableChanged;                              // 0x2D90(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnInteractStart;                                           // 0x2DA0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRemotePlayerInteractStart;                               // 0x2DB0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnInteractEnd;                                             // 0x2DC0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRemotePlayerInteractEnd;                                 // 0x2DD0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnInteractSuccess;                                         // 0x2DE0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnInteractFailed;                                          // 0x2DF0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnInteractInterrupted;                                     // 0x2E00(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnChargingActionStart;                                     // 0x2E10(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, BlueprintCallable, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnChargingActionEnd;                                       // 0x2E20(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, BlueprintCallable, NativeAccessSpecifierProtected)
	struct FVector                                     BaseLocalDropLocation;                                     // 0x2E30(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VEXA[0x4];                                     // 0x2E3C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<int, float>                                   TierToDropYawMap;                                          // 0x2E40(0x0050) (Deprecated, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, float>                   EquipPointToDropYawMap;                                    // 0x2E90(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              AmmoDropYaw;                                               // 0x2EE0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DropLateralSpeed;                                          // 0x2EE4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DropLateralSpeedVariance;                                  // 0x2EE8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CompanionAmmoHeightShift;                                  // 0x2EEC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DropAngleVariance;                                         // 0x2EF0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XBGC[0x14];                                    // 0x2EF4(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bInRagdoll;                                                // 0x2F08(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bInPreRagdoll;                                             // 0x2F09(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BLCU[0x1A];                                    // 0x2F0A(0x001A) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TryToStopRagdollInterval;                                  // 0x2F24(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RagdollFreezeSpeed;                                        // 0x2F28(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XGFP[0x18];                                    // 0x2F2C(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DeathDisplayLifespan;                                      // 0x2F44(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FString>                             DeathWidgetPoolName;                                       // 0x2F48(0x0010) (Edit, ZeroConstructor, Config, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bUseScreenSizeCutoff;                                      // 0x2F58(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Q50C[0x3];                                     // 0x2F59(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PlayerHoverRange;                                          // 0x2F5C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HoverMinScreenHeightPct;                                   // 0x2F60(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HoverMinScreenHeightPctADS;                                // 0x2F64(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseConeHover;                                             // 0x2F68(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0HJR[0x3];                                     // 0x2F69(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HoverConeAngle;                                            // 0x2F6C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ADSHoverConeScreenRadius;                                  // 0x2F70(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AlwaysHoverDistance;                                       // 0x2F74(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUnhoverWhenOccludedByHoveredCharacter;                    // 0x2F78(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QESE[0xB];                                     // 0x2F79(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsHovered;                                                // 0x2F84(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9LMW[0x3];                                     // 0x2F85(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CachedCameraFOV;                                           // 0x2F88(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                                   CachedViewPortSize;                                        // 0x2F8C(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CachedHalfTanFOV;                                          // 0x2F94(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X9Q0[0xE8];                                    // 0x2F98(0x00E8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bGodMode;                                                  // 0x3080(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5LOK[0x7];                                     // 0x3081(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FKSFlashBangRecord>                  FlashBangRecords;                                          // 0x3088(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_F7P1[0x8];                                     // 0x3098(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSPlayerMod*                                FlashBangEffectMod;                                        // 0x30A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSPlayerModInstance*                        FlashBangEffectModInstance;                                // 0x30A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnLightBombHitCount;                                       // 0x30B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, BlueprintCallable, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnAbleToMountChanged;                                      // 0x30C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, BlueprintCallable, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnCamouflageChangedDel;                                    // 0x30D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCamouflageLevelChangedDel;                               // 0x30E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bCachedCamouflaged;                                        // 0x30F0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSCamouflageLevel                      CurrentCamouflageLevel;                                    // 0x30F1(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ABKN[0xE];                                     // 0x30F2(0x000E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bScrambled;                                                // 0x3100(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bMedPackPressed;                                           // 0x3101(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NTKD[0x6];                                     // 0x3102(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnStickDel;                                                // 0x3108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMedPackFailed;                                           // 0x3118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGrenadeFailed;                                           // 0x3128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWeaponPickupInventoryFull;                               // 0x3138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnItemPickupSuccess;                                       // 0x3148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bReplicatedActivatingMod;                                  // 0x3158(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XSRT[0x7];                                     // 0x3159(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnModsUpdated;                                             // 0x3160(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnActivatableModsUpdated;                                  // 0x3170(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                               bRotationInputAllowsAimAssist;                             // 0x3180(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_C4ZO[0x3];                                     // 0x3181(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinimumRotationInputForAimAssist;                          // 0x3184(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnGamepadAbilityCycle;                                     // 0x3188(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAbilityActivatedEvent;                                   // 0x3198(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnAbilityUsedEvent;                                        // 0x31A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XDE6[0x4];                                     // 0x31B8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ChordDelay;                                                // 0x31BC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              HoldDelay;                                                 // 0x31C0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              DamageForMaxForceFeedback;                                 // 0x31C4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DamageForceFeedbackScale;                                  // 0x31C8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DamageForceFeedbackDuration;                               // 0x31CC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDamageForceFeedbackUsesSmallMotors;                       // 0x31D0(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L3BG[0x3];                                     // 0x31D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ForceFeedbackOnErrorMagnitude;                             // 0x31D4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ForceFeedbackOnErrorDuration;                              // 0x31D8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LandingSpeedForMaxForceFeedback;                           // 0x31DC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UForceFeedbackComponent*                     LandForceFeedbackComponent;                                // 0x31E0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UForceFeedbackEffect*                        JumpForceFeedbackEffect;                                   // 0x31E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UForceFeedbackEffect*                        DownedForceFeedbackEffect;                                 // 0x31F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UForceFeedbackEffect*                        BeingRevivedForceFeedbackEffect;                           // 0x31F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      ReplicatedFootstepOverrides[0x10];                         // 0x3200(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      AutonomousProxyFootstepOverrides[0x10];                    // 0x3210(0x0010) UNKNOWN PROPERTY: ArrayProperty
	float                                              FootprintLifetimeSeconds;                                  // 0x3220(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     FootprintDecalSize;                                        // 0x3224(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                          FootprintDecalMaterial;                                    // 0x3230(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FKSFootprintInfo>                    Footprints;                                                // 0x3238(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Z3W9[0x8];                                     // 0x3248(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      MovingNavAreaClass;                                        // 0x3250(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      StillNavAreaClass;                                         // 0x3258(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSNavModifierComponent*                     KSNavModifierComponent;                                    // 0x3260(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NavModificationUpdateTimerPeriod;                          // 0x3268(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SCA1[0xC];                                     // 0x326C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       DamagedHearingEventTag;                                    // 0x3278(0x0008) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DamageForDefaultLoudness;                                  // 0x3280(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       FireHearingEventTag;                                       // 0x3284(0x0008) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FireRangeForDefaultLoudness;                               // 0x328C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       FootstepHearingEventTag;                                   // 0x3290(0x0008) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MovementSpeedForDefaultLoudness;                           // 0x3298(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TeamEventRange;                                            // 0x329C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EQ3V[0xC];                                     // 0x32A0(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       BotName;                                                   // 0x32AC(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BotADSAccuracy;                                            // 0x32B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRandomBotName;                                            // 0x32B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bBot;                                                      // 0x32B9(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_ECharacterBehaviorState                 CurrentBehaviorState;                                      // 0x32BA(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_83LT[0x5];                                     // 0x32BB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnBehaviorStateChanged;                                    // 0x32C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UKSAkComponent*                              CharacterAkComponent;                                      // 0x32D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      VOComponentClass;                                          // 0x32D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSVOComponent*                              VOComponent;                                               // 0x32E0(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UDataTable*>                          PossibleVOTables;                                          // 0x32E8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L7JL[0x4];                                     // 0x32F8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTag                                DownOtherVOEvent;                                          // 0x32FC(0x0008) (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NameplateZOffset;                                          // 0x3304(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentNameplateZOffset;                                   // 0x3308(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentNameplateAimZOffset;                                // 0x330C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NameplateAimZOffset;                                       // 0x3310(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NameplateAimZOffsetBlendTime;                              // 0x3314(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TargetNameplateAimZOffset;                                 // 0x3318(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentNameplateCrouchZOffset;                             // 0x331C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NameplateCrouchZOffset;                                    // 0x3320(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NameplateCrouchZOffsetBlendTime;                           // 0x3324(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TargetNameplateCrouchZOffset;                              // 0x3328(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EKSVehicleState                         VehicleState;                                              // 0x332C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JTU1[0x3];                                     // 0x332D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSVehicle*                                  CurrentVehicle;                                            // 0x3330(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JMW3[0x10];                                    // 0x3338(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnVehicleStateChanged;                                     // 0x3348(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnDestructibleSpeedOverlap;                                // 0x3358(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                               bDoDrawDebugLines;                                         // 0x3368(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MR1O[0x3];                                     // 0x3369(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       BaseVisibilityBone;                                        // 0x336C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       LeftElbowBone;                                             // 0x3374(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       LeftWristBone;                                             // 0x337C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       RightElbowBone;                                            // 0x3384(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       RightWristBone;                                            // 0x338C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HiddenArmScale;                                            // 0x3394(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LeftArmScaleAlpha;                                         // 0x3398(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RightArmScaleAlpha;                                        // 0x339C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowWeaponWhenArmVisible;                                 // 0x33A0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AIC6[0x3];                                     // 0x33A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxDistancePenetrationCheck;                               // 0x33A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OA0Q[0x500];                                   // 0x33A8(0x0500) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Killstreak_EKSArmVisibilityType                    LeftArmVisibility;                                         // 0x38A8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSArmVisibilityType                    RightArmVisibility;                                        // 0x38A9(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_65CE[0x2];                                     // 0x38AA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       PelvisBone;                                                // 0x38AC(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1GXA[0x4];                                     // 0x38B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UKSApparelAsset*>                     DefaultApparelSetup;                                       // 0x38B8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FAppliedApparelKey, class UKSApparelAsset*> AppliedApparelMap;                                         // 0x38C8(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	TMap<struct FName, struct FAppliedApparelKey>      SlotToApparelKeyMap;                                       // 0x3918(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UKSApparelAsset*>                     ApparelAssets;                                             // 0x3968(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bNoApparel;                                                // 0x3978(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TSV7[0x7];                                     // 0x3979(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class UKSApparelAsset>>      LocalApparelAssets;                                        // 0x3980(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bApparelAssetMapDirty;                                     // 0x3990(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TKMZ[0x7];                                     // 0x3991(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                ApparelTimeoutHandle;                                      // 0x3998(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ApparelTimeoutTime;                                        // 0x39A0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFirstApparelApplicationSuccess;                           // 0x39A4(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GNEK[0x63];                                    // 0x39A5(0x0063) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnNewApparelApplicationFinishedDel;                        // 0x3A08(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	bool                                               bApparelInstancesAreLoaded;                                // 0x3A18(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EL4U[0xF];                                     // 0x3A19(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ApparelLockCount;                                          // 0x3A28(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bApparelDirtiedAndLocked;                                  // 0x3A2C(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FKSCharacterGender                          Gender;                                                    // 0x3A2D(0x0002) (Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FKSCharacterGender                          LocalGender;                                               // 0x3A2F(0x0002) (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2DRP[0x7];                                     // 0x3A31(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnGenderChangedDel;                                        // 0x3A38(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TIU2[0x18];                                    // 0x3A48(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkinObjectManagerComponent*                 SkinsManager;                                              // 0x3A60(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMultiSkinObject*                            DefaultBodyApparelSkinObject;                              // 0x3A68(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       SkinTagContainer;                                          // 0x3A70(0x0020) (Edit, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FDataTableInfo>                      DefaultApparelSkinTables;                                  // 0x3A90(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WZYF[0x18];                                    // 0x3AA0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bUseCameraProximityFading;                                 // 0x3AB8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UQF5[0x3];                                     // 0x3AB9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CameraFadeStartDistance;                                   // 0x3ABC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraFadeEndDistance;                                     // 0x3AC0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       FadeAlphaParamName;                                        // 0x3AC4(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LastCameraProximityAlpha;                                  // 0x3ACC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSEmotion                              Emotion;                                                   // 0x3AD0(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSEmotion                              LocalEmotion;                                              // 0x3AD1(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSEmotion                              LastEmotion;                                               // 0x3AD2(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DFHO[0x1];                                     // 0x3AD3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EmotionFloat;                                              // 0x3AD4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnEmotionChangedDel;                                       // 0x3AD8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	TArray<struct FKSActiveEmotePropInfo>              ActiveEmotePropInfos;                                      // 0x3AE8(0x0010) (ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AKSProp_Physical>             CurrentEmotePhysicsProp;                                   // 0x3AF8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UDecalComponent>              CurrentEmoteDecalComponent;                                // 0x3B00(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UKSAnimationAuditComponent*                  AnimationAuditComponent;                                   // 0x3B08(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    ADSBlurMID;                                                // 0x3B10(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeToRepairArmor;                                         // 0x3B18(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DurabilityASecond;                                         // 0x3B1C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRepairAllArmorAtOnce;                                     // 0x3B20(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8QBL[0x7];                                     // 0x3B21(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       ArmorRepairProgressText;                                   // 0x3B28(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       ArmorRepairPromptText;                                     // 0x3B40(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                               bCanRepairArmor;                                           // 0x3B58(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRepairableArmorEquipped;                                  // 0x3B59(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsRepairingArmor;                                         // 0x3B5A(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BZ2D[0x5];                                     // 0x3B5B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnRepairableArmorEquippedDel;                              // 0x3B60(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnArmorInteractAvailableDel;                               // 0x3B70(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AActor>>               NudgingActors;                                             // 0x3B80(0x0010) (Net, ZeroConstructor, Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UKSNudgeComponent*                           NudgeComponent;                                            // 0x3B90(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      NudgeComponentClass;                                       // 0x3B98(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSWeaponPropManagerComponent*               WeaponPropManagerComponent;                                // 0x3BA0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkelPropManagerComponent*                   SkinnableSkelPropManagerComponent;                         // 0x3BA8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticPropManagerComponent*                 SkinnableStaticPropManagerComponent;                       // 0x3BB0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class UKSItem*, class UKSItem*>               SkinMap;                                                   // 0x3BB8(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DW19[0x70];                                    // 0x3C08(0x0070) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1155);
		return ptr;
	}



	void ViewedPawnTakeDamage(float DamageAmount, class UClass* DamageTypeClass, class AActor* DamageCauser, const struct FVector& DamageOrigin);
	void ViewedPawnInstigatedHeadshot(const struct FCombatEventInfo& DamageInfo);
	void ViewedPawnInstigatedDamage(const struct FCombatEventInfo& DamageInfo);
	void VehicleStateChanged(Killstreak_EKSVehicleState CurrentVehicleState);
	void UpdateNavModification();
	void UpdateMantleHands(Killstreak_EKSPlayerHand Hand, bool bEnable);
	void UpdateHoveredInteractable();
	void UpdateEmoteDecal(class UDecalComponent* InDecal);
	void UpdateAmmo(Killstreak_EAmmoType AmmoType, int AmmoDelta);
	void UpdateAimStatus();
	void UnSelectToRevive(class AActor* Reviver);
	void UnregisterFootstepOverride();
	void UnlockShoulderSwap(bool ForceFullUnlock);
	void UnhideZiplinePulley();
	void UnhideUplineDevice();
	void UnHideADSMaterials();
	void TryToStopRagdoll();
	void TryToStopAiming(bool IsInterrupt);
	void TryToAimOverShoulder(bool bSkipUpdate);
	void TryToAimDownSights(bool bSkipUpdate);
	void TryToAimAlternate(bool bSkipUpdate);
	void ToggleSprint();
	void ToggleScopeZoomIndexUp();
	void ToggleScopeZoomIndexLoop();
	void ToggleScopeZoomIndexDown();
	void ToggleCrouch();
	void ThrowGrenadeReleased();
	void ThrowGrenadePressed();
	void TagForDownAssist(class APlayerState* Assistant, float Duration);
	void SwapWeapon(class AKSWeapon* NextWeapon, bool bForce);
	void SwapToSecondary();
	void SwapToPrimary();
	void SwapToPreviousWeaponWithLoadedClip(bool bForce);
	void SwapToPreviousWeaponWithAmmo(bool bForce);
	void SwapToPreviousWeapon(bool bForce);
	void SwapToNextWeaponWithLoadedClip(bool bForce);
	void SwapToNextWeaponWithAmmo(bool bForce);
	void SwapToNextWeapon(bool bForce);
	void SwapToNextGrenade(bool bForce);
	void SwapToMelee();
	void SwapToMacGuffin();
	void SwapSeatsTimerComplete();
	void SwapSeatsReleased();
	void SwapSeatsPressed();
	void SwapGrenade(class AKSWeapon* NextWeapon, bool bForce);
	void SwapActiveGrenade();
	void StopListeningForInputAction(int InputActionHandle);
	void StopFire();
	bool StopAnimEvent(const struct FName& AnimEventName, class UKSCharacterAnimInst* CharAnimInstance);
	void StopAimDownSights();
	void StartLockoutCamera();
	void StartHacking();
	bool StartFire();
	void SprintImpulseTimelineProgress(float Value);
	void ShowAllFootprints();
	bool ShouldWeaponAutoFire();
	void SetupChords();
	void SetSelfDestruct(bool InSelfDestruct);
	void SetPrimaryHeatSource(class UKSHeatSourceComponent* InHeatSource);
	void SetOnFire(float Duration);
	void SetNoFire();
	void SetIsAimDownSightsHeld(bool bInIsAimDownSightsHeld);
	void SetInteractionFacesRotation(bool FacesRotation);
	void SetInteractionCameraTransition(const struct FKSInteractableCameraTransition& CameraTransition);
	void SetGodMode(bool InGodMode);
	void SetFootstepsVisibleOnClient(bool bInFootstepsVisibleOnClient);
	void SetCurrentCamouflageLevel(Killstreak_EKSCamouflageLevel InCamouflageLevel);
	void SetClearMaxBonusHealthOnDown(bool Val);
	void SetActorTargetingMeForRevive(class AActor* Reviver);
	void SetActiveCameraSimple(const struct FName& Tag, float InBlendTime);
	void SetActiveCamera(const struct FName& Tag, const struct FViewTargetTransitionParams& InBlendParams);
	void ServerSwapToNextGrenade(bool bForce);
	void ServerStopGiveUpTimer();
	void ServerStartGiveUpTimer();
	void ServerSetActiveWeaponToNone(int InIndex);
	void ServerRequestActivateAbilityRelease(int Ability, bool bIsGameModeAbility);
	void ServerRequestActivateAbility(int Ability, bool bIsGameModeAbility);
	void ServerGetInNextEmptySeat();
	void ServerGetInDriverSeat();
	void ServerExitVehicle();
	void ServerDropWeapon(class AKSWeapon* InWeapon);
	void ServerChangeShoulderCamera(Killstreak_ECameraShoulder InShoulder, bool bAuto, bool bUseAutoTiming);
	void ServerAbilityWeaponPrepareSwapTo(class AKSWeapon* Weapon, bool bIsGameModeAbility);
	void SelectToRevive(class AActor* Reviver);
	void RotateToFace(const struct FVector& Location);
	void ReviveOverlapStopped(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void ReportFootstepNoise(float Speed);
	void ReportFireNoise(float Range);
	void ReportDamageEvent(class AActor* Damager, float Damage, const struct FVector& OriginLocation, const struct FVector& HitLocation);
	void ReportDamagedNoise(float Damage);
	void ReplicateSpecialAmmoEvent(Killstreak_EAmmoType AmmoType, int AmmoDelta, const struct FName& EventName);
	bool RemoveWeaponFromInventory(class AKSWeapon* InWeapon);
	void RemoveSkinTag(const struct FGameplayTag& InSkinTag);
	void RemovePhysicalEmoteProp(class AKSProp_Physical* InProp);
	void RemoveOutOfRangePickup(class AActor* OtherActor);
	void RemoveFootprintInfo(int InFootprintId);
	void RemoveEmoteActionRestrictor();
	void RemoveBackpack();
	void RemoveActionRestriction(int ID);
	void RemotePlayerPickupItem(class UClass* ItemDropClass, class UKSItem* Item);
	void RemotePlayerInteractStart(float InteractDuration, class AActor* InteractTarget);
	void RemotePlayerInteractEnd(Killstreak_EKSInteractionResult Result, const struct FVector& InteractionLocation, class AActor* OldInteractTarget);
	void RemoteClientNotifyLand(const struct FHitResult& LandingHit);
	void Reload();
	void ReleaseGiveUp();
	void ReleaseCrouch();
	void ReleaseAllActiveInputs();
	void ReleaseActiveInputsOfType(Killstreak_EInputReleaseType InputReleaseType);
	void ReleaseActiveInputs(TArray<struct FName> InputsToRelease);
	void RegisterFootstepOverride();
	void ReevaluateNoFire(class UPrimitiveComponent* LeftOverlapper);
	void Reequip(const struct FGameplayTagQuery& ReequipWeaponTypesQuery, bool bDropLeftovers, int ReequipAmmo);
	void QuickMeleeHoldTimerComplete();
	bool QueryModsForAnimEvent(const struct FName& AnimEventName, class UKSCharacterAnimInst* CharAnimInst);
	void PrimaryWeaponFOVChanged(float NewFOV);
	void PrimarySprayDecalExpired(class UPoolableDecalComponent* InDecalComponent);
	void PressGiveUp();
	void PlayVO(const struct FKSVoicelineEvent& VoicelineEvent);
	void PlayHitFromRadialDamage(const struct FDamageEffect& Effect);
	void PlayHitFromPointDamage(const struct FDamageEffect& Effect);
	void PlayActionCameraSequence(const struct FName& SequenceName);
	void PersistentPlayerDataChanged();
	void OutOfBoundsWarningEnd();
	void OutOfBoundsOverlapEnd();
	void OutOfBoundsOverlapBegin(float WarningLength);
	void OnWeaponSwapSuccessful(class AKSWeapon* FromWeapon, class AKSWeapon* ToWeapon);
	void OnWeaponSwapFailed(class AKSWeapon* FromWeapon, class AKSWeapon* ToWeapon);
	void OnUnhovered(float ExtraTime);
	void OnStopAimDownSightsCheckpoint();
	void OnStartAimDownSightsCheckpoint();
	void OnSkinnedPropEnabled(class UMeshComponent* EnabledMeshComponent);
	void OnSkinnedPropDisabled(class UMeshComponent* DisabledMeshComponent);
	void OnReviveStart(class AKSCharacter* Reviver, float ReviveTime, bool Remote);
	void OnReviveInterrupt(class AKSCharacter* Reviver);
	void OnReviveComplete(class AKSCharacter* Reviver);
	void OnRep_VehicleState();
	void OnRep_StartingActiveWeaponEquipPoint();
	void OnRep_SelfDestruct();
	void OnRep_Scrambled();
	void OnRep_ReviveInfo();
	void OnRep_OutOfBoundsInfo();
	void OnRep_OnFire();
	void OnRep_ObjectiveTimer();
	void OnRep_IsInInteraction();
	void OnRep_Health();
	void OnRep_GiveUpTimer();
	void OnRep_Gender();
	void OnRep_EMPLockout();
	void OnRep_Emotion();
	void OnRep_Downed();
	void OnRep_CurrentBehaviorState();
	void OnRep_CameraShoulder();
	void OnRep_CameraPivotTargetActor();
	void OnRep_bRepairableArmorEquipped();
	void OnRep_Bot();
	void OnRep_bCanRepairArmor();
	void OnRep_ApparelAssets();
	void OnRep_AllowGiveUp();
	void OnRep_ActiveEquipmentId();
	void OnPhysicalEmotePropEndPlay(class AActor* InActor, TEnumAsByte<Engine_EEndPlayReason> Reason);
	void OnObjectiveTimerTickEvent(float Time);
	void OnObjectiveTimerCompleteEvent();
	void OnObjectiveTimerActiveEvent(bool Active);
	void OnObjectiveStateChangedEvent();
	void OnObjectiveInactiveEvent();
	void OnObjectiveActiveEvent();
	void OnImmuneStart();
	void OnImmuneEnd();
	void OnHovered();
	void OnGrenadeClassLoaded(class UKSWeaponAsset_Grenade* pGrenadeWeaponAsset);
	void OnGenderChanged();
	void OnGadgetSwapped();
	void OnFlashEffectStarted();
	void OnFlashEffectEnded();
	void OnFlashBangHit(Killstreak_EFlashBangIntensity Intensity);
	void OnFieldOfViewModChange();
	void OnEndOutOfBounds();
	void OnDeathDestroy();
	void OnDeathCleanup();
	void OnBoundCharacterInputAction(const struct FScriptDelegate& Callback);
	void OnBeginOutOfBounds();
	void OnArmorRegenerationStart(float RegenerationTime);
	void OnArmorRegenerationInterrupt();
	void OnArmorRegenerationComplete();
	void OnArmorInteractStart(float InteractTime);
	void OnArmorInteractInterrupt();
	void OnArmorInteractComplete();
	void OnApparelTimeoutExpire();
	void NotifyRemoveEmotePropMeshComponent(const struct FGuid& InEmotePropGuid);
	void NotifyAddEmotePropMeshComponent(const struct FGuid& InEmotePropGuid, class UMeshComponent* InEmoteMeshComponent);
	void NoseDiveCameraTransition(bool bEnterNoseDive, float AnimLength);
	void NativeJumpToSwingMontage(const struct FString& SwingMontageSectionName);
	void MoveRight(float Value);
	void MoveForward(float Value);
	bool MobileAutoADS();
	void MeleeReleased();
	void MeleePressed();
	void MedPackReleased();
	void MedPackPressed();
	void LogShotgunHitData(const struct FShotgunHitData& HitData);
	void LockToggleCrouch(bool bShouldLock, bool bShouldBeCrouched);
	void LockShoulderSwap();
	int ListenForInputAction(const struct FName& ActionName, TEnumAsByte<Engine_EInputEvent> EventType, bool bConsume, const struct FScriptDelegate& Callback);
	void KillIfDowned();
	void JumpToSwingMontage(const struct FString& SwingMontageSectionName);
	bool IsZipLining();
	bool IsUsingEmoteCamera();
	bool IsShoulderSwapLocked();
	bool IsRevivingAnotherPlayer(class AKSCharacter** OutReviveTarget, bool bCountRemoteRevives);
	bool IsRepairableArmorEquipped();
	bool IsPerformingAnInteraction();
	bool IsOutOfRangePickup(class AActor* OtherActor);
	bool IsOutOfBounds(float* RemainingTime);
	bool IsOnFire();
	bool IsLocallyHovered();
	bool IsLobby();
	bool IsInVehicle();
	bool IsInRagdoll();
	bool IsInLockoutCameraCooldown();
	bool IsInLockoutCamera();
	bool IsFiring();
	bool IsDowned();
	bool IsCrosshairHidden();
	bool IsCamouflaged();
	bool IsBlinded();
	bool IsBeingRevived(class AKSCharacter** Reviver, float* Progress);
	bool IsAnyEquippedWeaponTakingAction(class AKSWeapon* IgnoredWeapon);
	bool IsAimLocked();
	bool IsActiveWeapon(class AKSWeapon* InWeapon);
	void InterruptNonCharacterRevive();
	void InterruptAimDownSightsToggle(bool bReturnWhenComplete);
	void InterruptAimAlternateToggle(bool bReturnWhenComplete);
	void InstantRevive(class AKSCharacter* Reviver);
	void InputStopSprint();
	void InputStopFire();
	void InputStartSprint();
	void InputStartFire();
	bool InitRagdoll();
	void HideZiplinePulley();
	void HideUplineDevice();
	bool HidesFootprints();
	void HideAllFootprints();
	void HideADSMaterials();
	bool HasInfiniteAmmo(Killstreak_EAmmoType AmmoType);
	bool HasEquipPoint(const struct FGameplayTag& EquipPoint);
	void HandleDownEvent(const struct FCombatEventInfo& EventInfo, int ExpBonus);
	void GiveUpTimerTick(float Seconds);
	void GiveUpTimerComplete();
	void GiveUpTimerActive(bool bActive);
	class UKSWeaponComponent* GetWeaponComponentForEquipPoint(const struct FGameplayTag& EquipPoint);
	class AKSWeapon* GetWeaponByAsset(class UKSWeaponAsset* InAsset);
	class AKSWeapon* GetWeaponAtEquipPoint(const struct FGameplayTag& EquipPoint);
	class UKSVOComponent* GetVOComponent();
	struct FGameplayTagContainer GetValidWeaponPoints();
	struct FGameplayTagContainer GetUsedEquipPoints();
	bool GetSpecialties(TArray<class UKSSpecialty*>* OutSpecialties);
	struct FName GetSeatAimCameraTag();
	Killstreak_EKSArmVisibilityType GetRightArmVisibility();
	class AKSCharacter* GetReviver();
	struct FName GetReviveeOverrideMontage();
	class UKSHeatSourceComponent* GetPrimaryHeatSource();
	class USphereComponent* GetPickupSphere();
	class AKSWeapon* GetPendingMainWeapon();
	void GetOverrideByLocation(const struct FVector& WorldLocation, bool* outShouldOverride, struct FName* outOverrideName);
	class UKSInteractionType* GetMostRecentInteractionType();
	float GetMinimapZoomScale();
	float GetMaxHealthBonus();
	float GetMaxFlashBangIntensity();
	Killstreak_EKSArmVisibilityType GetLeftArmVisibility();
	float GetLastActiveWeaponFireTimestamp();
	bool GetIsInInteraction();
	class AActor* GetInteractionTarget();
	void GetHitPawnEffectOverride(class UParticleSystem** ParticleSystem);
	void GetHitHeadAudioEventOverride(class UAkAudioEvent** SoundEffect);
	void GetHitByAudioEventOverride(class UAkAudioEvent** SoundEffect);
	void GetHitBodyAudioEventOverride(class UAkAudioEvent** SoundEffect);
	float GetGiveUpTime();
	struct FKSCharacterGender GetGender();
	float GetFlashBangIntensity();
	bool GetFieldOfViewFromMods(float* OutFov);
	class UKSEquipmentManagerComponent* GetEquipmentManagerComponent();
	class AKSEquipment* GetEquipmentAtEquipPoint(const struct FGameplayTag& EquipPoint);
	void GetDownedTransitionMontage(class UAnimMontage** OutAnimMontage);
	float GetDownedImmuneTime();
	Killstreak_ECameraShoulder GetDesiredCameraShoulder();
	TArray<struct FKSDamageHistory> GetDamageHistoryForController(class AController* DamageInstigator);
	class UKSVehicleSeatComponent* GetCurrentVehicleSeat();
	class AKSVehicle* GetCurrentVehicle();
	void GetCurrentReviveDuration(float* Duration, float* RemainingTime);
	struct FName GetCurrentCharacterEmotionAsName();
	Killstreak_EKSCamouflageLevel GetCurrentCamouflageLevel();
	Killstreak_ECameraShoulder GetCurrentCameraShoulder();
	int GetCurrentAbilityIndex();
	struct FGameplayTagContainer GetCompatibleEquipPoints(class UKSWeaponAsset* InWeaponAsset);
	class UKSAkComponent* GetCharacterAkComponent();
	float GetCameraShoulderSwapProgress();
	class UMultiSkinObject* GetBodyApparelSkinObject();
	Killstreak_ECharacterBehaviorState GetBehaviorState();
	float GetBasePickupRange();
	void GetAvailableEquipPoints(struct FGameplayTagContainer* OutEquipPoints);
	float GetArmorDurability();
	class UMultiSkinObject* GetApparelSkinObjectByName(const struct FName& InSkinObjectName);
	int GetAmmoCount(Killstreak_EAmmoType AmmoType);
	void GetAllEquippedWeapons(TArray<class AKSWeapon*>* OutWeapons);
	float GetAimTransitionTime();
	class UKSWeaponComponent* GetActiveWeaponComponentForSubType(const struct FName& SubType);
	class UKSWeaponComponent* GetActiveWeaponComponentAtIndex(int Index);
	class UKSWeaponComponent* GetActiveWeaponComponent();
	class AKSWeapon* GetActiveWeapon();
	class AKSWeapon* GetActiveTemporary();
	class AKSWeapon* GetActiveMelee();
	class AKSWeapon* GetActiveMedPack();
	class AKSWeapon* GetActiveMainWeapon();
	class UKSWeaponAnimInstance* GetActiveKSWeaponAnimInst(int Index);
	class AKSWeapon* GetActiveGrenade();
	struct FGameplayTagContainer GetActiveGadgetPoints();
	struct FGameplayTagContainer GetActiveEquipPoints();
	struct FName GetActiveCameraTag();
	class UCameraComponent* GetActiveCamera();
	class AKSWeapon_Aimed* GetActiveAimedWeapon();
	bool GetActivatableMods(TArray<class UKSModInst_Activated*>* OutMods);
	class UKSModInst_Activated* GetAbilityMovementMod();
	void GamepadSwapPressed();
	void GamepadSwapMeleePressed();
	void GamepadSwapMacGuffinPressed();
	void GamepadLookUp(float Value);
	void GamepadLookRight(float Value);
	void ForceToShoulder(Killstreak_ECameraShoulder ForcedShoulder);
	void ForceMainCameraBoomUpdate();
	void ForceActivateAbility();
	void FinishHacking();
	int FindTierOfEquipPoint(const struct FGameplayTag& EquipPoint);
	TArray<int> FindAllTiersOfEquipPoint(const struct FGameplayTag& EquipPoint);
	void ExtinguishFire();
	void ExitVehiclePressed();
	void EventSetupCamerasForSpectator(bool Enabled);
	void EvaluateCameraProximityFade();
	void EndOutOfBounds();
	void EndLockoutCamera();
	void DrownDamageTick();
	void DropButtonReleased();
	void DropButtonPressed();
	void DropActiveWeapon();
	void DropActiveGrenade();
	void DownPlayer(class AController* EventInstigator, class UClass* DamageType, Killstreak_EHitLocationType HitLocationType, class AActor* DamageCauser, float DamageDealt);
	void DoSetOnFire();
	void DoExtinguishFire();
	bool DoesTransitionSupportFocalPoint(const struct FName& ActiveCamera, const struct FName& PendingCamera);
	void DetachViewTargetOnlyBPComponents();
	void DestructibleSpeedGateOverlappedEvent(const struct FVector& BreakingLocation, const struct FVector& BreakingDirection, const struct FVector& BreakingNormal);
	void DamageRecordReset();
	void CreditEliminationAssist(class APlayerState* Assistant);
	void CreditDownAssist(class APlayerState* Assistant);
	void ContextualPingRepeat();
	void ContextualPingPressed();
	void ContextualPingHoldRelease();
	void ContextualPingHold();
	void ContextualButtonReleased();
	void ContextualButtonPressed();
	void ContextualButtonHeldReleased();
	void ContextualButtonHeld();
	void CompleteNonCharacterRevive();
	void CloneCharacterMesh(class USkeletalMeshComponent* ClonedMesh);
	void ClientSwapTo(class AKSWeapon* InWeapon, bool bForce);
	void ClientSwapFrom(class AKSWeapon* InWeapon, bool bForce);
	void ClientStopInteractAcknowledge(unsigned char InInteractRequestId, Killstreak_EKSInteractionResult Result);
	void ClientNotifyStuck();
	void ClientInteractAcknowledge(unsigned char InInteractRequestId, bool bFailed, float InteractDuration, bool bRequiresManualInterrupt);
	void ClientBroadcastModEvent(const struct FName& ModEvent);
	void ClientAbilityActivated(int AbilityIndex, bool bIsGameModeAbility);
	void ClearMaxHealthBonus();
	void ClearAllApparel();
	void ClearActorTargetingMeForRevive();
	void ChangeShoulderCamera(Killstreak_ECameraShoulder InShoulder, bool bAuto);
	bool CanSeeFootprints();
	bool CanReloadRightNow();
	bool CanInteractWithTest(class AActor* InInteractionTarget, bool* bPress, bool* bHold);
	bool CanInteractWith(class AActor* InInteractionTarget);
	bool CanGiveUp();
	bool CanFireRightNow(Killstreak_EKSAbilityUsageFailureType* OutAbilityFailureType, bool bAltFire, bool bIgnoreNoFire, bool bIgnoreWeaponFireCheck);
	bool CanFireGrenadeNow(bool bBroadcastFeedback);
	void CancelBleed();
	bool CanBeRevivedBy(class AKSCharacter* Other, bool bIgnoreOverlap, class AKSWeapon* IgnoredWeapon);
	bool CanAimOverShoulderNow();
	bool CanAimDownSightsNow();
	bool CanAimAlternateNow();
	bool CanActiveWeaponCanToggleOutOfAimDownSightsNow();
	bool CanActiveWeaponCanToggleIntoAimDownSightsNow();
	bool CanActivateAbilityNow(class UKSModInst_Activated* Mod, bool bBroadcastFeedback);
	void CacheLatestHit(float Damage, class UClass* DamageTypeClass, float DamageImpulse, const struct FVector& RelativeImpactLocation, const struct FName& BoneName, class AActor* DamageCauser);
	void BroadcastWeaponComponentStateChange(uint32_t BroadcastId, uint16_t nEquipmentId, const struct FKSWeaponDataUpdateContainer& NewState);
	void BroadcastWeaponComponentPostReload(uint32_t BroadcastId, uint16_t nEquipmentId, unsigned char AmmoInClip);
	void BroadcastWeaponComponentFiredFull(uint32_t BroadcastId, uint16_t nEquipmentId, const struct FFullFireRepData& Data);
	void BroadcastWeaponComponentFiredAmmo(uint32_t BroadcastId, uint16_t nEquipmentId, unsigned char AmmoInClip);
	void BroadcastWeaponComponentFiredAimAndAmmo(uint32_t BroadcastId, uint16_t nEquipmentId, const struct FAimData& Aim, unsigned char AmmoInClip);
	void BroadcastWeaponComponentFired(uint32_t BroadcastId, uint16_t nEquipmentId, const struct FAimData& Aim);
	void BroadcastWeaponComponentEmptyFire(uint32_t BroadcastId, uint16_t nEquipmentId);
	void BroadcastWeaponComponentCurrentFireRateStateHasChanged(uint16_t nEquipmentId, Killstreak_EVariableFireRateState State, float Timestamp, float PostFireTime);
	void BroadcastWeaponComponentAmmoChange(uint32_t BroadcastId, uint16_t nEquipmentId, unsigned char AmmoInClip, bool bBonusAmmo);
	void BroadcastTakeRadialDamage(const struct FDamageEffect& Effect);
	void BroadcastTakePointDamage(const struct FDamageEffect& Effect);
	void BroadcastSpecialAmmoEvent(Killstreak_EAmmoType AmmoType, int AmmoDelta, const struct FName& EventName);
	void BroadcastSkydiveSkipped();
	void BroadcastReviveStart(class AKSCharacter* Reviver, float ReviveTime, bool Remote);
	void BroadcastReviveInterrupt(class AKSCharacter* Reviver);
	void BroadcastReviveComplete(class AKSCharacter* Reviver);
	void BroadcastReliableWeaponComponentStateChange(uint32_t BroadcastId, uint16_t nEquipmentId, const struct FKSWeaponDataUpdateContainer& NewState);
	void BroadcastReliableWeaponComponentPostReload(uint32_t BroadcastId, uint16_t nEquipmentId, unsigned char AmmoInClip);
	void BroadcastReliableWeaponComponentFiredFull(uint32_t BroadcastId, uint16_t nEquipmentId, const struct FFullFireRepData& Data);
	void BroadcastReliableWeaponComponentFiredAmmo(uint32_t BroadcastId, uint16_t nEquipmentId, unsigned char AmmoInClip);
	void BroadcastReliableWeaponComponentFiredAimAndAmmo(uint32_t BroadcastId, uint16_t nEquipmentId, const struct FAimData& Aim, unsigned char AmmoInClip);
	void BroadcastReliableWeaponComponentFired(uint32_t BroadcastId, uint16_t nEquipmentId, const struct FAimData& Aim);
	void BroadcastReliableWeaponComponentEmptyFire(uint32_t BroadcastId, uint16_t nEquipmentId);
	void BroadcastReliableWeaponComponentAmmoChange(uint32_t BroadcastId, uint16_t nEquipmentId, unsigned char AmmoInClip, bool bBonusAmmo);
	void BroadcastModEvent(const struct FName& ModEvent);
	void BroadcastGrenadeExplodeInHand(class UKSWeaponAsset_Grenade* pGrenadeWeaponAsset);
	void BroadcastGadgetResupplied();
	void BroadcastFlashBangHit(const struct FKSFlashBangRecord& Record);
	void BroadcastArmorRegenerationInterrupt();
	void BroadcastArmorRegenerationComplete();
	void BroadcastArmorInteractStart(float InteractTime);
	void BroadcastArmorInteractInterrupt();
	void BroadcastArmorInteractComplete(float RegenerationTime);
	void BroadcastAmmoChanged(Killstreak_EAmmoType AmmoType);
	bool BlueprintHandleDeath();
	void BeginOutOfBounds(float WarningLength);
	void BeginNonCharacterRevive(class AKSPlayerState* ReviveInstigator, float Duration, const struct FName& OverrideReviveeMontage);
	void BeginInstantRevive(class AKSCharacter* Reviver, float Duration, bool Guaranteed);
	void AutoSprintTimerComplete();
	bool AutoArmorRepair(class UKSArmorAsset* AssetToRepair);
	void AttachViewTargetOnlyBPComponents();
	bool AreFootstepsVisibleOnClient();
	void ApplyMaxHealthBonus(float Bonus, class AController* EventInstigator, class AActor* EventCauser, bool bAllowWhileDowned);
	void ApplyLastHitImpulse(bool UpdateTargetRotation, bool AffectCapsule);
	void ApplyFlinchFromPointDamage(float Damage, class UClass* DamageTypeClass, const struct FVector& RelativeImpactLocation, const struct FVector& RelativeImpactNormal, const struct FName& BoneName, class AActor* DamageCauser);
	void ApplyCameraProximityFade(float Alpha);
	bool ApplyApparelAsset(class UKSApparelAsset* ApparelAsset);
	bool AnyActivatableModsActive();
	void AnnounceCharacterSelected(class UKSJobItem* pJobSelected);
	void AnimAuditStop();
	void AnimAuditStart();
	void AnimAuditResume();
	void AnimAuditClear();
	void AimDownSightsToggle();
	void AimDownSightsReleased();
	void AimDownSightsPressed();
	void AddSkinTag(const struct FGameplayTag& InSkinTag);
	void AddPhysicalEmoteProp(class AKSProp_Physical* InProp);
	void AddOutOfRangePickup(class AActor* OtherActor, float PickupDistance);
	void AddFootprintInfo(struct FKSFootprintInfo* InFootprintInfo);
	void AddEmoteActionRestrictor();
	int AddActionRestrictionForDuration(const struct FKSActionRestrictor& ActionRestrictor, float Duration);
	int AddActionRestriction(const struct FKSActionRestrictor& ActionRestrictor);
	bool ActivatableModAtIndexActive(int AbilityIndex, bool bIsGameModeAbility);
	void AbortFireAllWeapons();
	void AbilityChargeUpdated(class UKSPlayerMod_Activated* ChargingMod);
};

// Class Killstreak.KSCharacterCapsuleComponent
// 0x0000 (FullSize[0x0450] - InheritedSize[0x0450])
class UKSCharacterCapsuleComponent : public UCapsuleComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1161);
		return ptr;
	}



};

// Class Killstreak.KSCharacterMovementComponent
// 0x0590 (FullSize[0x0C10] - InheritedSize[0x0680])
class UKSCharacterMovementComponent : public UCharacterMovementComponent
{
public:
	unsigned char                                      UnknownData_R13X[0x18];                                    // 0x0680(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastNetUpdateTime;                                         // 0x0698(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxProxyForwardPredictionTime;                             // 0x069C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_THJC[0x2];                                     // 0x06A0(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bCanEverSkipProxyPrediction;                               // 0x06A2(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0E0J[0x1];                                     // 0x06A3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SkipProxyPredictionLOD;                                    // 0x06A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SkipProxySkydivePredictionDist;                            // 0x06A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSkipProxyPredictionAfterSkydive;                          // 0x06AC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TVO4[0x3];                                     // 0x06AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFindFloorResult                            LastFloor;                                                 // 0x06B0(0x0094) (Transient, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4O2R[0xC];                                     // 0x0744(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SlowToCrouchTime;                                          // 0x0750(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KEAX[0x8];                                     // 0x0754(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PostCrouchSlowTime;                                        // 0x075C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_34RO[0x8];                                     // 0x0760(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CrouchCooldownTime;                                        // 0x0768(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TeaBagPreventionCrouchCooldownTime;                        // 0x076C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3JOB[0x4];                                     // 0x0770(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     SimulatedProxyVelocity;                                    // 0x0774(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanEverPowerSlide;                                        // 0x0780(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RI1R[0x3];                                     // 0x0781(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PowerSlideTurnFrictionMinAngle;                            // 0x0784(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PowerSlideTurnFrictionMaxAngle;                            // 0x0788(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinimumStartPowerSlideSpeed;                               // 0x078C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinimumPowerSlideSpeed;                                    // 0x0790(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PowerSlideInitialSpeedBoost;                               // 0x0794(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PowerSlideLockoutTime;                                     // 0x0798(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinimumPowerSlideTime;                                     // 0x079C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PowerSlideMaxStepHeight;                                   // 0x07A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4FEU[0xC];                                     // 0x07A4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FInterpCurveFloat                           PowerSlideTurnDecelerationCurve;                           // 0x07B0(0x0018) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FInterpCurveFloat                           PowerSlideDecelerationCurve;                               // 0x07C8(0x0018) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PowerSlideResistDeceleration;                              // 0x07E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TBQX[0x14];                                    // 0x07E4(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FallAimForgivenessPeriod;                                  // 0x07F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FallAimForgivenessEndTime;                                 // 0x07FC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinWalkingAcceleration;                                    // 0x0800(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSprintingSpeed;                                         // 0x0804(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxWalkSpeedProne;                                         // 0x0808(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimOverShoulderSpeedModifier;                              // 0x080C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimDownSightsSpeedModifier;                                // 0x0810(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StrafingSpeedFactor;                                       // 0x0814(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReverseSpeedFactor;                                        // 0x0818(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bWantsToSprint : 1;                                        // 0x081C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bSprintIsHeld : 1;                                         // 0x081C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bSprintIsToggledOn : 1;                                    // 0x081C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bSprintInterrupted : 1;                                    // 0x081C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bIsJumping : 1;                                            // 0x081C(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bCachedCharacterAllowSprintingRightNow : 1;                // 0x081C(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bCachedCharacterAllowPowerSlideRightNow : 1;               // 0x081C(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3Y9P[0x3];                                     // 0x081D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CachedWeaponWalkSpeedModifier;                             // 0x0820(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReducedJumpZVelocity;                                      // 0x0824(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReducedJumpHeightWindow;                                   // 0x0828(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bSprinting : 1;                                            // 0x082C(0x0001) BIT_FIELD (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HIX7[0xB];                                     // 0x082D(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinHardLandingHeight;                                      // 0x0838(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HardLandingLockoutTime;                                    // 0x083C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FreefallLandingLockoutTime;                                // 0x0840(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSCharacterAimMode                     AimState;                                                  // 0x0844(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CGB3[0x3];                                     // 0x0845(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSCharacterBase*                            KSCharacterOwner;                                          // 0x0848(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxSprintingSwimSpeed;                                     // 0x0850(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSubmergedSwimSpeed;                                     // 0x0854(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwimSurfaceAcceleration;                                   // 0x0858(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwimSubmergedAcceleration;                                 // 0x085C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDownedSwimSpeed;                                        // 0x0860(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwimStrafingSpeedFactor;                                   // 0x0864(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwimReverseSpeedFactor;                                    // 0x0868(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSwimZSpeed;                                             // 0x086C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwimZAcceleration;                                         // 0x0870(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurfaceSwimDepth;                                          // 0x0874(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SubmergedSwimDepth;                                        // 0x0878(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HardMaxSwimDepth;                                          // 0x087C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FallSpeedWaterDeflectionFactor;                            // 0x0880(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CrouchToSwimDepth;                                         // 0x0884(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMantleConfig>                       MantleConfigs;                                             // 0x0888(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_89FE[0x10];                                    // 0x0898(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              m_fLedgeGrabDistance;                                      // 0x08A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              m_fSprintLedgeGrabDistance;                                // 0x08AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              m_fLedgeGrabbableWallZ;                                    // 0x08B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              m_fMaxLedgeCheckHeight;                                    // 0x08B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              m_fMinLedgeCheckHeight;                                    // 0x08B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              m_fSwimHeightBoost;                                        // 0x08BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              m_fLedgeGrabbableZ;                                        // 0x08C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              m_fVaultZSpeed;                                            // 0x08C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              m_fEnhancedZSpeed;                                         // 0x08C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              m_fVaultLateralSpeed;                                      // 0x08CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              m_fVaultFacingThreshold;                                   // 0x08D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              m_fVaultVerticalCheckInterval;                             // 0x08D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              m_fVaultHeadClearance;                                     // 0x08D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              m_fMantleDownDistance;                                     // 0x08DC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              m_fVaultForwardDistance;                                   // 0x08E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              m_fMantleMaxDistance;                                      // 0x08E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     m_vMantleLaunchVelocity;                                   // 0x08E8(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              m_fVaultErrorForgiveness;                                  // 0x08F4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MantleStepHeightProxy;                                     // 0x08F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRequireJumpForVault;                                      // 0x08FC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N9YY[0x3];                                     // 0x08FD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaximumVelocityPreserveHeight;                             // 0x0900(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinimumSpeedForFromJumpMantles;                            // 0x0904(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowMantleEarlyOutOnFire;                                // 0x0908(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRestrictVaultingIntoCrouch;                               // 0x0909(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XSSB[0x2];                                     // 0x090A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              VaultFromGroundTraceHeightAdjust;                          // 0x090C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1I0J[0x38];                                    // 0x0910(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bVaultDebugPrinting;                                       // 0x0948(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_51AX[0x7];                                     // 0x0949(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FMantleConfig                               CurrentMantleConfig;                                       // 0x0950(0x00A8) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LMXN[0x38];                                    // 0x09F8(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FInterpCurveFloat                           MantleClothSimCurve;                                       // 0x0A30(0x0018) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WI15[0x10];                                    // 0x0A48(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              m_fPostSprintLockoutTime;                                  // 0x0A58(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              m_fRemainingPostSprintLockoutTime;                         // 0x0A5C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FreeFallClearanceHeight;                                   // 0x0A60(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinFreeFallSpeedZ;                                         // 0x0A64(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultFreeFallSpeedZ;                                     // 0x0A68(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxFreeFallSpeedZ;                                         // 0x0A6C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinFreeFallForwardSpeed;                                   // 0x0A70(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultFreeFallForwardSpeed;                               // 0x0A74(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxFreeFallForwardSpeed;                                   // 0x0A78(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDiveForwardSpeed;                                       // 0x0A7C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxFreeFallLateralSpeed;                                   // 0x0A80(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxFreeFallLateralAcceleration;                            // 0x0A84(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxFreeFallReverseAcceleration;                            // 0x0A88(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FreeFallAirControl;                                        // 0x0A8C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FreeFallDelay;                                             // 0x0A90(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInFreeFall;                                               // 0x0A94(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWingsuitHasBeenDisabled;                                  // 0x0A95(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HH9X[0x2];                                     // 0x0A96(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FreeFallBrakingAcceleration;                               // 0x0A98(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FreeFallDiveThresholdAngle;                                // 0x0A9C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FreeFallDiveForwardInputThreshold;                         // 0x0AA0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWantsToEndFreeFallEarly;                                  // 0x0AA4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J2LZ[0x13];                                    // 0x0AA5(0x0013) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsFreeFallDiving;                                         // 0x0AB8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1E55[0x3];                                     // 0x0AB9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    LastYawRotation;                                           // 0x0ABC(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              FreeFallYawAccumDeltaTime;                                 // 0x0AC8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FreeFallYawTotalDeltaTime;                                 // 0x0ACC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FreeFallDelayProgress;                                     // 0x0AD0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                       FreeFallHeightActor;                                       // 0x0AD4(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseFreeFallStartHeight;                                   // 0x0ADC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O8E1[0x3];                                     // 0x0ADD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FreeFallNetSmoothTime;                                     // 0x0AE0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PostFreeFallNetSmoothTimeRecoveryRate;                     // 0x0AE4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_70Z8[0x1];                                     // 0x0AE8(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bWingsuitControls;                                         // 0x0AE9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N57P[0x2];                                     // 0x0AEA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              WingsuitGlideDragCoefficient;                              // 0x0AEC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WingsuitDiveDragCoefficient;                               // 0x0AF0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WingsuitGlideSurfaceArea;                                  // 0x0AF4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WingsuitDiveSurfaceArea;                                   // 0x0AF8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bCachedCharacterAllowDodgeRollRightNow : 1;                // 0x0AFC(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bStartDodgeRoll : 1;                                       // 0x0AFC(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5ZGU[0x3];                                     // 0x0AFD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bWantsToDodgeRollOnLanding;                                // 0x0B00(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldDodgeRollOnLanding;                                 // 0x0B01(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M7NS[0x2];                                     // 0x0B02(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxDodgeRollSpeed;                                         // 0x0B04(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DodgeRollDistance;                                         // 0x0B08(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanDodgeRollFromAimDownSights;                            // 0x0B0C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2QY9[0x3];                                     // 0x0B0D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DodgeRollCooldownTime;                                     // 0x0B10(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_I00B[0x4];                                     // 0x0B14(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DodgeRollForgivenessPeriod;                                // 0x0B18(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DodgeRollForgivenessEndTime;                               // 0x0B1C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QVN9[0x14];                                    // 0x0B20(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DodgeRollAcceleration;                                     // 0x0B34(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BrakingDecelerationPostDodgeRoll;                          // 0x0B38(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEnableBrakingDecelerationPostDodgeRoll;                   // 0x0B3C(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NBSU[0x3];                                     // 0x0B3D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FInterpCurveFloat                           DodgeRollVelocityCurve;                                    // 0x0B40(0x0018) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FInterpCurveFloat                           DodgeRollClothSimCurve;                                    // 0x0B58(0x0018) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bCachedCharacterAllowLungeRightNow : 1;                    // 0x0B70(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P7YY[0x3];                                     // 0x0B71(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CurrentLungeDistance;                                      // 0x0B74(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxLungeDistance;                                          // 0x0B78(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5572[0x4];                                     // 0x0B7C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      LungeTarget;                                               // 0x0B80(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentLungeDuration;                                      // 0x0B88(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxLungeDuration;                                          // 0x0B8C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LungeAcceleration;                                         // 0x0B90(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxLungeSpeed;                                             // 0x0B94(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LungeStopLateralDistance;                                  // 0x0B98(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LungeStopVerticalDistance;                                 // 0x0B9C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LungeAirControl;                                           // 0x0BA0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MKRZ[0x1C];                                    // 0x0BA4(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USplineComponent*                            FlightRecoverySplineComponent;                             // 0x0BC0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_POMJ[0x4];                                     // 0x0BC8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FlightRecoverySpeed;                                       // 0x0BCC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bCachedCharacterAllowAbilityMoveRightNow : 1;              // 0x0BD0(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bStartAbilityMovement : 1;                                 // 0x0BD0(0x0001) BIT_FIELD (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MPGO[0x7];                                     // 0x0BD1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bCachedCharacterAllowZipLineRightNow : 1;                  // 0x0BD8(0x0001) BIT_FIELD (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0OB5[0x7];                                     // 0x0BD9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bZiplineEndsEnforceDirection;                              // 0x0BE0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowDodgeRollIntoZipline;                                // 0x0BE1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRequireJumpForZipline;                                    // 0x0BE2(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRequireDownwardMovementToZipline;                         // 0x0BE3(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowZiplineReverseViaDodgeRoll;                          // 0x0BE4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JDUN[0x3];                                     // 0x0BE5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ZiplineAcceleration;                                       // 0x0BE8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S56L[0x1];                                     // 0x0BEC(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bEnableFriendlyNudging;                                    // 0x0BED(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KI6Y[0x6];                                     // 0x0BEE(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxEmoteInterruptDistance;                                 // 0x0BF4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxEmoteMovingInterruptDistance;                           // 0x0BF8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CachedMaxEmoteInteruptDistance;                            // 0x0BFC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bClientManuallyShoulderSwappedNearby;                      // 0x0C00(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BSV9[0xF];                                     // 0x0C01(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1162);
		return ptr;
	}



	void ResetPostFireSprintLockout();
	bool IsZipLining();
	bool IsStandingStill();
	bool IsSprintingWithVelocity();
	bool IsSprinting();
	bool IsInPowerSlide();
	bool IsFlightRecovery();
	bool IsDowned();
	bool IsDodgeRolling();
	bool IsAimingOverShoulder();
	bool IsAimingDownSights();
	bool IsAimingAlternate();
	bool IsAiming();
	bool GetWantsToSprint();
	bool GetWantsToPowerSlide();
	float GetProratedMaxSpeed();
	struct FVector FindPointAboveWater(const struct FVector& TestPoint);
	void ClientAdjustPositionZipline(float Timestamp, const struct FVector& NewLoc, const struct FVector& NewVel, class UPrimitiveComponent* NewBase, const struct FName& NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, const struct FVector& NewPreVaultLocation, float NewLastEvalTime, const struct FKSZipLineInfo& Zipline);
	void ClientAdjustPositionVault(float Timestamp, const struct FVector& NewLoc, const struct FVector& NewVel, class UPrimitiveComponent* NewBase, const struct FName& NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, const struct FVector& NewPreVaultLocation, float NewLastEvalTime);
	void ClientAdjustPositionDodgeRoll(float Timestamp, const struct FVector& NewLoc, const struct FVector& NewVel, class UPrimitiveComponent* NewBase, const struct FName& NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, float NewDodgeDuration, float NewDodgeDirection);
};

// Class Killstreak.KSCharacterSkeletalMeshComponent
// 0x0088 (FullSize[0x0E28] - InheritedSize[0x0DA0])
class UKSCharacterSkeletalMeshComponent : public UKSSkeletalMeshComponent
{
public:
	unsigned char                                      UnknownData_A3NV[0x8];                                     // 0x0DA0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, class UPhysicsAsset*>           ChildPhysicsAssetMap;                                      // 0x0DA8(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FKSChildPhysicsAssetKeywords>        ChildPhysicsAssetKeywords;                                 // 0x0DF8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bBasePhysicsAssetChanged;                                  // 0x0E08(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0R82[0x3];                                     // 0x0E09(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UPhysicsAsset>                LastBasePhysAssetFromMesh;                                 // 0x0E0C(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SCJK[0x4];                                     // 0x0E14(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FChildBodyCollisionProfileCache>     PreRegistrationChildCollisionCache;                        // 0x0E18(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1164);
		return ptr;
	}



};

// Class Killstreak.KSExperiments
// 0x0060 (FullSize[0x0088] - InheritedSize[0x0028])
class UKSExperiments : public UObject
{
public:
	TArray<struct FKSExperimentConfig>                 ExperimentConfigRow;                                       // 0x0028(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_13K8[0x50];                                    // 0x0038(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1252);
		return ptr;
	}



};

// Class Killstreak.KSExponentialHeightFog
// 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
class AKSExponentialHeightFog : public AInfo
{
public:
	bool                                               bAllowManualSetVisibility;                                 // 0x0220(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6P6T[0x7];                                     // 0x0221(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             ActivatedCinematicSubLevelNames;                           // 0x0228(0x0010) (BlueprintVisible, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UExponentialHeightFogComponent*              Component;                                                 // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1253);
		return ptr;
	}



	void TurnFogOnViaCinematic(const struct FString& CinematicSubLevelName);
	void TurnFogOffViaCinematic(const struct FString& CinematicSubLevelName);
};

// Class Killstreak.KSExtinguisher
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSExtinguisher : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1254);
		return ptr;
	}



	bool ShouldExtinguishRightNow();
};

// Class Killstreak.KSObjectiveBase
// 0x0160 (FullSize[0x0380] - InheritedSize[0x0220])
class AKSObjectiveBase : public AActor
{
public:
	unsigned char                                      UnknownData_GZCH[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnObjectiveUpdate;                                         // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	Killstreak_EObjectiveIconType                      MapIconType;                                               // 0x0240(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CBXV[0x3];                                     // 0x0241(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                DisplayId;                                                 // 0x0244(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ActiveObjectiveIndex;                                      // 0x0248(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsed;                                                     // 0x024C(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AFYZ[0x3];                                     // 0x024D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FObjectiveState                             ObjectiveState;                                            // 0x0250(0x0014) (BlueprintVisible, Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	int                                                ObjectiveId;                                               // 0x0264(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EObjectiveType                          ObjectiveType;                                             // 0x0268(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_P78R[0x3];                                     // 0x0269(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       DefaultState;                                              // 0x026C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       InitialActivateState;                                      // 0x0274(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IKQT[0x4];                                     // 0x027C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       DisplayName;                                               // 0x0280(0x0018) (Edit, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	struct FString                                     ObjectiveDisplayLabel;                                     // 0x0298(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAppendActiveIndexToLabel;                                 // 0x02A8(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LLQE[0x1F];                                    // 0x02A9(0x001F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ObjectiveLootGroup;                                        // 0x02C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     NavigationLocation;                                        // 0x02CC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JFEI[0xC];                                     // 0x02D8(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               UseNavLocationForDistance;                                 // 0x02E4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Q3XT[0x3];                                     // 0x02E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      MinimapDisplayWidget[0x28];                                // 0x02E5(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      FullmapDisplayWidget[0x28];                                // 0x0310(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      OverlayDisplayWidget[0x28];                                // 0x0338(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	class UKSItemStimuliSourceComponent*               StimuliSourceComponent;                                    // 0x0360(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PF7V[0x8];                                     // 0x0368(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       SoundEventName;                                            // 0x0370(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SoundEventLoudness;                                        // 0x0378(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RepeatTimeToNotifyBots;                                    // 0x037C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1185);
		return ptr;
	}



	void SetState(const struct FName& NewState, int NewOwner);
	void ResetState(bool ClearOwner);
	void OnRep_ObjectiveState();
	void OnRep_ObjectiveId();
	void NotifyBots();
	void HandleNewState();
	struct FName GetPreviousState();
	int GetOwningTeamOrPlayer();
	float GetObjectiveMeterProgressTotal();
	float GetObjectiveMeterProgress();
	int GetObjectiveLootGroup();
	int GetObjectiveId();
	struct FText GetObjectiveDisplayName();
	struct FString GetObjectiveDisplayLabel();
	struct FName GetCurrentState();
	bool CanChangeState(const struct FName& NewState, int NewOwner);
	void CallOnTeamSidesFlipped();
	void AssignObjectiveId(int NewId);
	void ActivateObjective(int NewOwner);
};

// Class Killstreak.KSExtractionComputer
// 0x01B0 (FullSize[0x0530] - InheritedSize[0x0380])
class AKSExtractionComputer : public AKSObjectiveBase
{
public:
	unsigned char                                      UnknownData_81R1[0x18];                                    // 0x0380(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSObjectiveInfo                            ObjectiveInfo;                                             // 0x0398(0x0068) (Net, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FKSObjectiveTimerInfo                       ObjectiveTimerInfo;                                        // 0x0400(0x0038) (Net, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FKSObjectiveCaptureInfo                     ObjectiveCaptureInfo;                                      // 0x0438(0x0014) (Net, NoDestructor, NativeAccessSpecifierPrivate)
	Killstreak_EKSPOIState                             POIState;                                                  // 0x044C(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F6YO[0x3];                                     // 0x044D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                 // 0x0450(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6PWL[0x10];                                    // 0x0458(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                FavoredSide;                                               // 0x0468(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeToHack;                                                // 0x046C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeToDehack;                                              // 0x0470(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentInteractionProgress;                                // 0x0474(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSInteractionManager*                       CurrentInteractionManager;                                 // 0x0478(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSCharacter*                                ComputerUser;                                              // 0x0480(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       HackingInteractionProgressText;                            // 0x0488(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       DehackingInteractionProgressText;                          // 0x04A0(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       HackingInteractionPromptText;                              // 0x04B8(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       DehackingInteractionPromptText;                            // 0x04D0(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class USphereComponent*                            InteractionRangeSphereComponent;                           // 0x04E8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     RelativeInteractionPoint;                                  // 0x04F0(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       CameraName;                                                // 0x04FC(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraTransitionInTime;                                    // 0x0504(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraTransitionOutTime;                                   // 0x0508(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bForceCameraShoulder;                                      // 0x050C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_ECameraShoulder                         CameraShoulder;                                            // 0x050D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KIQI[0x2];                                     // 0x050E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CameraMaxRotation;                                         // 0x0510(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               CameraRotationLockout;                                     // 0x0514(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLockPitch;                                                // 0x0515(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLockYaw;                                                  // 0x0516(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               FacesInteract;                                             // 0x0517(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCameraShake;                                              // 0x0518(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SI16[0x7];                                     // 0x0519(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      CameraShake;                                               // 0x0520(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R1NO[0x8];                                     // 0x0528(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1255);
		return ptr;
	}



	void OnRep_ObjectiveTimer();
	void OnObjectiveTimerTickEvent(float Time);
	void OnObjectiveTimerCompleteEvent();
	void OnObjectiveTimerActiveEvent(bool Active);
	void OnObjectiveStateChangedEvent();
	void OnObjectiveInactiveEvent();
	void OnObjectiveActiveEvent();
	void LocalHoverStateChanged(bool bIsHovered);
	void InteractionEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void InteractionComplete();
};

// Class Killstreak.KSFaceAnimInst
// 0x0000 (FullSize[0x10E8] - InheritedSize[0x10E8])
class UKSFaceAnimInst : public UKSCharacterAnimInst
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1256);
		return ptr;
	}



};

// Class Killstreak.KSFinalBlowTracker
// 0x0010 (FullSize[0x00B0] - InheritedSize[0x00A0])
class UKSFinalBlowTracker : public UKSAccoladeTracker
{
public:
	unsigned char                                      UnknownData_J94D[0x10];                                    // 0x00A0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1257);
		return ptr;
	}



	void HandleOnLastPlayer(class AKSPlayerState* LastPlayer);
	void CheckLastPlayer(const struct FCombatEventInfo& ElimEvent, class AKSPlayerState* LastPlayer);
};

// Class Killstreak.KSFirstBloodTracker
// 0x0050 (FullSize[0x00F0] - InheritedSize[0x00A0])
class UKSFirstBloodTracker : public UKSAccoladeTracker
{
public:
	unsigned char                                      RoundsWithFirstBloodEarned[0x50];                          // 0x00A0(0x0050) UNKNOWN PROPERTY: SetProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1258);
		return ptr;
	}



};

// Class Killstreak.KSFlightPoint
// 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
class AKSFlightPoint : public ATargetPoint
{
public:
	class USplineComponent*                            SplineComponent;                                           // 0x0220(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<Engine_ESplinePointType>               SplinePointType;                                           // 0x0228(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsEndPoint;                                               // 0x0229(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IIAI[0x6];                                     // 0x022A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1260);
		return ptr;
	}



};

// Class Killstreak.KSFlightRecoveryVolume
// 0x0000 (FullSize[0x0258] - InheritedSize[0x0258])
class AKSFlightRecoveryVolume : public ATriggerVolume
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1261);
		return ptr;
	}



	void OnOverlapEnd(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnOverlapBegin(class AActor* OverlappedActor, class AActor* OtherActor);
};

// Class Killstreak.KSFootstepOverrideInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSFootstepOverrideInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1262);
		return ptr;
	}



	float GetPriorityLevel();
	void GetOverrideByLocation(const struct FVector& WorldLocation, bool* outShouldOverride, struct FName* outOverrideName);
};

// Class Killstreak.KSFootstepOverrideVolume
// 0x0018 (FullSize[0x0270] - InheritedSize[0x0258])
class AKSFootstepOverrideVolume : public ATriggerVolume
{
public:
	unsigned char                                      UnknownData_UD3F[0x8];                                     // 0x0258(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       OverrideMaterialName;                                      // 0x0260(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OverridePriority;                                          // 0x0268(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8RN1[0x4];                                     // 0x026C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1263);
		return ptr;
	}



};

// Class Killstreak.KSFreeFallCameraShake
// 0x0000 (FullSize[0x0180] - InheritedSize[0x0180])
class UKSFreeFallCameraShake : public UKSVelocityCameraShake
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1265);
		return ptr;
	}



};

// Class Killstreak.KSFreezeFramePawn
// 0x01B8 (FullSize[0x0438] - InheritedSize[0x0280])
class AKSFreezeFramePawn : public APawn
{
public:
	class USkeletalMeshComponent*                      PawnMeshComponent;                                         // 0x0280(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O529[0xF8];                                    // 0x0288(0x00F8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMesh*                               PawnMesh;                                                  // 0x0380(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                                  PawnSkinTable;                                             // 0x0388(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimationAsset*                             PawnAnimation;                                             // 0x0390(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequence*                               FacialAnimationSet;                                        // 0x0398(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	Killstreak_EKSEmotion                              FacialAnimationPose;                                       // 0x03A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TEnumAsByte<Engine_EAnimationMode>                 AnimationMode;                                             // 0x03A1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MJLA[0x6];                                     // 0x03A2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      AnimationClass;                                            // 0x03A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AnimationPlayRate;                                         // 0x03B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AnimationStartTime;                                        // 0x03B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FKSFreezeFramePawnProp>              Props;                                                     // 0x03B8(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FKSFreezeFramePawnWeaponProp>        WeaponProps;                                               // 0x03C8(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FKSFreezeFrameVFXEntry>              VFXEntries;                                                // 0x03D8(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FGuid, class UMeshComponent*>          ActiveProps;                                               // 0x03E8(0x0050) (BlueprintVisible, ExportObject, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1266);
		return ptr;
	}



	void OnVFXFinished(class UParticleSystemComponent* ParticleSystem);
};

// Class Killstreak.KSFreezeFramePawnAnimInst
// 0x0020 (FullSize[0x0350] - InheritedSize[0x0330])
class UKSFreezeFramePawnAnimInst : public UKSAnimInstance
{
public:
	class UAnimationAsset*                             PawnAnimation;                                             // 0x0330(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                               FacialAnimationSet;                                        // 0x0338(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EKSEmotion                              FacialAnimationPose;                                       // 0x0340(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0772[0x3];                                     // 0x0341(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AnimationPlayRate;                                         // 0x0344(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnimationStartTime;                                        // 0x0348(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VANK[0x4];                                     // 0x034C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1267);
		return ptr;
	}



};

// Class Killstreak.KSGadgetAssetDrop
// 0x0000 (FullSize[0x0848] - InheritedSize[0x0848])
class AKSGadgetAssetDrop : public AKSWeaponAssetDrop
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1268);
		return ptr;
	}



	bool GetLabelInfoForGadgetDescription(struct FText* DescriptionText);
};

// Class Killstreak.KSGameEngine
// 0x0098 (FullSize[0x0F78] - InheritedSize[0x0EE0])
class UKSGameEngine : public UPComGameEngine
{
public:
	struct FScriptMulticastDelegate                    OnGoPlayMapReady;                                          // 0x0EE0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZIOV[0x88];                                    // 0x0EF0(0x0088) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1269);
		return ptr;
	}



	void SetGoPlayMapTravelDelayed(bool DelayGoPlayMap);
	void SetGoPlayMapDelayTimeoutLimit(float DelayTimeoutLimit);
	void QuickGoPlayCachedMap();
	void OnTriggerGoPlayMap();
	bool GetGoPlayMapTravelDelayed();
	float GetGoPlayMapDelayTimeoutLimit();
	void FinishGoPlayMap();
	void CancelDelayedGoPlayMap();
};

// Class Killstreak.KSGameInstance
// 0x02F8 (FullSize[0x0548] - InheritedSize[0x0250])
class UKSGameInstance : public UPGame_GameInstance
{
public:
	struct FScriptMulticastDelegate                    LoadingScreenBeganDel;                                     // 0x0250(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    LoadingScreenEndedDel;                                     // 0x0260(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                           AlwaysNeededPrimaryAssetQuery;                             // 0x0270(0x0048) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FName>                               AlwaysNeededPrimaryAssetBundles;                           // 0x02B8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YFHP[0x58];                                    // 0x02C8(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDataTable*                                  LoadingScreenTipsTable;                                    // 0x0320(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULoadingScreenImageManager*                  LoadingScreenImageManager;                                 // 0x0328(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S4V5[0x10];                                    // 0x0330(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class UKSActivityManagerBase>> ActivityManagers;                                          // 0x0340(0x0010) (ZeroConstructor, Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSAcquisitionManager*                       AcquisitionManager;                                        // 0x0350(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPUMG_StoreItemHelper*                       StoreItemHelper;                                           // 0x0358(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSJsonDataFactory*                          JsonDataFactory;                                           // 0x0360(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSLoadoutDataFactory*                       LoadoutDataFactory;                                        // 0x0368(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSUISessionManager*                         UISessionManager;                                          // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSActivityInstanceManager*                  ActivityInstanceManager;                                   // 0x0378(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSPlayerInventoryHelper*                    PlayerInventoryHelper;                                     // 0x0380(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSPlayerStatsManager*                       PlayerStatsManager;                                        // 0x0388(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSPlayerChallengesManager*                  PlayerChallengesManager;                                   // 0x0390(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSNPETrackManager*                          NPETrackManager;                                           // 0x0398(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSMercMasteryManager*                       MercMasteryManager;                                        // 0x03A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSMercManager*                              MercManager;                                               // 0x03A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSWeaponManager*                            WeaponManager;                                             // 0x03B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSAwardsManager*                            AwardsManager;                                             // 0x03B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSGeneralProgressionManager*                GeneralProgressionManager;                                 // 0x03C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSRankedManager*                            RankedManager;                                             // 0x03C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSBattlePassProgressionManager*             BattlePassProgressionManager;                              // 0x03D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSEventChallengesManager*                   EventChallengesManager;                                    // 0x03D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSSeasonalEventChallengesManager*           SeasonalEventChallengesManager;                            // 0x03E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSActivitySequenceManager*                  ActivitySequenceManager;                                   // 0x03E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSAudioManager*                             AudioManager;                                              // 0x03F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSPunishmentManager*                        PunishmentManager;                                         // 0x03F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSBoosterManager*                           BoosterManager;                                            // 0x0400(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSWeaponMasteryManager*                     WeaponMasteryManager;                                      // 0x0408(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPUMG_VoiceChatManager*                      VoiceChatManager;                                          // 0x0410(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JLI1[0x80];                                    // 0x0418(0x0080) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponAsset*                              WingsuitWeaponAsset;                                       // 0x0498(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ShouldUseZombiePrevention;                                 // 0x04A0(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6LF4[0x3];                                     // 0x04A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ZombiePreventionSeconds;                                   // 0x04A4(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NJL4[0xA0];                                    // 0x04A8(0x00A0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1270);
		return ptr;
	}



	void UpdateRecordedAnimStats(TMap<struct FName, struct FKSAnimStats>* NewStats);
	class UKSWeaponMasteryManager* GetWeaponMasteryManager();
	class UKSWeaponManager* GetWeaponManager();
	class UPUMG_StoreItemHelper* GetStoreItemHelper();
	class UKSRankedManager* GetRankedManager();
	class UKSPunishmentManager* GetPunishmentManager();
	class UKSPlayerStatsManager* GetPlayerStatsManager();
	class UKSPlayerInventoryHelper* GetPlayerInventoryHelper();
	class UKSPlayerChallengesManager* GetPlayerChallengesManager();
	class UKSNPETrackManager* GetNPETrackManager();
	class UKSMercMasteryManager* GetMercMasteryManager();
	class UKSMercManager* GetMercManager();
	class UKSLoadoutDataFactory* GetLoadoutDataFactory();
	bool GetLoadingScreenImage(const struct FString& InMapName, struct FText* MapDisplayName, struct FText* MapRegion, struct FText* MapDescription);
	class UKSGeneralProgressionManager* GetGeneralProgressionManager();
	class UKSEventChallengesManager* GetEventChallengesManager();
	class UKSBoosterManager* GetBoosterManager();
	class UKSBattlePassProgressionManager* GetBattlePassProgressionManager();
	class UKSAwardsManager* GetAwardsManager();
	class UKSAudioManager* GetAudioManager();
	class UKSActivitySequenceManager* GetActivitySequenceManager();
	class UKSActivityInstance* GetActivityInstanceForActivity(class UKSActivity* Activity, class AKSPlayerController* PlayerController);
	void ExportAnimAudit(const struct FString& Filename);
	void EndLoading();
	void ClaimTutorialAward();
	void BeginLoading(const struct FString& mapName);
};

// Class Killstreak.KSGameMode
// 0x0A80 (FullSize[0x0F18] - InheritedSize[0x0498])
class AKSGameMode : public APGame_GameMode
{
public:
	unsigned char                                      UnknownData_3QN8[0x38];                                    // 0x0498(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PlayerReadyTimeoutTime;                                    // 0x04D0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GSUK[0x4];                                     // 0x04D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      KSPlayerJoinRuleComponentClass;                            // 0x04D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSPlayerJoinRuleComponent*                  KSPlayerJoinRuleComponent;                                 // 0x04E0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MKLB[0x8];                                     // 0x04E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bCachedShouldPlayersStartSpectatingDefaultCamera;          // 0x04F0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_J971[0x7];                                     // 0x04F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSRespawnConfig                            RespawnConfiguration;                                      // 0x04F8(0x0018) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnPhaseChangeDel;                                          // 0x0510(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPhaseTimerExpired;                                       // 0x0520(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XAEL[0x10];                                    // 0x0530(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FMatchPhase                                 MatchPhase;                                                // 0x0540(0x000C) (Edit, DisableEditOnTemplate, Transient, EditConst, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bUseMatchTimer;                                            // 0x054C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QAD5[0x3];                                     // 0x054D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MatchSetupTime;                                            // 0x0550(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseSelectionPhase;                                        // 0x0554(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DDLJ[0x3];                                     // 0x0555(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PreSelectionPhaseTime;                                     // 0x0558(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SelectionPhaseTime;                                        // 0x055C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PostSelectionPhaseTime;                                    // 0x0560(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PostSelectionPhaseMinTime;                                 // 0x0564(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSkipPostSelectionCinematic;                               // 0x0568(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0YGH[0x3];                                     // 0x0569(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PostSelectionCinematicPhaseTime;                           // 0x056C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUsePostMatchMVPLineup;                                    // 0x0570(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZGDM[0x3];                                     // 0x0571(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TimeBeforeMVPLineupCinematicBegins;                        // 0x0574(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PostMatchMVPLineupPhaseTime;                               // 0x0578(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MatchDefaultPhaseTime;                                     // 0x057C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_43OO[0x30];                                    // 0x0580(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MatchTimerUpdatePeriod;                                    // 0x05B0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8UXW[0x14];                                    // 0x05B4(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      KSSpawnSelectorComponentClass;                             // 0x05C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      KSSpawnSelectorComponentSoftClass[0x28];                   // 0x05D0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	class UKSSpawnSelectorComponent*                   KSSpawnSelectorComponent;                                  // 0x05F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bAllowFindInactivePlayer;                                  // 0x0600(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseLoginStartSpotForPawn;                                 // 0x0601(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAIPlayersUseLoginStartSpotForPawn;                        // 0x0602(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VXCS[0x35];                                    // 0x0603(0x0035) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                DefaultTeamCount;                                          // 0x0638(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSTeamAssignmentType                   TeamAssignmentType;                                        // 0x063C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFirstDebugPlayerIsOnlySpectator;                          // 0x063D(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NSCI[0x72];                                    // 0x063E(0x0072) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSRevealManager*                            RevealManager;                                             // 0x06B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      RevealManagerClass;                                        // 0x06B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RKC7[0x10];                                    // 0x06C0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    MatchStatsFinalizedDelegate;                               // 0x06D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MKW6[0x18];                                    // 0x06E0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MatchStartTime;                                            // 0x06F8(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MatchEndTime;                                              // 0x06FC(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsTutorial;                                               // 0x0700(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsPractice;                                               // 0x0701(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsAiPvpMode;                                              // 0x0702(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsPlayerSpectateOnlyMode;                                 // 0x0703(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DefaultMinimapWidth;                                       // 0x0704(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      DefaultTeamState;                                          // 0x0708(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, NoClear, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReverseFriendlyFireStartThreshold;                         // 0x0710(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FriendlyFireModiferBase;                                   // 0x0714(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReverseFriendlyFireModiferBase;                            // 0x0718(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanDownPlayers;                                           // 0x071C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanDownBots;                                              // 0x071D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCreditInstantKillWithDown;                                // 0x071E(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCreditSuicideWithDown;                                    // 0x071F(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bImmediateDeathForLastManStanding;                         // 0x0720(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEliminatePlayerOnDeath;                                   // 0x0721(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPivotToKillerOnDeath;                                     // 0x0722(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTrackKillerOnDeath;                                       // 0x0723(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRevealKillerOnDeath;                                      // 0x0724(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldRandomizeSides;                                     // 0x0725(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bStartJobSelectionOnSideSwap;                              // 0x0726(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_25EF[0x1];                                     // 0x0727(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSGlobalShotListener*                       ShotListener;                                              // 0x0728(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VF87[0x8];                                     // 0x0730(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnTeamSidesFlipped;                                        // 0x0738(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bClearObjectivesMarkedUsedOnSidesFlipped;                  // 0x0748(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FEMI[0x7];                                     // 0x0749(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      Winner;                                                    // 0x0750(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                      CheatWinner;                                               // 0x0758(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DefaultRewardsCalculatorClass;                             // 0x0760(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIncludeInitialInventoryFromDefaultPawnInStartingInventory; // 0x0768(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CUY4[0x7];                                     // 0x0769(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UKSItem*>                             StartingInventory;                                         // 0x0770(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bGiveStartingInventoryToBots;                              // 0x0780(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OQ3V[0x7];                                     // 0x0781(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UKSItem*>                             PlayerSpawnInventory;                                      // 0x0788(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKSItem*>                             PlayerInitialSpawnInventory;                               // 0x0798(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKSItem*>                             PlayerRespawnInventory;                                    // 0x07A8(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKSPlayerMod*>                        PlayerSpawnMods;                                           // 0x07B8(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKSPlayerMod*>                        PlayerInitialSpawnMods;                                    // 0x07C8(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKSPlayerMod*>                        PlayerRespawnMods;                                         // 0x07D8(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSPlayerMod*                                FreefallMod;                                               // 0x07E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5WE1[0x30];                                    // 0x07F0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsBotMatch;                                               // 0x0820(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_U4ZK[0x3];                                     // 0x0821(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                StartingCash;                                              // 0x0824(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnSpecialtyItemVendorLoaded;                               // 0x0828(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZIB3[0x4];                                     // 0x0838(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bUsePlayerLoadouts;                                        // 0x083C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDisableLoadoutValidation;                                 // 0x083D(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LFIH[0x24A];                                   // 0x083E(0x024A) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              WaitForPlayersTimeout;                                     // 0x0A88(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D38K[0x14];                                    // 0x0A8C(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      LoadingLoot[0x50];                                         // 0x0A8C(0x0050) UNKNOWN PROPERTY: MapProperty
	bool                                               bPopulateLootSites;                                        // 0x0AF0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VGG0[0x7];                                     // 0x0AF1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<Killstreak_ELootSiteRarity, struct FKSLootGroupGuaranteeMap> LootGroupGuarantees;                                       // 0x0AF8(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                               bSpawnLootOnMatchStart;                                    // 0x0B48(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_85PV[0x57];                                    // 0x0B49(0x0057) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FKSLootRaritySwapInfo>               LootRaritySwaps;                                           // 0x0BA0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSLootRespawnMode                      LootRespawnMode;                                           // 0x0BB0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MY8U[0x7];                                     // 0x0BB1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<Killstreak_ELootSiteRarity, float>            LootSiteRespawnPeriods;                                    // 0x0BB8(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ASWC[0x50];                                    // 0x0C08(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSAIActorCollection*                        AIActorCollection;                                         // 0x0C58(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRecordKillCam;                                            // 0x0C60(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_I4IZ[0x3];                                     // 0x0C61(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AFKIdleTime;                                               // 0x0C64(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3B1F[0x38];                                    // 0x0C68(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDataTable*                                  AccoladeTrackerDataTable;                                  // 0x0CA0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UKSAccoladeTracker*>                  AccoladeTrackerInstances;                                  // 0x0CA8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UClass*>                              AccoladeTrackerClasses;                                    // 0x0CB8(0x0010) (ZeroConstructor, Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FKSGameHUDSettings                          GameModeHUDSettings;                                       // 0x0CC8(0x0018) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      InteractiveObjectCache[0x10];                              // 0x0CE0(0x0010) UNKNOWN PROPERTY: ArrayProperty
	class UClass*                                      OutOfBoundsManagerClass;                                   // 0x0CF0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSMatchDataRecorder*                        MatchDataRecorder;                                         // 0x0CF8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GSPK[0x8];                                     // 0x0D00(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               ShouldForceCompetitiveLogic;                               // 0x0D08(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EKSPerSecondChargeMode                  PerSecondChargeMode;                                       // 0x0D09(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3MFG[0x2];                                     // 0x0D0A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PerSecondChargePercent;                                    // 0x0D0C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKSGameRuleComponent*>                GameRules;                                                 // 0x0D10(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FName, struct FString>                 EditorPropertyMap;                                         // 0x0D20(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6NPE[0x50];                                    // 0x0D70(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     FriendlyAudioName;                                         // 0x0DC0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      KSAnnouncerClass;                                          // 0x0DD0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FString>                             FriendlyAchievementNames;                                  // 0x0DD8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                BurnTestNumberOfRoundToWin;                                // 0x0DE8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XJL9[0x14];                                    // 0x0DEC(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCharacterControlTransferred;                             // 0x0E00(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bUseLegacyJobSelectionTech;                                // 0x0E10(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowPlayersToUseUnownedJobs;                             // 0x0E11(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SAME[0x6];                                     // 0x0E12(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<int>                                        AllowedUnownedJobIds;                                      // 0x0E18(0x0010) (Edit, ZeroConstructor, Config, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EJobUniquenessRule                      EnforcedJobUniqueness;                                     // 0x0E28(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseJobSelectionByDraft;                                   // 0x0E29(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSkipDraftMidMatch;                                        // 0x0E2A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDraftAlternateTeams;                                      // 0x0E2B(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                DraftNumPlayersSelecting;                                  // 0x0E2C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                DraftFirstSelectionNumOverride;                            // 0x0E30(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DraftPostSelectionPhaseTime;                               // 0x0E34(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDraftIncludesBans;                                        // 0x0E38(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDraftBanAlternateTeams;                                   // 0x0E39(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ISHI[0x2];                                     // 0x0E3A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                DraftBanNumPlayersBanning;                                 // 0x0E3C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int>                                        DraftBanTurns;                                             // 0x0E40(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      JobSelectionRules;                                         // 0x0E50(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AKSJobSelectionAuthority*                    JobSelectionAuthority;                                     // 0x0E58(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CurrentDraftTurnNum;                                       // 0x0E60(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                CurrentTeamNumSelecting;                                   // 0x0E64(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bCurrentlyBanning;                                         // 0x0E68(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bWasBanning;                                               // 0x0E69(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6N8N[0x2];                                     // 0x0E6A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                LastTeamNumToBan;                                          // 0x0E6C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bHasEverCompletedJobSelection;                             // 0x0E70(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bFubarIfNoVendorsByMatchStart;                             // 0x0E71(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bOnlyFubarIfNoJobVendor;                                   // 0x0E72(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFubarIfAbsentPlayers;                                     // 0x0E73(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_96SQ[0x2];                                     // 0x0E74(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Killstreak_EKSBotNameGeneration                    BotNamingMethod;                                           // 0x0E76(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AYLX[0x9];                                     // 0x0E77(0x0009) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bUseIntraScoring;                                          // 0x0E80(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BCPF[0x7];                                     // 0x0E81(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       GameModeDisplayName;                                       // 0x0E88(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UClass*                                      EmoteMusicManagerClass;                                    // 0x0EA0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRequireJobToEnterPlay;                                    // 0x0EA8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2UE5[0x7];                                     // 0x0EA9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSCinematicDataContainer*                   CinematicDataContainer;                                    // 0x0EB0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSMVPDeterminant*                           MVPDeterminant;                                            // 0x0EB8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSSeamlessTravelTransferInfo*               SeamlessTravelInfo;                                        // 0x0EC0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FKSSeamlessTravelSettings                   SeamlessTravelSettings;                                    // 0x0EC8(0x0010) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4N1J[0x8];                                     // 0x0ED8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FGameplayTag>                        GameModeTags;                                              // 0x0EE0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumericId;                                                 // 0x0EF0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAbandonPlayersOnLogOut;                                   // 0x0EF4(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bGlobalDisableAIBackfill;                                  // 0x0EF5(0x0001) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowAIBackfill;                                          // 0x0EF6(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MINZ[0x1];                                     // 0x0EF7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSBotDefinition*                            BackfillBotDefinition;                                     // 0x0EF8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3I78[0x10];                                    // 0x0F00(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      NextPawnId;                                                // 0x0F10(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VBMP[0x7];                                     // 0x0F11(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1271);
		return ptr;
	}



	bool UsePlayerLoadouts();
	bool UseInitialSpawnPoint();
	void StartPreSelectionPhase(bool bReset);
	void SetInfiniteAmmo(bool bValue);
	class AActor* SelectAWinner();
	void PopulateLootSites();
	void PopulateInteractiveObjects();
	bool PlayerCanRestartCommon(class AController* Player);
	bool PlayerCanEnterPlay(class AController* C);
	void PawnLeavingGame(class APlayerController* PawnController);
	void OnWaitForPlayersExpired();
	void OnTeamEliminated(class AKSTeamState* Team);
	void OnPlayerEliminated(class AKSPlayerState* Player);
	void OnPlayerDownStateChanged(class AKSPlayerState* Player);
	void OnKSCharacterRevived(class AKSCharacter* InRevivee, class AKSPlayerState* InReviver);
	void OnKSCharacterRadialMenuItemUsed(class AKSCharacter* InCharacter, class APlayerState* CharacterPlayer, class UKSRadialMenuItem* RadialMenuItem);
	void OnKSCharacterDowned(class AKSCharacter* InCharacter, class AController* EventInstigator, class UClass* DamageType, Killstreak_EHitLocationType HitLocationType, class AActor* DamageCauser, float DamageDealt);
	void OnKSCharacterDownAssist(class AKSCharacter* InVictim, class AController* DownInstigator, class AController* DownAssistant, float RawDamage, float DamagePercent);
	void OnKSCharacterCombatSummary(const struct FAdvancedCombatSummary& CombatSummary);
	void OnKSCharacterCombatEvent(const struct FAdvancedCombatEvent& CombatEvent);
	void OnKSCharacterBaseDied(class AKSCharacterBase* InCharacter, class APlayerState* CharacterPlayer, class AController* EventInstigator, class UClass* DamageType, Killstreak_EHitLocationType HitLocationType, const struct FKSEventAssistants& EventAssistants, class AActor* DamageCauser, float DamageDealt);
	void K2_OnMatchPhaseSet(const struct FName& NewPhase);
	Killstreak_EKSRewardType IsAWinner(class AActor* Other);
	void HandleStartingNewAIPlayer(class AKSAIController* NewPlayer);
	void HandleAllPlayersFinishedPrePrep();
	int GetStartingTeamNum(class UPlayer* NewPlayer, class APGame_PlayerController* NewPlayerController);
	class AKSGlobalShotListener* GetShotListener();
	class UClass* GetRewardsCalculatorClass();
	class AKSRevealManager* GetRevealManager();
	float GetPerSecondChargePercent();
	Killstreak_EKSPerSecondChargeMode GetPerSecondChargeMode();
	float GetMatchTimeElapsed();
	struct FName GetMatchPhaseName();
	struct FMatchPhase GetMatchPhase();
	bool GetIsTutorial();
	bool GetIsPractice();
	bool GetIsPlayerSpectateOnlyMode();
	bool GetIsAIPvpMode();
	struct FName GetGamePhase();
	struct FKSGameHUDSettings GetGameModeHUDSettings();
	TArray<class UKSPlayerMod*> GetDefaultPlayerMods();
	void GetCachedInteractiveObjects();
	bool FlippingTeamSidesThisRound();
	void EventOnTeamCreated(class AKSTeamState* Team);
	bool DoesClearObjectivesMarkedUsedOnSidesFlipped();
	void DestroyDynamicZipLines();
	void DestroyActive(class UClass* ActorClass);
	void CreateRevealManager();
	void ClearLootSites();
	void ClearInteractiveObjects();
	bool CanUsePlayerStart(class AController* Player, class APlayerStart* PlayerStart);
	bool CanSpawnBotsNow();
	void AllPlayersLockedInForComponent();
	bool AllowDamageNow();
	bool AIPlayerCanRestart(class AKSAIController* Player);
	void AddInteractiveObject();
};

// Class Killstreak.KSSeamlessTravelTransferInfo
// 0x00A0 (FullSize[0x00C8] - InheritedSize[0x0028])
class UKSSeamlessTravelTransferInfo : public UObject
{
public:
	unsigned char                                      UnknownData_ESZA[0xA0];                                    // 0x0028(0x00A0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1272);
		return ptr;
	}



};

// Class Killstreak.KSGameMode_RoundGame
// 0x0100 (FullSize[0x1018] - InheritedSize[0x0F18])
class AKSGameMode_RoundGame : public AKSGameMode
{
public:
	bool                                               bRunRespawnAndEliminationLogicBetweenRounds;               // 0x0F18(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FM7L[0x3];                                     // 0x0F19(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PostRoundDuration;                                         // 0x0F1C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FinalPostRoundDuration;                                    // 0x0F20(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSkipSelectionCinematicAfterFirstRound;                    // 0x0F24(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZUYW[0x3];                                     // 0x0F25(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       RoundStateSetupComplete;                                   // 0x0F28(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                RoundNumber;                                               // 0x0F30(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                RoundsNeededToWin;                                         // 0x0F34(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                TotalNumberOfRounds;                                       // 0x0F38(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPlayersCanRestartDuringRoundInProgress;                   // 0x0F3C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHoldPlayerRestartUntilFirstRoundSetup;                    // 0x0F3D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWinRoundByElimination;                                    // 0x0F3E(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAwardPointOnDraw;                                         // 0x0F3F(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RoundSetupTime;                                            // 0x0F40(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RoundDuration;                                             // 0x0F44(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       RoundStartPhase;                                           // 0x0F48(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bNewPawnOnRoundStart;                                      // 0x0F50(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TN36[0xF];                                     // 0x0F51(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSTeamState*                                WinByEliminationTeam;                                      // 0x0F60(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TWL3[0x1C];                                    // 0x0F68(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                NumberOfConsecutiveLossesToEnableEpicGroupSiteGuarantees;  // 0x0F84(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bKillDownedPlayersAtEndOfRound;                            // 0x0F88(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSpareWinningDownedPlayers;                                // 0x0F89(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Z88A[0x1];                                     // 0x0F8A(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Killstreak_EPlayerInfoInventoryRestoreType         InventoryRestore;                                          // 0x0F8B(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowPlayersToKeepInventoryBetweenRounds;                 // 0x0F8C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRequirePlayerToBeAlive;                                   // 0x0F8D(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRequirePlayerToBeStanding;                                // 0x0F8E(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRequirePlayerToBeOnWinningTeam;                           // 0x0F8F(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSideSwapWipesEquipment;                                   // 0x0F90(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRestoreEquipment;                                         // 0x0F91(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZPUX[0x6];                                     // 0x0F92(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagQuery                           InventoryRestoreEquipPointRequirements;                    // 0x0F98(0x0048) (Edit, Protected, NativeAccessSpecifierProtected)
	bool                                               bRestoreSlotlessEquipment;                                 // 0x0FE0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRestoreNonEquipment;                                      // 0x0FE1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1OUE[0x6];                                     // 0x0FE2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FInventoryRestoreInfo>               GuaranteedInventory;                                       // 0x0FE8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                FlipTeamSideFrequency;                                     // 0x0FF8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxTeamSideFlipsPerMatch;                                  // 0x0FFC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSideSwapClearsConsecutiveLosses;                          // 0x1000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IYGW[0x3];                                     // 0x1001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                TeamSideFlipsThisMatch;                                    // 0x1004(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                LatestTeamSideFlipRoundNumber;                             // 0x1008(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bBlockWeaponsPostRound;                                    // 0x100C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AFN6[0xB];                                     // 0x100D(0x000B) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1273);
		return ptr;
	}



	void StartRound();
	bool ShouldTeamsFlip(unsigned char Round);
	bool ShouldSkipSelectionCinematicAfterFirstRound();
	bool ShouldPlayEndRoundKillCam();
	bool ReadyToStartNextRound();
	bool ReadyToPrepareNextRound();
	void PrepareForNextRound();
	void K2_OnSetRoundState(const struct FName& InRoundState);
	bool IsRoundSetupComplete();
	bool IsRoundInProgress();
	bool HasRoundStarted();
	bool HasRoundEnded();
	bool HasPreparedNextRound();
	int GetTeamSideFlipsThisMatch();
	struct FName GetRoundStateName();
	struct FMatchPhase GetRoundState();
	float GetRoundStartTime();
	unsigned char GetRoundNumber();
	int GetNumRoundsSinceSideFlip();
	void EndRoundKillCam();
	void EndRound();
	bool CanPlayerKeepInventoryBetweenRounds(class AKSCharacter* Character, class AController* Player);
};

// Class Killstreak.KSGameMode_Modular
// 0x00E8 (FullSize[0x1100] - InheritedSize[0x1018])
class AKSGameMode_Modular : public AKSGameMode_RoundGame
{
public:
	struct FScriptMulticastDelegate                    OnTeamWiped;                                               // 0x1018(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTimerModifiedMidPhase;                                   // 0x1028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bMarkedInProgress;                                         // 0x1038(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseInitialSpawnPoints;                                    // 0x1039(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAutoRestoreRespawnConfigOnNewRound;                       // 0x103A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAutoRevertTeamSwapsOnNewRound;                            // 0x103B(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OS8A[0x4];                                     // 0x103C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnTeamChanged;                                             // 0x1040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                               bAwardBonusPointToRoundWinner;                             // 0x1050(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7ASR[0x7];                                     // 0x1051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class AKSPlayerState*, class AKSTeamState*>   OriginalPlayersToTeams;                                    // 0x1058(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	TMap<int, int>                                     ScoreAtRoundStart;                                         // 0x10A8(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	class UKSPhaseRuleComponent*                       ActivePhaseRule;                                           // 0x10F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1274);
		return ptr;
	}



	void SortObjectivesByLootGroup(TArray<class AKSObjectiveBase*>* ObjectivesToSort, bool ShouldSortDescending);
	void SortObjectivesByDisplayId(TArray<class AKSObjectiveBase*>* ObjectivesToSort, bool ShouldSortDescending);
	void ShuffleObjectives(TArray<class AKSObjectiveBase*>* ObjectivesToShuffle);
	void PushNewRespawnConfigToTeams(const struct FKSRespawnConfig& NewConfig, Killstreak_EExtractionTeamType Filter, bool bInverseFilter, bool bReset);
	void PushNewRespawnConfigToAllTeams(const struct FKSRespawnConfig& Config, bool bReset);
	void PushModeDefaultRespawnConfigToTeams(Killstreak_EExtractionTeamType Filter, bool bInverseFilter, bool bReset);
	void PushModeDefaultRespawnConfigToAllTeams(bool bReset);
	void OnRoundStart();
	void OnRoundPrepare();
	void OnRoundEnd();
	void ModifyTimerBySeconds(float Seconds);
	void MarkWonByElimination();
	bool FilterTeamObjectives(TArray<class AKSObjectiveBase*> AvailableObjectives, TArray<class AKSObjectiveBase*>* FilteredObjectives);
	bool FilterObjectiveForTeams(TArray<class AKSObjectiveBase*> AvailableObjectives, class AKSTeamState* FavoredTeam, TArray<class AKSObjectiveBase*>* FilteredObjectives);
	bool FilterObjectiveAgainstTeams(TArray<class AKSObjectiveBase*> AvailableObjectives, class AKSTeamState* DiscouragedTeam, TArray<class AKSObjectiveBase*>* FilteredObjectives);
	bool FilterNeutralObjectives(TArray<class AKSObjectiveBase*> AvailableObjectives, TArray<class AKSObjectiveBase*>* FilteredObjectives);
	void EndRoundPrepare();
	class AKSObjectiveBase* ChooseRandomObjective(TArray<class AKSObjectiveBase*> AvailableObjectives);
	void ChangePlayerTeam(class AKSPlayerState* Player, class AKSTeamState* NewTeam, Killstreak_EChangeAdditionalActionCondition ShouldRestartPlayer);
};

// Class Killstreak.KSGameMode_TutorialBase
// 0x0020 (FullSize[0x0F38] - InheritedSize[0x0F18])
class AKSGameMode_TutorialBase : public AKSGameMode
{
public:
	struct FScriptMulticastDelegate                    OnTutorialComplete;                                        // 0x0F18(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    TutorialEnding;                                            // 0x0F28(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1275);
		return ptr;
	}



	void CallTutorialEndingDelegates();
	void CallOnTutorialCompleteDelegates();
};

// Class Killstreak.KSGamepadLookSpeedManager
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UKSGamepadLookSpeedManager : public UObject
{
public:
	class AKSPlayerController*                         PlayerController;                                          // 0x0028(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1276);
		return ptr;
	}



};

// Class Killstreak.KSGamepadCurvedLookSpeedManager
// 0x00B8 (FullSize[0x00E8] - InheritedSize[0x0030])
class UKSGamepadCurvedLookSpeedManager : public UKSGamepadLookSpeedManager
{
public:
	bool                                               bUseBaseVelocity;                                          // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_U4GC[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveVector*                                LookBaseVelocityCurve;                                     // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   BoostThreshold;                                            // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   BoostMultiplier;                                           // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BoostAcceleration;                                         // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FGBC[0x4];                                     // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveVector*                                MouseLookMaxVelocityCurve;                                 // 0x0058(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveVector*                                MouseLookMaxVelocityADSCurve;                              // 0x0060(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TurnRateMultiplier;                                        // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LookUpRateMultiplier;                                      // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveVector*                                MouseLookAccelerationCurve;                                // 0x0070(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveVector*                                MouseLookAccelerationADSCurve;                             // 0x0078(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FName, class UCurveVector*>            TestBaseVelocityCurves;                                    // 0x0080(0x0050) (Edit, DisableEditOnInstance, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	struct FVector2D                                   LastRotationVelocityScale;                                 // 0x00D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                                   PrevInput;                                                 // 0x00D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                                   CurrentTurnSpeed;                                          // 0x00E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1277);
		return ptr;
	}



	void SetOuterDeadZone(float NewZoneX, float NewZoneY);
	void SetBoostMultiplier(float NewBoostX, float NewBoostY);
	void SetBoostAcceleration(float NewAccel);
	void SetBaseVelocityCurve(const struct FName& TestCurveName);
	void PrintLookSpeedParameters();
};

// Class Killstreak.KSGamePhaseProxyBase
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSGamePhaseProxyBase : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1278);
		return ptr;
	}



	void Activate();
};

// Class Killstreak.KSGameState
// 0x1680 (FullSize[0x1920] - InheritedSize[0x02A0])
class AKSGameState : public APGame_GameState
{
public:
	unsigned char                                      UnknownData_D2UV[0x38];                                    // 0x02A0(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSPlayerIdentitiesContainer                PlayerIdentitiesContainer;                                 // 0x02D8(0x0120) (Net, NativeAccessSpecifierPublic)
	TMap<uint64_t, TWeakObjectPtr<class AKSLagCompensatedActor>> PredictedActors;                                           // 0x03F8(0x0050) (UObjectWrapper, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TPEQ[0x10];                                    // 0x0448(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Killstreak_EKillCamStatus                          KillCamStatus;                                             // 0x0458(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2QXC[0x3];                                     // 0x0459(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              KillCamRecordingSecondsToKeep;                             // 0x045C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APawn*                                       KillCamFocusPawn;                                          // 0x0460(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IMVF[0x8];                                     // 0x0468(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class APawn*                                       KillCamSecondaryFocusPawn;                                 // 0x0470(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_802Q[0x8];                                     // 0x0478(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      KillCamFocusSpecial;                                       // 0x0480(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TQP3[0x4];                                     // 0x0488(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              KillCamTime;                                               // 0x048C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0WDV[0x18];                                    // 0x0490(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnGameDisplayInfo;                                         // 0x04A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRemoveGameDisplayInfo;                                   // 0x04B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D6Q5[0x68];                                    // 0x04C8(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPhaseChangeDel;                                          // 0x0530(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSetupStartDel;                                           // 0x0540(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSetupEndDel;                                             // 0x0550(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnExpectedPhaseCountChanged;                               // 0x0560(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTimerSecondTick;                                         // 0x0570(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FMatchPhase                                 MatchPhase;                                                // 0x0580(0x000C) (Edit, Net, DisableEditOnTemplate, EditConst, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	int                                                ExpectedPhaseCount;                                        // 0x058C(0x0004) (Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ExpectedTimeForRemainingPhases;                            // 0x0590(0x0004) (Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FMatchPhase                                 PreviousPhase;                                             // 0x0594(0x000C) (Edit, DisableEditOnTemplate, EditConst, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bHasProcessedMatchStarted;                                 // 0x05A0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4EZU[0x4F];                                    // 0x05A1(0x004F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPGame_ReplicatedTimer                      ReplicatedMatchTimer;                                      // 0x05F0(0x0038) (Edit, Net, DisableEditOnTemplate, EditConst, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3RON[0xC];                                     // 0x0628(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bCharacterBodiesPersistAfterDeath;                         // 0x0634(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XO4F[0x3];                                     // 0x0635(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SecondsForCharacterBodiesToPersistAfterDeath;              // 0x0638(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SecondsToViewBodyAfterDeath;                               // 0x063C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnPlayerDeath;                                             // 0x0640(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerDown;                                              // 0x0650(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRadialMenuItemUse;                                       // 0x0660(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerSpawn;                                             // 0x0670(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerRevive;                                            // 0x0680(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWinnerSet;                                               // 0x0690(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerAssist;                                            // 0x06A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLastManStanding;                                         // 0x06B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUIRelevantPlayerStateChangedDel;                         // 0x06C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              DefaultMinimapWidth;                                       // 0x06D0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5MOX[0x4];                                     // 0x06D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnTeamAdded;                                               // 0x06D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTeamRemoved;                                             // 0x06E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTeamCelebrateDel;                                        // 0x06F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              AccoladeTrackerClasses;                                    // 0x0708(0x0010) (Net, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JEF1[0x18];                                    // 0x0718(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSMiniMapAssistant*                         MiniMapAssistant;                                          // 0x0730(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<int, class AKSTeamState*>                     teams;                                                     // 0x0738(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S0B8[0x8];                                     // 0x0788(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCombatEventList                            CombatEventList;                                           // 0x0790(0x0088) (Net, Protected, NativeAccessSpecifierProtected)
	struct FRadialMenuItemEventList                    RadialMenuItemEventList;                                   // 0x0818(0x0088) (Net, Protected, NativeAccessSpecifierProtected)
	struct FAssistEventList                            AssistEventList;                                           // 0x08A0(0x0088) (Net, Protected, NativeAccessSpecifierProtected)
	struct FReviveEventList                            ReviveEventList;                                           // 0x0928(0x0088) (Net, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnTeamEliminatedDel;                                       // 0x09B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnTeamEliminatedOrDownedDel;                               // 0x09C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnPlayerEliminatedDel;                                     // 0x09D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnPlayerDownedChangedDel;                                  // 0x09E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnAttackingTeamUpdated;                                    // 0x09F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnDisplayCashChanged;                                      // 0x0A00(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                               bDisplayCash;                                              // 0x0A10(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MHA7[0x3];                                     // 0x0A11(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CashPerDown;                                               // 0x0A14(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       DownDescription;                                           // 0x0A18(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int                                                CashPerAssist;                                             // 0x0A30(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VSNY[0x4];                                     // 0x0A34(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       AssistDescription;                                         // 0x0A38(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int                                                CashPerRevive;                                             // 0x0A50(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SE0U[0x4];                                     // 0x0A54(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       ReviveDescription;                                         // 0x0A58(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int                                                CashPerElim;                                               // 0x0A70(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CNWN[0x4];                                     // 0x0A74(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       EliminationDescription;                                    // 0x0A78(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int                                                CashPerSuicide;                                            // 0x0A90(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AXAM[0x4];                                     // 0x0A94(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       SuicideDescription;                                        // 0x0A98(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<class UClass*, int>                           CashPerDeployableDestroyed;                                // 0x0AB0(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FString                                     MercSelectSubLevel;                                        // 0x0B00(0x0010) (Edit, ZeroConstructor, Config, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FString>                             ActiveCinematicSubLevelNames;                              // 0x0B10(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSCinematicSequenceManager*                 ActiveCinematicSequenceManager;                            // 0x0B20(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnTeamSidesFlipped;                                        // 0x0B28(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<int>                                        TierUnlockThresholds;                                      // 0x0B38(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxMarkerDistanceForCommonLoot;                            // 0x0B48(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EKSGameTicketDisplayType                ObjectiveTicketDisplayType;                                // 0x0B4C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WL0D[0x273];                                   // 0x0B4D(0x0273) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AKSLootSiteBase*>                     WorldLootSites;                                            // 0x0DC0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AKSObjectiveBase*>                    WorldObjectives;                                           // 0x0DD0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AKSFlightPoint*>                      WorldFlightPoints;                                         // 0x0DE0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AKSDestructibleBase*>                 WorldDestructibles;                                        // 0x0DF0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AKSItemDrop*>                         WorldDrops;                                                // 0x0E00(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AKSProjectile*>                       WorldProjectiles;                                          // 0x0E10(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AKSCharacter*>                        WorldCharacters;                                           // 0x0E20(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UKSHeatSourceComponent*>              WorldHeatSources;                                          // 0x0E30(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      WorldHazards[0x10];                                        // 0x0E40(0x0010) UNKNOWN PROPERTY: ArrayProperty
	TArray<class AKSWayPointSet*>                      WorldWayPointSets;                                         // 0x0E50(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AKSOutOfBoundsRecoveryPoint*>         WorldRecoveryPoints;                                       // 0x0E60(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AKSAnnouncer*>                        WorldAnnouncers;                                           // 0x0E70(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AKSPlayerShop*>                       WorldPlayerShops;                                          // 0x0E80(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FInitialGameObjectiveInfo>           InitialGameObjectiveInfos;                                 // 0x0E90(0x0010) (Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnHUDTimerPrioritiesChangedDel;                            // 0x0EA0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMarkerTimerPrioritiesChangedDel;                         // 0x0EB0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FKSTimerPriorityConfig                      HUDTimerPriorityConfig;                                    // 0x0EC0(0x0003) (Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EHM0[0x5];                                     // 0x0EC3(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<Killstreak_EGameTimerType, Killstreak_EKSPriority> HUDTimerPriorityMap;                                       // 0x0EC8(0x0050) (Protected, NativeAccessSpecifierProtected)
	struct FKSTimerPriorityConfig                      MarkerTimerPriorityConfig;                                 // 0x0F18(0x0003) (Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2M11[0x5];                                     // 0x0F1B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<Killstreak_EGameTimerType, Killstreak_EKSPriority> MarkerTimerPriorityMap;                                    // 0x0F20(0x0050) (Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnGameObjectiveRegistered;                                 // 0x0F70(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGameObjectiveUnregistered;                               // 0x0F80(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGameObjectiveStateChanged;                               // 0x0F90(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGameObjectiveTimerActive;                                // 0x0FA0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGameObjectiveTimerComplete;                              // 0x0FB0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGameObjectiveTimerTick;                                  // 0x0FC0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JYWK[0x10];                                    // 0x0FD0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      GameObjectives[0x50];                                      // 0x0FD0(0x0050) UNKNOWN PROPERTY: MapProperty
	struct FScriptMulticastDelegate                    OnHeatSourceAdded;                                         // 0x1030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnHeatSourceRemoved;                                       // 0x1040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                              WorldDeployables;                                          // 0x1050(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bDestroyDeployableOnInstigatorDeath;                       // 0x1060(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JAA6[0x7];                                     // 0x1061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnItemDropAdded;                                           // 0x1068(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	float                                              ItemDropLifeSpan;                                          // 0x1078(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bShouldOffsetWeaponDrops;                                  // 0x107C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ER1G[0x3];                                     // 0x107D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ProjectileLifeSpan;                                        // 0x1080(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9J15[0x4];                                     // 0x1084(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      SkyDiveListeners[0x10];                                    // 0x1084(0x0010) UNKNOWN PROPERTY: ArrayProperty
	TArray<class AKSCharacter*>                        SkyDivers;                                                 // 0x1098(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6PFX[0x88];                                    // 0x10A8(0x0088) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       PresenceDisplayText;                                       // 0x1130(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FString                                     PresenceKey;                                               // 0x1148(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ATIM[0x8];                                     // 0x1158(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSTimerComponent*                           WaveRespawnTimer;                                          // 0x1160(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FKSLootRarityTimerPair>              LootRarityTimerPairs;                                      // 0x1168(0x0010) (Net, ZeroConstructor, RepNotify, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<Killstreak_ELootSiteRarity, class UKSTimerComponent*> LootRarityTimerMap;                                        // 0x1178(0x0050) (ExportObject, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnLootRespawnTimerTick;                                    // 0x11C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnLootRespawnTimerActive;                                  // 0x11D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnAccoladeDisplay;                                         // 0x11E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FAccoladeEventList                          AccoladeEventList;                                         // 0x11F8(0x0088) (Net, Protected, NativeAccessSpecifierProtected)
	bool                                               bBlockWeaponFiring;                                        // 0x1280(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UJWI[0x3];                                     // 0x1281(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HealthGate;                                                // 0x1284(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPreserveReserveAmmo;                                      // 0x1288(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bInfiniteAmmo;                                             // 0x1289(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bShowHUDObjectiveRoles;                                    // 0x128A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowHUDObjectiveRoleBeforeJobSelect;                      // 0x128B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInvertHUDObjectiveRoles;                                  // 0x128C(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OMZQ[0x3];                                     // 0x128D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSGameHUDSettings                          GameModeHUDSettings;                                       // 0x1290(0x0018) (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bPlayersShouldSpectateDefaultCamera;                       // 0x12A8(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowingPreviewActorSubLevel;                              // 0x12A9(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPreviewActorsEnabled;                                     // 0x12AA(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RFP0[0x4D];                                    // 0x12AB(0x004D) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnDynamicDestroyPreviewActorsDel;                          // 0x12F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnDynamicDisablePreviewActorsDel;                          // 0x1308(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnDynamicEnablePreviewActorsDel;                           // 0x1318(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnCinematicSubLevelEnabled;                                // 0x1328(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCinematicSubLevelDisabled;                               // 0x1338(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSetNumDebugCinematicRogues;                              // 0x1348(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HIMP[0x4];                                     // 0x1358(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                NumDebugCinematicRogues;                                   // 0x135C(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               AlwaysIncludedClientBundles;                               // 0x1360(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               AlwaysIncludedServerBundles;                               // 0x1370(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FReplicatedPreloader                        Preloader;                                                 // 0x1380(0x01E0) (Net, NativeAccessSpecifierPrivate)
	bool                                               bPostSelectionCinematicDisabled;                           // 0x1560(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bForceAllowLeaveMatchButton;                               // 0x1561(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8JDJ[0x6];                                     // 0x1562(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSPersistentMinPlayerDataContainer         PersistentPlayerDataContainer;                             // 0x1568(0x0210) (Net, Transient, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnPersistentPlayerDataCreatedDel;                          // 0x1778(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VYTK[0x68];                                    // 0x1788(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSPersistentDataReplicator*                 PersistentDataReplicator;                                  // 0x17F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                FriendlyFireKillPenalty;                                   // 0x17F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                FriendlyFireDownPenalty;                                   // 0x17FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PLWV[0x18];                                    // 0x1800(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bCanToggleScoreboard;                                      // 0x1818(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YDC7[0x17];                                    // 0x1819(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bMatchEndedInSurrender;                                    // 0x1830(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_P1J5[0x7];                                     // 0x1831(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSTeamState*                                SurrenderWinningTeam;                                      // 0x1838(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AActor>>               StimulusSourceObjects;                                     // 0x1840(0x0010) (ZeroConstructor, Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FName, struct FString>                 HUDComponentPropMap;                                       // 0x1850(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UClass*                                      HUDAnnouncementComponentClass;                             // 0x18A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      EmoteMusicManagerClass;                                    // 0x18A8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSEmoteMusicManager*                        EmoteMusicManager;                                         // 0x18B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               ActiveCinematicState;                                      // 0x18B8(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DOQT[0x28];                                    // 0x18C8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSCinematicDataContainer*                   CinematicDataContainer;                                    // 0x18F0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSMVPDeterminant*                           MVPDeterminant;                                            // 0x18F8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSWayPointSetCollection*                    WayPointSetCollection;                                     // 0x1900(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnJobSelectionTypeChanged;                                 // 0x1908(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	Killstreak_EJobSelectionType                       JobSelectionType;                                          // 0x1918(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Q8GQ[0x7];                                     // 0x1919(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1279);
		return ptr;
	}



	bool WasLastPhasePrepare();
	void UnregisterGameObjective();
	void TriggerPostSelectionPhaseBeginFadeOutDel();
	void TriggerOnTeamCinematicSequenceBeginDel();
	void TrackedPlayerStateDestroyed(class AActor* InActor);
	void StopWaveRespawnTimer();
	void StartWaveRespawnTimer();
	bool ShouldForceAllowLeaveMatchButton();
	bool ShouldDestroyDeployableOnInstigatorDeath();
	void SetWinner(class AActor* InWinner);
	void SetSideForTeam(int TeamNumber, int SideNumber);
	void SetNumDebugCinematicRogues(int NewNumDebugCinematicRogues);
	void SetMVPDeterminant(class UKSMVPDeterminant* InMVPDeterminant);
	void SetMarkerTimerPriorities(const struct FKSTimerPriorityConfig& NewTimerPriorityConfig);
	void SetHUDTimerPriorities(const struct FKSTimerPriorityConfig& NewTimerPriorityConfig);
	void SetExpectedTimeForRemainingPhases(float InExpectedTimeForRemainingPhases);
	void SetExpectedPhaseCount(int NumPhases);
	void SetCinematicDataContainer(class UKSCinematicDataContainer* InCinematicDataContainer);
	void SetActiveCinematicSequenceManager(class AKSCinematicSequenceManager* NewCinematicSequenceManager);
	void Server_RequestEmoteOnCinematicCharacter(class AKSPlayerState* CallingPlayerState, class UKSEmote* Emote);
	void RemoveGameDisplayInfoForActor(class AActor* pActor);
	void RemoveGameDisplayInfoById(int DisplayInfoIdToRemove);
	void RemoveDeployable();
	void RegisterGameObjective(int ObjectiveId);
	void ReceivedKillCamStatus();
	void OnRep_WaveRespawnTimer();
	void OnRep_MatchPhase();
	void OnRep_MarkerTimerPriorities();
	void OnRep_LootRarityTimerPairs();
	void OnRep_JobSelectionType();
	void OnRep_InvertHUDObjectiveRoles();
	void OnRep_InfiniteAmmo();
	void OnRep_HUDTimerPriorities();
	void OnRep_ExpectedPhaseCount();
	void OnRep_EmoteMusicManagerClass();
	void OnRep_DisplayCash();
	void OnRegisteredStimulusObjectDestroyed(class AActor* DestroyedActor);
	void OnObjectiveTimerTick(float Time, int ObjectiveId);
	void OnObjectiveTimerComplete(int ObjectiveId);
	void OnObjectiveTimerActive(bool Active, int ObjectiveId);
	void OnGameObjectiveStateChangedCallback();
	void OnGameObjectiveDestroyed(class AActor* ObjectiveAsActor);
	void NotifyDropshipDoorOpened();
	void NetMulticast_RequestEmoteOnCinematicCharacter(class AKSPlayerState* CallingPlayerState, class UKSEmote* Emote);
	void Multicast_UnregisterGameObjective(class AActor* ObjectiveAsActor);
	void Multicast_RegisterGameObjective(int ObjectiveId, class AActor* ObjectiveAsActor);
	void Multicast_ObjectiveStateChanged(class AActor* ObjectiveAsActor, const struct FKSObjectiveState& ObjectiveState);
	void LootRespawnTimerTick(float Seconds, Killstreak_ELootSiteRarity Rarity);
	void LootRespawnTimerComplete(Killstreak_ELootSiteRarity Rarity);
	void LootRespawnTimerActive(bool bActive, Killstreak_ELootSiteRarity Rarity);
	bool IsRoyaleMode();
	bool IsPostSelectionCinematicDisabled();
	bool IsMVPLineupCinematicActive();
	bool IsLocalPlayerWinner();
	bool IsKillCamRecording();
	bool IsInSetup();
	bool IsInSelection();
	bool IsCinematicSubLevelActive(const struct FString& CinematicSubLevelName);
	TArray<class AActor*> GetWorldDeployables();
	int GetWinningTeamNum();
	void GetUIMatchTime(float* OutTimeRemaining, float* OutTotalTime);
	TArray<class AKSItemDrop*> GetTrackedWorldDrops();
	TArray<class AKSProjectile*> GetTrackedProjectiles();
	void GetTeamsWithObjectiveRole(Killstreak_EExtractionTeamType Filter, TArray<class AKSTeamState*>* OutTeams, bool bInverseFilter);
	TArray<class AKSTeamState*> GetTeams();
	class AKSTeamState* GetTeamConst(int TeamNum);
	int GetSideForTeam(int TeamNumber);
	float GetSecondsFromSurrenderFailure();
	float GetSecondsFromPlayerDisconnect();
	float GetSecondsFromMatchStart();
	TArray<class UKSHeatSourceComponent*> GetRegisteredHeatSources();
	bool GetPlayerIdentityDataByPlayerState(class AKSPlayerState* PlayerState, struct FKSPlayerIdentityData* PlayerIdentityData);
	class UKSPersistentPlayerData* GetPersistentPlayerDataById(const struct FKSPersistentPlayerId& InId);
	int GetNumDebugCinematicRogues();
	class UKSMVPDeterminant* GetMVPDeterminant();
	class AKSMiniMapAssistant* GetMiniMapAssistant();
	PlatformGameFramework_EPGame_ReplicateTimerState GetMatchTimerState();
	void GetMatchTimer(float* OutPhaseTimeRemaining, float* OutTotalPhaseTime);
	struct FName GetMatchPhaseName();
	struct FMatchPhase GetMatchPhase();
	TMap<Killstreak_EGameTimerType, Killstreak_EKSPriority> GetMarkerTimerPriorities();
	class APawn* GetKillCamSecondaryFocusPawn(int LocalPlayerIndex);
	class AKSProjectile* GetKillCamFocusSpecial(int LocalPlayerIndex);
	class APawn* GetKillCamFocusPawn(int LocalPlayerIndex);
	class AActor* GetKillCamActor(int Guid, int LocalPlayerIndex);
	Killstreak_EJobSelectionType GetJobSelectionType();
	TMap<Killstreak_EGameTimerType, Killstreak_EKSPriority> GetHUDTimerPriorities();
	class UClass* GetHUDAnnouncementComponentClass();
	void GetGameObjectives();
	void GetGameObjectiveById(int ID);
	class AKSTeamState* GetFirstTeamWithObjectiveRole(Killstreak_EExtractionTeamType Filter);
	int GetFirstTeamForSide(int SideNumber);
	class AKSAnnouncer* GetFirstAnnouncer();
	float GetExpectedTimeForRemainingPhases();
	int GetExpectedPhaseCount();
	float GetEstimatedRemainingRoundTime();
	class UKSCinematicDataContainer* GetCinematicDataContainer();
	class AKSTeamState* GetAttackingTeam();
	void GetAllTeams(TArray<class AKSTeamState*>* AllTeams);
	void GetAllPersistentPlayerData();
	void GetAllFriendlyTeams(class APlayerController* InPlayerController, TArray<class AKSTeamState*>* FriendlyTeams);
	void GetAllEnemyTeams(class APlayerController* InPlayerController, TArray<class AKSTeamState*>* EnemyTeams);
	class AKSCinematicSequenceManager* GetActiveCinematicSequenceManager();
	void FlipTeamSides();
	void EndGameInSurrender(int WinningTeamNum);
	bool DoesQueueAllowSurrender();
	void ClientsNotifyWinnerSet(int TeamNum);
	void ClientsNotifyLastManStanding(class AKSPlayerState* LastPlayer);
	void ClearMarkerTimerPriorities();
	void ClearHUDTimerPriorities();
	void CheatSetMatchPhase(const struct FName& InMatchPhaseName);
	bool CharacterBodiesPersistAfterDeath();
	int CalculateCashForAssist(float DamagePercent);
	void BroadcastTeamSidesFlipped();
	void BroadcastKillCamParameters(class APawn* InPawn, class APawn* InSecondaryPawn, class AActor* InSpecialDamageCauser);
	bool BlueprintIsMatchInProgress();
	bool BlueprintHasMatchEnded();
	void BindGameObjectiveStateTimerCallbacks();
	int AddGameDisplayInfo(const struct FDisplayInfo& DisplayInfo);
	void AddDeployable();
};

// Class Killstreak.KSGameState_RoundGame
// 0x0180 (FullSize[0x1AA0] - InheritedSize[0x1920])
class AKSGameState_RoundGame : public AKSGameState
{
public:
	struct FReplicatedRoundInfo                        RoundInfo;                                                 // 0x1920(0x0010) (Edit, Net, DisableEditOnTemplate, EditConst, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FReplicatedRoundInfo                        PreviousRoundInfo;                                         // 0x1930(0x0010) (Edit, DisableEditOnTemplate, EditConst, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              RoundEndFadeOutAtMatchTime;                                // 0x1940(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RoundEndFadeOutDelayTime;                                  // 0x1944(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RoundEndFadeOutTime;                                       // 0x1948(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUsingRoundDelayedGarbageCollection;                       // 0x194C(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UBMC[0x3];                                     // 0x194D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnRoundInfoChangedDel;                                     // 0x1950(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_14R4[0x18];                                    // 0x1960(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRoundResult                                RoundResult;                                               // 0x1978(0x0020) (BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FRoundResult>                        AllRoundResults;                                           // 0x1998(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                TotalRounds;                                               // 0x19A8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                RoundsToWin;                                               // 0x19AC(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnTotalRoundsSet;                                          // 0x19B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRoundsToWinSet;                                          // 0x19C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FRoundInitState                             RoundInitState;                                            // 0x19D0(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRoundSetupDel;                                           // 0x19E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_K788[0x18];                                    // 0x19F0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnRoundStartDel;                                           // 0x1A08(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F68C[0x18];                                    // 0x1A18(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnRoundOverDel;                                            // 0x1A30(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TMU9[0x18];                                    // 0x1A40(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CashPerWinningPlayer;                                      // 0x1A58(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OI1L[0x4];                                     // 0x1A5C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<int>                                        ConsecutiveCashPerLosingPlayer;                            // 0x1A60(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_A6BA[0x8];                                     // 0x1A70(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RoundEndCamPreDeathDuration;                               // 0x1A78(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RoundEndCamPostDeathDuration;                              // 0x1A7C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RoundEndCamPreDeathDilation;                               // 0x1A80(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RoundEndCamTimeDilation;                                   // 0x1A84(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EndOfMatchKillCamDelay;                                    // 0x1A88(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DOZG[0x14];                                    // 0x1A8C(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1280);
		return ptr;
	}



	void TryToReplayLastKill();
	bool RoundHasStarted();
	bool RoundHasEnded();
	bool PreparingForNextRound();
	void OnRep_TotalRounds();
	void OnRep_RoundsToWin();
	void OnRep_RoundResult();
	void OnRep_RoundInitState();
	void OnRep_RoundInfo();
	void OnMatchTimerUpdate(float TimeInWholeSeconds);
	bool IsTieBreakerRound();
	bool IsTeamAtMatchPoint(class AKSTeamState* Team);
	bool IsRoundInProgress();
	bool HasTriggeredRoundStart();
	bool HasTriggeredRoundSetup();
	bool HasTriggeredRoundOver();
	int GetTotalRounds();
	class AKSTeamState* GetRoundWinner();
	PlatformGameFramework_EPGame_ReplicateTimerState GetRoundTimerState();
	void GetRoundTimer(float* OutRoundTimeRemaining, float* OutTotalRoundTime);
	int GetRoundsToWin();
	struct FName GetRoundStateName();
	struct FMatchPhase GetRoundState();
	float GetRoundStartTime();
	TArray<int> GetRoundResultWiningTeams();
	unsigned char GetRoundNumber();
	int GetCashPerWinningPlayer();
	int GetCashPerLosingPlayer(int NumConsecutiveLosses);
	TArray<struct FRoundResult> GetAllRoundResults();
};

// Class Killstreak.KSGameState_Modular
// 0x0000 (FullSize[0x1AA0] - InheritedSize[0x1AA0])
class AKSGameState_Modular : public AKSGameState_RoundGame
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1281);
		return ptr;
	}



	class UKSHUDComponent_Objective* GetKSObjectiveComponent();
};

// Class Killstreak.KSSettingsSaveGame
// 0x0178 (FullSize[0x01A0] - InheritedSize[0x0028])
class UKSSettingsSaveGame : public USaveGame
{
public:
	TMap<struct FName, struct FString>                 SavedSettingsConfig;                                       // 0x0028(0x0050) (NativeAccessSpecifierPublic)
	struct FString                                     SavedDisplayLanguage;                                      // 0x0078(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LastJoinedQueuePrimaryId;                                  // 0x0088(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1TVZ[0x4];                                     // 0x008C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      SavedLocalActions[0x50];                                   // 0x008C(0x0050) UNKNOWN PROPERTY: SetProperty
	int                                                SavedSelectedRegion;                                       // 0x00E0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LastWhatsNewVersion;                                       // 0x00E4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int>                                        SavedTransientAcquisitionIds;                              // 0x00E8(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      SavedViewedNewsPanelIds[0x50];                             // 0x00F8(0x0050) UNKNOWN PROPERTY: SetProperty
	int                                                SavedChallengeVersionId;                                   // 0x0148(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_80IG[0x4];                                     // 0x014C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      SavedViewedChallengeIds[0x50];                             // 0x014C(0x0050) UNKNOWN PROPERTY: SetProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1282);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_SelectDefensePoint
// 0x0028 (FullSize[0x0098] - InheritedSize[0x0070])
class UKSBTTask_SelectDefensePoint : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      DefensePointActorKey;                                      // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1121);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_SelectTargetOfTarget
// 0x0050 (FullSize[0x00C0] - InheritedSize[0x0070])
class UKSBTTask_SelectTargetOfTarget : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      CopyTarget;                                                // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      KeyToCopy;                                                 // 0x0098(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1126);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_SelectVaultTargetLocation
// 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
class UKSBTTask_SelectVaultTargetLocation : public UBTTask_BlackboardBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1127);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_SelectWayPoint
// 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
class UKSBTTask_SelectWayPoint : public UBTTask_BlackboardBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1128);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_SetBehaviorState
// 0x0008 (FullSize[0x0078] - InheritedSize[0x0070])
class UKSBTTask_SetBehaviorState : public UBTTaskNode
{
public:
	Killstreak_ECharacterBehaviorState                 BehaviorState;                                             // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B3CR[0x7];                                     // 0x0071(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1129);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_SetWaypointDefenseTimer
// 0x0050 (FullSize[0x00C0] - InheritedSize[0x0070])
class UKSBTTask_SetWaypointDefenseTimer : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      WayPoint;                                                  // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      DefenseTimer;                                              // 0x0098(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1136);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_SetWeaponRanges
// 0x0060 (FullSize[0x00D0] - InheritedSize[0x0070])
class UKSBTTask_SetWeaponRanges : public UBTTaskNode
{
public:
	class UDataTable*                                  WeaponRangeConfigTable;                                    // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                                EquipPoint;                                                // 0x0078(0x0008) (Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      IdealAttackRangeKey;                                       // 0x0080(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      StartAttackRangeKey;                                       // 0x00A8(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1137);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_SkydiveToward
// 0x0030 (FullSize[0x0100] - InheritedSize[0x00D0])
class UKSBTTask_SkydiveToward : public UKSBTTask_MoveToward
{
public:
	struct FBlackboardKeySelector                      TargetSkydiveLocation;                                     // 0x00D0(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	float                                              BlendStartDistance;                                        // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BlendEndDistance;                                          // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1138);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_StopMovement
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UKSBTTask_StopMovement : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1139);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_Strafe
// 0x0018 (FullSize[0x0108] - InheritedSize[0x00F0])
class UKSBTTask_Strafe : public UKSBTTask_MoveToBlackboard
{
public:
	float                                              DirectionAngleMax;                                         // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DirectionAngleMin;                                         // 0x00F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bInvertAngle;                                              // 0x00F8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_X38Y[0x3];                                     // 0x00F9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinDistance;                                               // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxDistance;                                               // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_M4GA[0x4];                                     // 0x0104(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1140);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_TriggerBleedout
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UKSBTTask_TriggerBleedout : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1141);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_TryToVault
// 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
class UKSBTTask_TryToVault : public UBTTask_BlackboardBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1142);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_UpdateCachedWeapon
// 0x0028 (FullSize[0x0098] - InheritedSize[0x0070])
class UKSBTTask_UpdateCachedWeapon : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      CachedWeaponClassKey;                                      // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1143);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_WaitForADS
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UKSBTTask_WaitForADS : public UBTTaskNode
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1144);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_WeaponDistanceChecks
// 0x00F8 (FullSize[0x0168] - InheritedSize[0x0070])
class UKSBTTask_WeaponDistanceChecks : public UBTTaskNode
{
public:
	float                                              IntervalCheckRangeMeters;                                  // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8P57[0x4];                                     // 0x0074(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FBlackboardKeySelector                      CombatTargetKey;                                           // 0x0078(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      IdealAttackRangeKey;                                       // 0x00A0(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      StartAttackRangeKey;                                       // 0x00C8(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      InIdealRangeKey;                                           // 0x00F0(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      InAttackRangeKey;                                          // 0x0118(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      TooCloseKey;                                               // 0x0140(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1145);
		return ptr;
	}



};

// Class Killstreak.KSBTTaskNode_SetCrowdFollowing
// 0x0008 (FullSize[0x0078] - InheritedSize[0x0070])
class UKSBTTaskNode_SetCrowdFollowing : public UBTTaskNode
{
public:
	bool                                               bEnable;                                                   // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9JQK[0x7];                                     // 0x0071(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1146);
		return ptr;
	}



};

// Class Killstreak.KSBuild
// 0x0128 (FullSize[0x0388] - InheritedSize[0x0260])
class AKSBuild : public AKSLagCompensatedActor
{
public:
	unsigned char                                      UnknownData_52QX[0x30];                                    // 0x0260(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PointDamageMultiplier;                                     // 0x0290(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RadialDamageMultiplier;                                    // 0x0294(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxHealth;                                                 // 0x0298(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Health;                                                    // 0x029C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SelfDestructDelay;                                         // 0x02A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              KillDestructionDelay;                                      // 0x02A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DKWH[0x10];                                    // 0x02A8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBoxComponent*                               Box;                                                       // 0x02B8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkinnableMergedMeshComponent*               MeshComponent;                                             // 0x02C0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMultiSkinObject*                            SkinObject;                                                // 0x02C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               ApparelObjectsToListenTo;                                  // 0x02D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               FullKeywordList;                                           // 0x02E0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSNavModifierComponent*                     KSNavModifierComponent;                                    // 0x02F0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnBuildComponentDestroyedDel;                              // 0x02F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                 // 0x0308(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AKSCharacter*>                        Interactors;                                               // 0x0310(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnBuildReclaim;                                            // 0x0320(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                               bCanReclaim;                                               // 0x0330(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_W84G[0x3];                                     // 0x0331(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     RelativeInteractionPoint;                                  // 0x0334(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReclaimTime;                                               // 0x0340(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRestoreWeaponOnReclaim;                                   // 0x0344(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0K3A[0x3];                                     // 0x0345(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponAsset_Build*                        WeaponToRestore;                                           // 0x0348(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       ReclaimItemName;                                           // 0x0350(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UClass*                                      ReclaimInteractionType;                                    // 0x0368(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSItemStimuliSourceComponent*               StimuliSourceComponent;                                    // 0x0370(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6CZY[0x8];                                     // 0x0378(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                OriginalOwnerId;                                           // 0x0380(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_17RT[0x4];                                     // 0x0384(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1147);
		return ptr;
	}



	void YieldToRealTimerExpired();
	void SelfDestructAfterDelay();
	void SelfDestruct();
	void OnSelfDestructDelayStart();
	void OnSelfDestruct();
	void OnRep_Health();
	void OnRadialDamageTaken(class UDamageType* DamageType);
	void OnPointDamageTaken(class UDamageType* DamageType, class UPrimitiveComponent* PrimitiveComponent, const struct FName& HitBone);
	void OnKilled();
	void OnHealthChanged();
	void OnBuildComponentDestroyed(class UPrimitiveComponent* PrimitiveComponent);
	void KillDestructionTimerComplete();
	class UKSWeaponAsset* GetWeaponAsset();
	float GetRealActorTakeoverDelay();
	class AKSPlayerState* GetPlayerStateOwner();
	void GetOutlineableMeshes(TArray<class UPrimitiveComponent*>* OutMeshes);
	class AKSCharacter* GetCharacterOwner();
	class UKSWeaponAsset_Build* GetBuildWeaponAsset();
	void DestroyBuildComponent(class UPrimitiveComponent* PrimitiveComponent);
	float ComponentTakeDamage(class UPrimitiveComponent* PrimitiveComponent, float DamageAmount);
	void BroadcastSelfDestructStart();
	void BroadcastSelfDestruct();
	void BroadcastDestroyBuildComponent(class UPrimitiveComponent* PrimitiveComponent);
};

// Class Killstreak.KSBuild_APS
// 0x0038 (FullSize[0x03C0] - InheritedSize[0x0388])
class AKSBuild_APS : public AKSBuild
{
public:
	unsigned char                                      UnknownData_15O1[0x8];                                     // 0x0388(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USphereComponent*                            DetectionSphere;                                           // 0x0390(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DetectionSphereRadius;                                     // 0x0398(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxProjectilesDestroyed;                                   // 0x039C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeToActivate;                                            // 0x03A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_27C3[0x4];                                     // 0x03A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AKSProjectile*>                       MarkedProjectiles;                                         // 0x03A8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SGRZ[0x4];                                     // 0x03B8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsActive;                                                 // 0x03BC(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MYUO[0x3];                                     // 0x03BD(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1148);
		return ptr;
	}



	void OnRep_Active();
	void OnProjectileIntercepted(const struct FVector& InterceptedProjectileLocation);
	void OnMarkedProjectileDestroyed(class AActor* InActor);
	void OnDeactivated();
	void OnActorOverlapBegin(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnActivated();
	void BroadcastProjectileIntercept(class AKSProjectile* DestroyedProjectile, const struct FVector& BackupLocation);
};

// Class Killstreak.KSBuild_Shop
// 0x0010 (FullSize[0x0398] - InheritedSize[0x0388])
class AKSBuild_Shop : public AKSBuild
{
public:
	TArray<class UKSInteractionManager*>               ShopperManagers;                                           // 0x0388(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1149);
		return ptr;
	}



	void HandleShopClosed(class AKSPlayerShop* PlayerShop);
	void HandleShopAvailabilityChanged(class AKSPlayerShop* PlayerShop);
};

// Class Killstreak.KSBuildPreview
// 0x0048 (FullSize[0x0268] - InheritedSize[0x0220])
class AKSBuildPreview : public AActor
{
public:
	class UMaterialInterface*                          ValidBuildMaterial;                                        // 0x0220(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                          InvalidBuildMaterial;                                      // 0x0228(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                               Box;                                                       // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkinnableMergedMeshComponent*               MeshComponent;                                             // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMultiSkinObject*                            SkinObject;                                                // 0x0240(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               ApparelObjectsToListenTo;                                  // 0x0248(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               FullKeywordList;                                           // 0x0258(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1150);
		return ptr;
	}



	void UpdateCanBeBuilt(bool bInCanBeBuilt);
	class AKSPlayerState* GetPlayerStateOwner();
	void GetMeshesToIgnore(TArray<class UMeshComponent*>* MeshesToIgnore);
	class AKSCharacter* GetCharacterOwner();
};

// Class Killstreak.KSCash
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UKSCash : public UKSLootItem
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1151);
		return ptr;
	}



};

// Class Killstreak.KSCashDrop
// 0x0000 (FullSize[0x03A0] - InheritedSize[0x03A0])
class AKSCashDrop : public AKSLootDrop
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1152);
		return ptr;
	}



};

// Class Killstreak.KSLootSiteBase
// 0x0128 (FullSize[0x0348] - InheritedSize[0x0220])
class AKSLootSiteBase : public AActor
{
public:
	unsigned char                                      UnknownData_4YPG[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnLootSiteSpawned;                                         // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLootSiteStateChanged;                                    // 0x0240(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	Killstreak_ELootSiteRarity                         RarityTag;                                                 // 0x0250(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AWMS[0x7];                                     // 0x0251(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnLootSiteRarityChanged;                                   // 0x0258(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      SiteGroupNumber;                                           // 0x0268(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QR88[0x7];                                     // 0x0269(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<Killstreak_ELootSiteRarity, class UDataTable*> RarityLootSiteTableMap;                                    // 0x0270(0x0050) (Edit, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RREM[0x10];                                    // 0x02C0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AKSItemDrop>                  SpawnedDrop;                                               // 0x02D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UObject*>                             ObjectsToKeepAround;                                       // 0x02D8(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpawnRate;                                                 // 0x02E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpawnDelay;                                                // 0x02EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RespawnDelay;                                              // 0x02F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAutoRespawn;                                              // 0x02F4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDestroySiteOnLooted;                                      // 0x02F5(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDisableWeaponCosmeticZOffset;                             // 0x02F6(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JRM0[0x1];                                     // 0x02F7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AKSLootSiteBase*>                     ChildSpawners;                                             // 0x02F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SurfaceCheckHeight;                                        // 0x0308(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUsePrecisePlacement;                                      // 0x030C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLootSiteState                              LootSiteState;                                             // 0x030D(0x0002) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                               CosmeticVisible;                                           // 0x030F(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                                SpawnDelayTimer;                                           // 0x0310(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     NavigationLocation;                                        // 0x0318(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XHS8[0xC];                                     // 0x0324(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSItemStimuliSourceComponent*               StimuliSourceComponent;                                    // 0x0330(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                              ActorsSeenBy;                                              // 0x0338(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1308);
		return ptr;
	}



	void STATIC_WeightedSiteShuffle(TArray<class AKSLootSiteBase*>* SiteArray);
	void SpawnSpecificLoot(const struct FLootSiteDropInfo& Loot);
	void SpawnSpecificItemDrop(class UKSItem* ItemAsset);
	void SpawnItemDropInternal();
	void SpawnItemDrop(bool UseDelay);
	void SpawnedDropDestroyed(class AActor* DestroyedActor);
	bool SetSiteActive(bool Active);
	void SetRarity(Killstreak_ELootSiteRarity NewRarity);
	void Reset();
	void OnRep_RarityTag();
	void OnRep_LootSiteState();
	void OnRep_CosmeticVisible();
	void OnCosmeticVisibilityChanged(bool Visible);
	bool IsLooted();
	bool IsActive();
	struct FLootSiteState GetLootSiteState();
	struct FVector FindBestDropLocation(class AKSItemDrop* InDrop);
	struct FLootSiteDropInfo ChoostLoot();
	struct FLootSiteDropInfo STATIC_ChooseRandomLoot(TArray<struct FLootSiteDropInfo> InLoot, class UObject* WorldContextObject);
	class UKSItem* ChooseItemAsset();
};

// Class Killstreak.KSInteractableLootSite
// 0x0090 (FullSize[0x03D8] - InheritedSize[0x0348])
class AKSInteractableLootSite : public AKSLootSiteBase
{
public:
	unsigned char                                      UnknownData_LQ9E[0x8];                                     // 0x0348(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                 // 0x0350(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       LootBoxName;                                               // 0x0358(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                               bChoosesBeforeInteraction;                                 // 0x0370(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPressAndHoldPrompt;                                       // 0x0371(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLooted;                                                   // 0x0372(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4MOP[0x5];                                     // 0x0373(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FLootSiteDropInfo                           ChosenLoot;                                                // 0x0378(0x0030) (Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<class AKSCharacter*>                        Looters;                                                   // 0x03A8(0x0010) (Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKSInteractionManager*>               LooterManagers;                                            // 0x03B8(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FLootSiteDropInfo>                   PossibleLoot;                                              // 0x03C8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1309);
		return ptr;
	}



	void PickLoot();
	void OnSuccessfulInteraction();
	void OnRep_ChosenLoot();
	void OnRep_bLooted();
	float GetInteractionTime(class AKSCharacter* InteractingChar);
	void ClientBroadcastSpawned(class AKSPlayerController* Controller, bool Removed);
};

// Class Killstreak.KSHoldOnlyStart
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UKSHoldOnlyStart : public UKSInteractionState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1310);
		return ptr;
	}



};

// Class Killstreak.KSHoldOrTapNoRelease
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UKSHoldOrTapNoRelease : public UKSHoldOrTapStart
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1311);
		return ptr;
	}



};

// Class Killstreak.KSTimerNoRelease
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UKSTimerNoRelease : public UKSWaitingForTimer
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1312);
		return ptr;
	}



};

// Class Killstreak.KSWaitingForInterrupt
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UKSWaitingForInterrupt : public UKSInteractionState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1313);
		return ptr;
	}



};

// Class Killstreak.KSMultiDownsTracker
// 0x0030 (FullSize[0x00D0] - InheritedSize[0x00A0])
class UKSMultiDownsTracker : public UKSAccoladeTracker
{
public:
	unsigned char                                      UnknownData_WD5L[0x8];                                     // 0x00A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FAccoladeMultiDownTracker>           MultiDownAccolades;                                        // 0x00A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAccoladePlayerTrackers>             TrackPlayers;                                              // 0x00B8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxTrackerTimer;                                           // 0x00C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GVH5[0x4];                                     // 0x00CC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1431);
		return ptr;
	}



	void RemoveTrackerByPlayerState(class AKSPlayerState* CurrentPlayerState);
	void RemoveTracker(const struct FAccoladePlayerTrackers& CurrentTrackPlayer);
	void HandleTrackerAccolade(const struct FAccoladePlayerTrackers& CurrentTrackPlayer);
	bool GetTrackPlayer(int PlayerId, struct FAccoladePlayerTrackers* OutTracker, int* TrackerIndex);
};

// Class Killstreak.KSMultiElimTracker
// 0x0020 (FullSize[0x00C0] - InheritedSize[0x00A0])
class UKSMultiElimTracker : public UKSAccoladeTracker
{
public:
	TArray<struct FAccoladeMultiElimTracker>           MultiElimAccolades;                                        // 0x00A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAccoladePlayerTrackers>             TrackPlayers;                                              // 0x00B0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1432);
		return ptr;
	}



	void RemoveTrackerByPlayerState(class AKSPlayerState* CurrentPlayerState);
	void HandleTrackerAccolade(const struct FAccoladePlayerTrackers& CurrentTrackPlayer);
	bool GetTrackPlayer(int PlayerId, struct FAccoladePlayerTrackers* OutTracker, int* TrackerIndex);
};

// Class Killstreak.KSBTTask_SelectDropLocation
// 0x0088 (FullSize[0x00F8] - InheritedSize[0x0070])
class UKSBTTask_SelectDropLocation : public UBTTaskNode
{
public:
	bool                                               InitializeDropLocation;                                    // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               UseObjectiveProximity;                                     // 0x0071(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YHFS[0x2];                                     // 0x0072(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MaxBotsAtDropLocation;                                     // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               InitializeWayPointSet;                                     // 0x0078(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_10IS[0x7];                                     // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FBlackboardKeySelector                      DropLocationKey;                                           // 0x0080(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      DropLocationVectorKey;                                     // 0x00A8(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      FlightLocationVectorKey;                                   // 0x00D0(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1122);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_SelectEvadePoint
// 0x01B0 (FullSize[0x0220] - InheritedSize[0x0070])
class UKSBTTask_SelectEvadePoint : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      EvadePointKey;                                             // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              SensesToUse;                                               // 0x0098(0x0010) (Edit, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKSPerceptionFilter                         PerceptionFilter;                                          // 0x00A8(0x0170) (Edit, Protected, NativeAccessSpecifierProtected)
	float                                              Distance;                                                  // 0x0218(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_C8S2[0x4];                                     // 0x021C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1123);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_SelectIngressPoint
// 0x0030 (FullSize[0x00A0] - InheritedSize[0x0070])
class UKSBTTask_SelectIngressPoint : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      IngressPointActorKey;                                      // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	bool                                               bShouldLeave;                                              // 0x0098(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D9ZX[0x7];                                     // 0x0099(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1124);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_SelectObjective
// 0x0078 (FullSize[0x00E8] - InheritedSize[0x0070])
class UKSBTTask_SelectObjective : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      ObjectiveTargetKey;                                        // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      ObjectiveTypeKey;                                          // 0x0098(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	TArray<class UKSBTObjective*>                      BlackboardKeyObjectives;                                   // 0x00C0(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1KJF[0x8];                                     // 0x00D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSBTObjective*                              CurrentHighestPriorityObjective;                           // 0x00D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                      CurrentHighestPriorityActor;                               // 0x00E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1125);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_SetBetweenBlackboards
// 0x00A0 (FullSize[0x0110] - InheritedSize[0x0070])
class UKSBTTask_SetBetweenBlackboards : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      SourceBlackboardActor;                                     // 0x0070(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      SourceKey;                                                 // 0x0098(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      TargetBlackboardActor;                                     // 0x00C0(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      TargetKey;                                                 // 0x00E8(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1130);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_SetBoolOnBlackboard
// 0x0008 (FullSize[0x00A0] - InheritedSize[0x0098])
class UKSBTTask_SetBoolOnBlackboard : public UBTTask_BlackboardBase
{
public:
	bool                                               BoolValue;                                                 // 0x0098(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9RF3[0x7];                                     // 0x0099(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1131);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_SetFloatOnBlackboard
// 0x0008 (FullSize[0x00A0] - InheritedSize[0x0098])
class UKSBTTask_SetFloatOnBlackboard : public UBTTask_BlackboardBase
{
public:
	float                                              FloatValue;                                                // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0WKT[0x4];                                     // 0x009C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1132);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_SetObjectiveOnBlackboard
// 0x0008 (FullSize[0x00A0] - InheritedSize[0x0098])
class UKSBTTask_SetObjectiveOnBlackboard : public UBTTask_BlackboardBase
{
public:
	class UKSBTObjective*                              Objective;                                                 // 0x0098(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1133);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_SetReviveTarget
// 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
class UKSBTTask_SetReviveTarget : public UBTTask_BlackboardBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1134);
		return ptr;
	}



};

// Class Killstreak.KSBTTask_SetTimer
// 0x0008 (FullSize[0x00A0] - InheritedSize[0x0098])
class UKSBTTask_SetTimer : public UBTTask_BlackboardBase
{
public:
	float                                              Duration;                                                  // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RandomDeviation;                                           // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1135);
		return ptr;
	}



};

// Class Killstreak.KSCheatComponent
// 0x0048 (FullSize[0x00F8] - InheritedSize[0x00B0])
class UKSCheatComponent : public UPGame_CheatComponent
{
public:
	float                                              WeaponStatDisplayTime;                                     // 0x00B0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DifficultyLevelsDisplayTime;                               // 0x00B4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      r_bNoCooldown : 1;                                         // 0x00B8(0x0001) BIT_FIELD (Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      r_bNoEnergyUsage : 1;                                      // 0x00B8(0x0001) BIT_FIELD (Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      r_bNoDamageTaken : 1;                                      // 0x00B8(0x0001) BIT_FIELD (Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      r_CanViewHealth : 1;                                       // 0x00B8(0x0001) BIT_FIELD (Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      r_CanViewLocation : 1;                                     // 0x00B8(0x0001) BIT_FIELD (Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      r_HudVisible : 1;                                          // 0x00B8(0x0001) BIT_FIELD (Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8UQP[0x7];                                     // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             CachedWeaponStats;                                         // 0x00C0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              WeaponDisplayStartTime;                                    // 0x00D0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UCUN[0x4];                                     // 0x00D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             CachedDifficultyLevels;                                    // 0x00D8(0x0010) (Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              DifficultyLevelsDisplayStartTime;                          // 0x00E8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                                   BaseDrawPosition;                                          // 0x00EC(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XIND[0x4];                                     // 0x00F4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1167);
		return ptr;
	}



	void WarpZ(float Z);
	void WarpToSpawn();
	void Warp(float X, float Y, float Z);
	void ToggleWeaponDebug();
	void ToggleHud();
	void ToggleGamepadAimDebug();
	void ToggleBotsPaused();
	void ToggleAimAssistStrengthDebug();
	void TestPreviewActor(int PositionIndex, const struct FString& JobName, const struct FString& SkinName);
	void TakeDamage(const struct FString& WeaponName, float Amount, bool Head);
	void Suicide();
	void SpendResource(const struct FString& ResourceName, float Amount);
	void Spectate();
	void Spawn(const struct FString& BotName, int TeamNum, int Count, float Offset);
	void ShowWeaponStats();
	void ShowSpawnDebug(bool bShow);
	void ShowMMR();
	void ShowLocation(bool Visible);
	void ShowKillCamWorld(float Duration);
	void ShowHealth(bool Visible);
	void ShowDifficulties();
	void ShowBots(bool Show);
	void SetTimeLeft(float Seconds);
	void SetTeam(int Team);
	void SetResource(const struct FString& ResourceName, float Amount);
	void SetNumDebugCinematicRogues(int NewNumDebugCinematicRogues);
	void SetGroundSpeed(float Speed);
	void SetDifficulty(int TeamNumber, int DifficultyIndex);
	void SetBotsPaused(bool bShouldPause);
	void ServerWarpZ(float Z);
	void ServerWarpToSpawn();
	void ServerWarp(float X, float Y, float Z);
	void ServerToggleHud();
	void ServerTakeDamage(const struct FString& WeaponName, float Amount, bool Head);
	void ServerSuicide();
	void ServerSpendResource(const struct FString& ResourceName, float Amount);
	void ServerSpectate();
	void ServerSpawn(const struct FString& BotName, int TeamNum, int Count, float Offset);
	void ServerShowSpawnDebug(bool bShow);
	void ServerShowMMR();
	void ServerShowLocation(bool Visible);
	void ServerShowHealth(bool Visible);
	void ServerShowDifficulties();
	void ServerShowBots(bool Show);
	void ServerSetTimeLeft(float Seconds);
	void ServerSetTeam(int Team);
	void ServerSetResource(const struct FString& ResourceName, float Amount);
	void ServerSetGroundSpeed(float Speed);
	void ServerSetDifficulty(int TeamNumber, int DifficultyIndex);
	void ServerSetBotsPaused(bool bShouldPause, bool bShouldToggle);
	void ServerRemoveFromLoadout(const struct FString& ItemName);
	void ServerRemoveAllMods();
	void ServerQuickEndGame(class AKSTeamState* WinningTeam);
	void ServerProjectileRepVis(bool bEnable, float Lifetime);
	void ServerLookForJob();
	void ServerInvisMe(bool Invis);
	void ServerInstantReplay(float TimeToReplay, float Duration);
	void ServerInfiniteAmmo(bool Infinite);
	void ServerGrantLTI(int LootTableId, int Quantity);
	void ServerGod();
	void ServerGiveResource(const struct FString& ResourceName, float Amount);
	void ServerGiveKSPoints(float Amount);
	void ServerGiveAsync(const struct FString& ItemName);
	void ServerGiveAllKSPoints(float Amount);
	void ServerGive(const struct FString& ItemName);
	void ServerFillResource(const struct FString& ResourceName);
	void ServerFillAllResources();
	void ServerEnableTeamSurrender(class AKSTeamState* Team);
	void ServerEnableKillCam();
	void ServerDrop(const struct FString& ItemName);
	void ServerDisableAFKTimer();
	void ServerDepleteResource(const struct FString& ResourceName);
	void ServerDepleteAllResources();
	void ServerCharReset();
	void ServerChangeCash(int CashDelta);
	void ServerBotGodMode(bool Enable);
	void ServerAttach(const struct FString& AttachmentName);
	void ServerAdjustDifficulty(int Amount);
	void ServerAddToLoadout(const struct FString& ItemName);
	void ServerAddAttachmentToLoadout(const struct FString& ItemName, const struct FString& AttachmentName);
	void RemoveFromLoadout(const struct FString& ItemName);
	void RemoveAllMods();
	void QuickEndGame(bool bWin);
	void QEG(bool bWin);
	void ProjectileReplicationVisualization(bool bEnable, float Lifetime);
	void OnRep_HudVisible();
	void OnRep_CanViewLocation();
	void OnRep_CanViewDebugHealth();
	void NextPerfCaptureCamera();
	void LookForJob();
	void InvisMe(bool Invis);
	void InstantReplay(float TimeToReplay, float Duration);
	void InfiniteAmmo(bool Infinite);
	void GrantLTI(int LootTableId, int Quantity);
	void God();
	void GiveSkin(const struct FString& SkinName);
	void GiveResource(const struct FString& ResourceName, float Amount);
	void GiveKSPoints(float Amount);
	void GiveAsync(const struct FString& ItemName);
	void GiveAllKSPoints(float Amount);
	void Give(const struct FString& ItemName);
	void FillResource(const struct FString& ResourceName);
	void FillAllResources();
	void EnableTeamSurrender();
	void EnableSound();
	void EnableKillCam();
	void Drop(const struct FString& ItemName);
	void DownSelf();
	void DisableSound();
	void DisableAFKTimer();
	void DevHackRequestLateJoinForPIE();
	void DepleteResource(const struct FString& ResourceName);
	void DepleteAllResources();
	void DebugThreatLevels(bool Show);
	void Communicate(const struct FString& CommunicationName);
	void ClientShowMMR(float MMR);
	void CharReset();
	void ChangeCash(int CashDelta);
	void BotGodMode(bool Enable);
	void Attach(const struct FString& AttachmentName);
	void AdjustDifficulty(int Amount);
	void AddToLoadout(const struct FString& ItemName);
	void AddAttachmentToLoadout(const struct FString& ItemName, const struct FString& AttachmentName);
};

// Class Killstreak.KSCheatComponent_Lobby
// 0x0000 (FullSize[0x00B0] - InheritedSize[0x00B0])
class UKSCheatComponent_Lobby : public UPGame_CheatComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1168);
		return ptr;
	}



	void TestPreviewActor(int PositionIndex, const struct FString& JobName, const struct FString& SkinName);
	void TestEmote(int PositionIndex, const struct FString& EmoteName);
};

// Class Killstreak.KSJobSelectPreviewActor
// 0x0208 (FullSize[0x0428] - InheritedSize[0x0220])
class AKSJobSelectPreviewActor : public AInfo
{
public:
	TWeakObjectPtr<class UKSPersistentPlayerData>      OwningPersistantPlayerData;                                // 0x0220(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      LobbyCharacterClass;                                       // 0x0228(0x0008) (Edit, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSLobbyCharacter*                           ChildLobbyCharacter;                                       // 0x0230(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ModelViewerDelay;                                          // 0x0238(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EJobSelectionState                      JobSelectionState;                                         // 0x023C(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_I7FR[0x2B];                                    // 0x023D(0x002B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               SkinPreloadBundles;                                        // 0x0268(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                PositionIndex;                                             // 0x0278(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bOffsetCharacterByCapsuleHeight;                           // 0x027C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bKeepActiveJobVisibleWhileLoading;                         // 0x027D(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1ZX3[0x2];                                     // 0x027E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             BaseComponent;                                             // 0x0280(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                                JobModelViewerTimer;                                       // 0x0288(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSJobItem*                                  ActiveJobItem;                                             // 0x0290(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSSkinBundle*                               ActiveSkinBundle;                                          // 0x0298(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UKSItem*, class UKSItem*>               ActiveFullSkinMap;                                         // 0x02A0(0x0050) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      QueuedJob[0x28];                                           // 0x02F0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	Killstreak_EKSJobSelectPreviewLoadState            CachedState;                                               // 0x0318(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bHideChildCharacter;                                       // 0x0319(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZZ0G[0x1E];                                    // 0x031A(0x001E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnJobPreviewStateChangedDel;                               // 0x0338(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnPersistentPlayerDataSetDel;                              // 0x0348(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AEBW[0x18];                                    // 0x0358(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSJobItem*                                  JobFromLoadout;                                            // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UKSItem*, class UKSItem*>               PendingFullSkinMap;                                        // 0x0378(0x0050) (Transient, NativeAccessSpecifierPrivate)
	TMap<class UKSItem*, struct FPreviewActorPropSkinInfo> PropsAndSkins;                                             // 0x03C8(0x0050) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TPV8[0x8];                                     // 0x0418(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bHasTriggeredVO;                                           // 0x0420(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_I2TW[0x7];                                     // 0x0421(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1169);
		return ptr;
	}



	void SetPersistantPlayerData(class UKSPersistentPlayerData* PersistantPlayerData);
	void SetModelViewerDelay(float Timer);
	void SetJobToQueuedId();
	void SetJobAndSkin();
	void SetJob();
	void SetHoveredJob(int JobId, int SkinId, Killstreak_EJobSelectionState InJobSelectionState);
	void SetCharacterHidden(bool bShouldHide);
	void PreLobbyCharacterDestroy();
	void PostLobbyCharacterSpawned();
	bool IsLockedIn();
	bool HasQueuedJob();
	class UKSSkinBundle* GetSkinBundle();
	Killstreak_EKSJobSelectPreviewLoadState GetPreviewLoadState();
	int GetPositionIndex();
	class UKSPersistentPlayerData* GetPersistantPlayerData();
	class UClass* GetLobbyCharacterClassToUse(class UKSJobItem* JobToUse, class UKSSkinBundle* SkinToUse);
	class AKSLobbyCharacter* GetLobbyCharacter();
	class UKSJobItem* GetJobItem();
	bool GetCharacterShouldBeHidden();
	struct FText GetCharacterName();
	struct FString GetCharacterFriendlySearchName();
	void CheatSetJobAndSkin();
	void CheatClearJob();
	void CallShowLobbyCharacterFromEnablingCinematic(const struct FString& CinematicSubLevelName);
	void CallHideLobbyCharacterFromDisablingCinematic(const struct FString& CinematicSubLevelName);
	void BlueprintStateChanged(Killstreak_EKSJobSelectPreviewLoadState PreviousState);
};

// Class Killstreak.KSCinematicCharacterManager
// 0x0010 (FullSize[0x0438] - InheritedSize[0x0428])
class AKSCinematicCharacterManager : public AKSJobSelectPreviewActor
{
public:
	class AKSCinematicSequenceManager*                 CinematicSequenceManager;                                  // 0x0428(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSCinematicCharacterType               CinematicCharacterType;                                    // 0x0430(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRequireCharacterToBeVisibleToCountAsLoaded;               // 0x0431(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FEMV[0x6];                                     // 0x0432(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1170);
		return ptr;
	}



	bool VerifyCinematicCharacterLoaded();
	void OnNewCharacterTimeDilationSet(float NewDilation);
	void OnCharacterSpawned(class AKSCharacter* SpawnedCharacter);
	class AKSCharacter* GetCinematicCharacter();
};

// Class Killstreak.KSCharacterSocketComponent
// 0x0018 (FullSize[0x0220] - InheritedSize[0x0208])
class UKSCharacterSocketComponent : public USceneComponent
{
public:
	struct FName                                       SocketLookupName;                                          // 0x0208(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EKSSocketOffsetType                     OffsetType;                                                // 0x0210(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EKSSocketCrouchHandling                 CrouchingHandlingType;                                     // 0x0211(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XEII[0x2];                                     // 0x0212(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     AdditiveCrouchOffset;                                      // 0x0214(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1165);
		return ptr;
	}



};

// Class Killstreak.KSChargeRuleComponent
// 0x0030 (FullSize[0x00E0] - InheritedSize[0x00B0])
class UKSChargeRuleComponent : public UKSGameRuleComponent
{
public:
	unsigned char                                      UnknownData_PVQT[0x18];                                    // 0x00B0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PassiveChargePerSecond;                                    // 0x00C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ChargePerDown;                                             // 0x00CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ChargePerElimination;                                      // 0x00D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ChargePerAssist;                                           // 0x00D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ChargePerRevive;                                           // 0x00D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1KS7[0x4];                                     // 0x00DC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1166);
		return ptr;
	}



};

// Class Killstreak.KSGameUserSettingsDefault
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UKSGameUserSettingsDefault : public UObject
{
public:
	TArray<struct FSettingConfigPair>                  SettingsConfig;                                            // 0x0028(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1283);
		return ptr;
	}



};

// Class Killstreak.KSGameUserSettings
// 0x0350 (FullSize[0x0470] - InheritedSize[0x0120])
class UKSGameUserSettings : public UGameUserSettings
{
public:
	unsigned char                                      UnknownData_AQB1[0x38];                                    // 0x0120(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SettingsVersionMajor;                                      // 0x0158(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                SettingsVersionMinor;                                      // 0x015C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSGamepadIcons                         GamepadIconSet;                                            // 0x0160(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1CED[0x3];                                     // 0x0161(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FIntPoint                                   DefaultScreenResolution;                                   // 0x0164(0x0008) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FIntPoint                                   SavedScreenResolution;                                     // 0x016C(0x0008) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PBE5[0x64];                                    // 0x0174(0x0064) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     SavedDisplayLanguage;                                      // 0x01D8(0x0010) (ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                LastJoinedQueuePrimaryId;                                  // 0x01E8(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                SavedSelectedRegion;                                       // 0x01EC(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                LastWhatsNewVersion;                                       // 0x01F0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RWY8[0x4];                                     // 0x01F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<int>                                        SavedTransientAcquisitionIds;                              // 0x01F8(0x0010) (ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      SavedViewedNewsPanelIds[0x50];                             // 0x0208(0x0050) UNKNOWN PROPERTY: SetProperty
	int                                                SavedChallengeVersionId;                                   // 0x0258(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_02H6[0x4];                                     // 0x025C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      SavedViewedChallengeIds[0x50];                             // 0x025C(0x0050) UNKNOWN PROPERTY: SetProperty
	TMap<struct FName, struct FString>                 SavedSettingsConfig;                                       // 0x02B0(0x0050) (Config, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      SavedLocalActions[0x50];                                   // 0x0300(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      UnknownData_RI0K[0xF0];                                    // 0x0350(0x00F0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnGamepadIconSetSettingsApplied;                           // 0x0440(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLocalSettingSaved;                                       // 0x0450(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSettingApplied;                                          // 0x0460(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1285);
		return ptr;
	}



	void SaveLocalAction(const struct FName& Name);
	bool IsLocalActionSaved(const struct FName& Name);
	bool GetVoiceChatEnabled();
	bool GetTextChatEnabled();
	float GetSafeFrameScale();
	bool GetQuipsEnabled();
	Killstreak_EMuteMode GetMuteMode();
	Killstreak_ECrosshairSize GetCrosshairSize();
	bool GetCommunicationsEnabled();
	SlateCore_EColorVisionDeficiency GetColorCorrection();
};

// Class Killstreak.KSGameViewportClient
// 0x0040 (FullSize[0x0388] - InheritedSize[0x0348])
class UKSGameViewportClient : public UPUMG_GameViewportClient
{
public:
	unsigned char                                      UnknownData_UKQS[0x30];                                    // 0x0348(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  FadeTexture;                                               // 0x0378(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N0M6[0x8];                                     // 0x0380(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1286);
		return ptr;
	}



};

// Class Killstreak.KSGeneralProgressionManager
// 0x0000 (FullSize[0x0210] - InheritedSize[0x0210])
class UKSGeneralProgressionManager : public UKSActivityManagerBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1287);
		return ptr;
	}



};

// Class Killstreak.KSGlobalShotListener
// 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
class AKSGlobalShotListener : public AActor
{
public:
	struct FScriptMulticastDelegate                    ShotNotifyDelegate;                                        // 0x0220(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1288);
		return ptr;
	}



	void ShotNotify(const struct FKSGlobalShotInfo& ShotInfo);
};

// Class Killstreak.KSGyroControlledPawn
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSGyroControlledPawn : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1289);
		return ptr;
	}



};

// Class Killstreak.KSHairSkeletalMeshComponent
// 0x0008 (FullSize[0x0E30] - InheritedSize[0x0E28])
class UKSHairSkeletalMeshComponent : public UKSCharacterSkeletalMeshComponent
{
public:
	struct FName                                       SimulationRootBoneName;                                    // 0x0E28(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1290);
		return ptr;
	}



};

// Class Killstreak.KSHeadShotTracker
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UKSHeadShotTracker : public UKSAccoladeTracker
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1291);
		return ptr;
	}



	void HandleTrackerAccolade(class AKSPlayerState* PlayerState);
};

// Class Killstreak.KSPlayerHealthMeterBase
// 0x0000 (FullSize[0x0238] - InheritedSize[0x0238])
class UKSPlayerHealthMeterBase : public UUserWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1292);
		return ptr;
	}



	void SetHealthMeterState(const struct FPlayerHealthMeterState& HealthMeterState);
	int GetMeterLargestValue(const struct FPlayerHealthMeterState& HealthMeterState);
};

// Class Killstreak.KSHeatSourceComponent
// 0x0050 (FullSize[0x0100] - InheritedSize[0x00B0])
class UKSHeatSourceComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnTemperatureChanged;                                      // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bSkipCosmeticIfOwnerIsLocallyViewed;                       // 0x00C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bOnlySkipCosmeticForOnAndViewedState;                      // 0x00C1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S0A4[0x2];                                     // 0x00C2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Temperature;                                               // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TemperatureScalarModifier;                                 // 0x00C8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDisableTickWhenTemperatureTransitionCompletes;            // 0x00CC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OROF[0x3];                                     // 0x00CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TransitionTargetTemp;                                      // 0x00D0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TransitionRate;                                            // 0x00D4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EModViewModeState                       LastKnownViewModeState;                                    // 0x00D8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_F1W3[0x7];                                     // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UPrimitiveComponent*>                 WithoutHeatVisibilityBlockers;                             // 0x00E0(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPrimitiveComponent*>                 HeatOnlyVisibilityBlockers;                                // 0x00F0(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1293);
		return ptr;
	}



	void UnregisterWithoutHeatVisibilityBlocker(class UPrimitiveComponent* Blocker);
	void UnregisterHeatOnlyVisibilityBlocker(class UPrimitiveComponent* Blocker);
	void TransitionToTemperature(float NewTemperature, float RatePerSecond);
	void SetTemperatureScalarModifier(float NewTemperatureModifier);
	void SetTemperature(float NewTemperature);
	void RegisterWithoutHeatVisibilityBlocker(class UPrimitiveComponent* Blocker);
	void RegisterHeatOnlyVisibilityBlocker(class UPrimitiveComponent* Blocker);
	void OnThermalVisionStateChanged(Killstreak_EModViewModeState NewState);
	void OnOwnerInfoUpdateNotify();
	void NotifyThermalVisionStateChanged(Killstreak_EModViewModeState NewState);
	float GetUnmodifiedTemperature();
	float GetTemperature();
};

// Class Killstreak.KSHUDAnnouncementComponent
// 0x0038 (FullSize[0x00E8] - InheritedSize[0x00B0])
class UKSHUDAnnouncementComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnEndOfMatch;                                              // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class AKSPlayerController*                         OwningPlayer;                                              // 0x00C0(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnAnnouncement;                                            // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, BlueprintCallable, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnResultAnnouncement;                                      // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, BlueprintCallable, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1294);
		return ptr;
	}



	void OnObjectiveSpawned();
	void OnObjectiveReset();
	void OnObjectiveHeld();
	void OnObjectiveExploded();
	void OnObjectiveDropped();
	void OnObjectiveDisarming();
	void OnObjectiveDisarmed();
	void OnObjectiveDeactivated();
	void OnObjectiveContested();
	void OnObjectiveArming();
	void OnObjectiveArmed();
	void OnGameObjectiveStateChanged();
	class AKSPlayerController* GetPlayerController();
};

// Class Killstreak.KSHUDComponent
// 0x0000 (FullSize[0x00B0] - InheritedSize[0x00B0])
class UKSHUDComponent : public UActorComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1295);
		return ptr;
	}



};

// Class Killstreak.KSHUDComponent_GameInfo
// 0x0038 (FullSize[0x00E8] - InheritedSize[0x00B0])
class UKSHUDComponent_GameInfo : public UKSHUDComponent
{
public:
	struct FText                                       Header;                                                    // 0x00B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                               bShowTopHUDBar;                                            // 0x00C8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_F1J8[0x1F];                                    // 0x00C9(0x001F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1296);
		return ptr;
	}



	void SetHeader(const struct FText& InHeader);
	struct FText GetHeader();
};

// Class Killstreak.KSHUDComponent_Objective
// 0x00B0 (FullSize[0x0160] - InheritedSize[0x00B0])
class UKSHUDComponent_Objective : public UKSHUDComponent
{
public:
	unsigned char                                      TopBarObjectiveIcon[0x28];                                 // 0x00B0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      NameplateObjectiveIcon[0x28];                              // 0x00D8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      ScoreIcon[0x28];                                           // 0x0100(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      TicketIcon[0x28];                                          // 0x0128(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               ShowNameplateObjectiveForEnemy;                            // 0x0150(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ForceAlwaysShowNameplateObjective;                         // 0x0151(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShowTopBarObjectiveMarker;                                 // 0x0152(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShowBombIconInTopBar;                                      // 0x0153(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ConnectTopBarMarkerToTimer;                                // 0x0154(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShowInWorldMarkerTimer;                                    // 0x0155(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ObjectiveMarkerProgressFills;                              // 0x0156(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ScoreboardDisplayIntraScoring;                             // 0x0157(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseIntraScoring;                                           // 0x0158(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseTicketSystem;                                           // 0x0159(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_ETopbarPointsBarType                    PointsBarType;                                             // 0x015A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_ETopbarTicketDisplaySide                TicketDisplaySide;                                         // 0x015B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EGameTimerType                          MarkerTimerType;                                           // 0x015C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UVKJ[0x3];                                     // 0x015D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1297);
		return ptr;
	}



};

// Class Killstreak.KSHUDInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSHUDInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1298);
		return ptr;
	}



	void SetSafeFrameScale(float SafeFrameScale);
	void SetHUDVisible(bool bVisible);
	void RemoveDataTables(TArray<struct FDataTableInfo> InTables);
	void RemoveDataTable(class UDataTable* InTable);
	void OnToggleHUD();
	void OnLoadRoute(const struct FName& Route, bool ForceTransition);
	void HandleOpenTextChat(bool BeginChatCommand);
	class UMultiSkinObject* GetSkinObject();
	void GetSettingsCallbackInterface();
	void CreateGameRuleWidget(const struct FKSWidgetInfoParams& WidgetInfoParams);
	void BroadcastWidgetMessage(const struct FName& Message);
	void BindEventToWidgetMessages(const struct FScriptDelegate& Callback);
	void BindEventToDataTableKeywordUpdate(const struct FName& Keyword, const struct FScriptDelegate& Callback);
	void AddSystemMessage(const struct FText& Message);
	void AddDataTables(TArray<struct FDataTableInfo> InTables);
	void AddDataTable(class UDataTable* InTable, int TablePriority);
};

// Class Killstreak.KSHUDRoundAnnouncementComponent
// 0x0018 (FullSize[0x0100] - InheritedSize[0x00E8])
class UKSHUDRoundAnnouncementComponent : public UKSHUDAnnouncementComponent
{
public:
	unsigned char                                      UnknownData_P7OA[0x18];                                    // 0x00E8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1299);
		return ptr;
	}



	void OnWinnerSet(int WinningTeamNumber);
	void OnTeamSidesFlipped();
	void OnRoundStart(const struct FRoundInitState& RoundInitState);
	void OnRoundSetup(const struct FRoundInitState& RoundInitState);
	void OnRoundOver(class AKSGameState* GameState, const struct FRoundResult& RoundResult);
};

// Class Killstreak.KSImpactDecalComponent
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
class UKSImpactDecalComponent : public UPoolableDecalComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1300);
		return ptr;
	}



};

// Class Killstreak.KSImpactEffect
// 0x0098 (FullSize[0x02B8] - InheritedSize[0x0220])
class AKSImpactEffect : public AActor
{
public:
	class UParticleSystem*                             m_DefaultFX;                                               // 0x0220(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitResult                                  m_SurfaceHit;                                              // 0x0228(0x0088) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class USceneComponent*                             m_pScene;                                                  // 0x02B0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1301);
		return ptr;
	}



};

// Class Killstreak.KSIngressPoint
// 0x0018 (FullSize[0x0270] - InheritedSize[0x0258])
class AKSIngressPoint : public AKSMapPoint
{
public:
	class AKSObjectiveBase*                            RelevantObjective;                                         // 0x0258(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                      AssignedBot;                                               // 0x0260(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6DFN[0x8];                                     // 0x0268(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1302);
		return ptr;
	}



	void RelevantObjectiveUpdated(class AKSObjectiveBase* Objective);
	struct FVector GetTargetIngressPoint();
	void AssignedBotDestroyed(class AActor* DestroyedActor);
};

// Class Killstreak.KSInputComponent
// 0x0000 (FullSize[0x0138] - InheritedSize[0x0138])
class UKSInputComponent : public UInputComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1303);
		return ptr;
	}



};

// Class Killstreak.KSInputFunctionLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSInputFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1304);
		return ptr;
	}



	Killstreak_EKSGamepadIcons STATIC_GetGamepadIconSet();
};

// Class Killstreak.KSInspectableMusicManagerActor
// 0x00E0 (FullSize[0x0300] - InheritedSize[0x0220])
class AKSInspectableMusicManagerActor : public AActor
{
public:
	class UAkAudioEvent*                               AkEvent;                                                   // 0x0220(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               NamesForRtpcQueries;                                       // 0x0228(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               NamesForSwitchQueries;                                     // 0x0238(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KRXA[0xA8];                                    // 0x0248(0x00A8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bQueryResultsReady;                                        // 0x02F0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NAYL[0x3];                                     // 0x02F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                StaleCounter;                                              // 0x02F4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_E82O[0x8];                                     // 0x02F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1305);
		return ptr;
	}



	int StartMusic(int CallbackMask, const struct FScriptDelegate& PostEventCallback, Killstreak_EOcclusionType OcclusionType, bool bUseDistance, bool bUseDirection);
	void HandleQueryResults();
	void GetSwitchQueryResultValue(const struct FName& SwitchName, int* Value, bool* bIsValid);
	void GetRtpcQueryResultValue(const struct FName& RtpcName, float* Value, bool* bIsValid);
};

// Class Killstreak.KSInteractable
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSInteractable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1306);
		return ptr;
	}



	bool UsePickupRangeForInteraction();
	bool UseCollisionForInteractionDistance();
	bool ShouldDisplayPrompt(class AKSCharacter* Character);
	bool ShouldDisplayProgress(class AKSCharacter* Character);
	void RemoveInteractionBlocker(const struct FKSInteractionBlocker& InInteractionBlocker);
	bool MustCrouchWhileInteracting(class AKSCharacter* QueriedChar);
	bool IsInteracting(class AKSCharacter* QueriedChar);
	bool IsInInteractRange(class AKSCharacter* QueriedChar);
	bool IsHiddenInteraction();
	bool IsAutomaticInteraction(class AKSCharacter* QueriedChar);
	float GetRelativeHeight(class AKSCharacter* InteractingChar);
	class UClass* GetInteractionType();
	struct FText GetInteractionPromptText(class AKSCharacter* Character);
	struct FText GetInteractionProgressText(class AKSCharacter* Character);
	int GetInteractionPriority();
	struct FName GetInteractionMode(class AKSCharacter* Character);
	void GetInteractionActions(struct FName* OutKBMAction, struct FName* OutGamepadAction);
	Killstreak_EKSInteractableGroup GetInteractableGroup();
	TArray<class AKSCharacter*> GetCurrentInteractors();
	int GetCurrentInteractNum();
	struct FKSInteractableCameraTransition GetCameraTransition();
	struct FVector GetBestInteractionPoint(class AActor* Interactor);
	bool FacesInteractable();
	void ConstructPrompt(class AKSCharacter* Character, struct FText* Prefix, struct FText* Suffix);
	bool CanInteractWithModifiedRange();
	bool CanInteractWhileVaulting();
	bool CanInteractWhileSkydiving();
	bool CanInteractWhileMoving(class AKSCharacter* QueriedCharacter);
	bool CanInteractWhileDown(class AKSCharacter* QueriedChar);
	bool CanInteractFromBehind();
	bool CanInteract(class AKSCharacter* QueriedChar, bool* bPress, bool* bHold);
	bool AllowsMultipleInteraction();
	void AddInteractionBlocker(const struct FKSInteractionBlocker& InInteractionBlocker);
};

// Class Killstreak.KSInteractionBlockerManager
// 0x0018 (FullSize[0x00C8] - InheritedSize[0x00B0])
class UKSInteractionBlockerManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData_UOLV[0x10];                                    // 0x00B0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsInteractionBlocked;                                     // 0x00C0(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9HUC[0x7];                                     // 0x00C1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1307);
		return ptr;
	}



};

// Class Killstreak.KSCinematicDataContainer
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UKSCinematicDataContainer : public UDataAsset
{
public:
	TMap<struct FName, struct FKSCinematicData>        CinematicDatas;                                            // 0x0030(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1171);
		return ptr;
	}



	struct FName GetDefaultCameraTag(const struct FName& CinematicName);
	struct FString GetCinematicSubLevelName(const struct FName& CinematicName);
	Killstreak_EKSLevelStreamingMethod GetCinematicLevelStreamingMethod(const struct FName& CinematicName);
	struct FText GetCinematicDisplayName(const struct FName& CinematicName);
	TArray<struct FString> GetAllCinematicSubLevelNames();
	TArray<struct FKSCinematicData> GetAllCinematicDatas();
};

// Class Killstreak.KSCinematicSequenceManager
// 0x0028 (FullSize[0x0248] - InheritedSize[0x0220])
class AKSCinematicSequenceManager : public AActor
{
public:
	class ALevelSequenceActor*                         SequenceActor;                                             // 0x0220(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelSequence*                              Sequence;                                                  // 0x0228(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AKSCinematicCharacterManager*>        CinematicCharacterHandles;                                 // 0x0230(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      CinematicCharacterClass;                                   // 0x0240(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1172);
		return ptr;
	}



	bool VerifyAllCinematicCharactersLoaded();
	void SetCinematicCharactersTimeDilation(float NewDilation);
	void SetCinematicCharactersFromWinningTeam();
	void SetCinematicCharactersFromPlayerTeam();
	bool PlaySequence(bool bRequireCharactersLoaded, class ULevelSequence* InLevelSequence);
	class ULevelSequence* GetSequence();
	TArray<class AKSCharacter*> GetCinematicCharacters();
	TArray<class AKSCinematicCharacterManager*> GetCinematicCharacterManagers();
};

// Class Killstreak.KSTeamCinematicSequenceManager
// 0x0058 (FullSize[0x02A0] - InheritedSize[0x0248])
class AKSTeamCinematicSequenceManager : public AKSCinematicSequenceManager
{
public:
	TMap<int, class ULevelSequence*>                   SequenceList;                                              // 0x0248(0x0050) (Edit, Protected, NativeAccessSpecifierProtected)
	class ULevelSequence*                              DefaultLevelSequence;                                      // 0x0298(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1173);
		return ptr;
	}



};

// Class Killstreak.KSCircleDeadZoneFilter
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UKSCircleDeadZoneFilter : public UKSAnalogStickFilter
{
public:
	float                                              DeadZoneRadius;                                            // 0x0038(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CardinalDeadZoneHalfWidth;                                 // 0x003C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1174);
		return ptr;
	}



};

// Class Killstreak.KSWeaponTargetingModule
// 0x0100 (FullSize[0x0128] - InheritedSize[0x0028])
class UKSWeaponTargetingModule : public UObject
{
public:
	struct FTargetingModuleTickFunction                TargetingTick;                                             // 0x0028(0x0030) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                TargetingIndex;                                            // 0x0058(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       ModeKey;                                                   // 0x005C(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CXEG[0xC];                                     // 0x0064(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  OverriddenOriginTransform;                                 // 0x0070(0x0030) (BlueprintVisible, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTransform                                  OverriddenOriginTransformOffset;                           // 0x00A0(0x0030) (BlueprintVisible, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bOverrideOriginTransform;                                  // 0x00D0(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCookTimeAffectsVisuals;                                   // 0x00D1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_03ZZ[0x2];                                     // 0x00D2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       AimPostProcessCookTimeParameterName;                       // 0x00D4(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XCYS[0x4];                                     // 0x00DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          AimPostProcessMaterial;                                    // 0x00E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    AimPostProcessMaterialInstance;                            // 0x00E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSWeaponAsset*                              OverriddenWeaponAsset;                                     // 0x00F0(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKSWeaponTargetingModule*>            ChildTargetingModules;                                     // 0x00F8(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HitScanRange;                                              // 0x0108(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0D6O[0xC];                                     // 0x010C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponComponent*                          OwningWeaponComponent;                                     // 0x0118(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AKSCharacter*                                OwningCharacter;                                           // 0x0120(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1175);
		return ptr;
	}



	void UpdateOverriddenOriginTransformOffset(const struct FTransform& NewOverriddenOriginTransformOffset);
	void UpdateOverriddenOriginTransform(const struct FTransform& NewOverriddenOriginTransform);
	void UpdateCachedHoveredActor(class AActor* NewCachedHoveredActor);
	void TickTargeting(float DeltaSeconds);
	bool ShouldShowPath();
	void SetShowPath(bool bNewShowPath);
	void SetParentTargetingModule(class UKSWeaponTargetingModule* NewParentTargetingModule);
	void SetOverrideOriginTransform(bool bNewOverrideOriginTransform);
	void SetOverriddenWeaponAsset(class UKSWeaponAsset* NewOverriddenWeaponAsset);
	void SetAimPostProcessMaterialInstance(class UMaterialInstanceDynamic* NewAimPostProcessMaterialInstance);
	void LookForHoveredActors();
	bool IsTargetingModeEnabled();
	bool IsAimedAtFriendly();
	bool IsAimedAtEnemy();
	class UKSWeaponComponent* GetWeaponComponent();
	class UKSWeaponAsset* GetWeaponAsset();
	int GetTargetingIndex();
	class AKSCharacter* GetOwningCharacter();
	struct FTransform GetOverriddenOriginTransform();
	struct FTransform GetOriginTransform();
	struct FName GetModeKey();
	float GetHitScanRange();
	class UMaterialInstanceDynamic* GetAimPostProcessMaterialInstance();
	class UMaterialInterface* GetAimPostProcessMaterial();
	void ExitTargetingMode();
	void EnterTargetingMode();
	class UKSWeaponTargetingModule* AddChildTargetingModule(class UKSWeaponAsset* NewTargetingModuleWeaponAsset, int ChildTargetingIndex, bool bUsesOverrideOriginTransform, class UMaterialInstanceDynamic* SharedAimPostProcessMaterialInstance);
};

// Class Killstreak.KSProjectileTargetingModule
// 0x0280 (FullSize[0x03A8] - InheritedSize[0x0128])
class UKSProjectileTargetingModule : public UKSWeaponTargetingModule
{
public:
	TArray<struct FKSProjectileTargetingStateValidator> StateValidators;                                           // 0x0128(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectileSimFrequency;                                    // 0x0138(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSimTime;                                                // 0x013C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InitialStrideTime;                                         // 0x0140(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VJ9U[0x4];                                     // 0x0144(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMesh*                                 ArcTemplate;                                               // 0x0148(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>                  ArcSegmentMaterials;                                       // 0x0150(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       FirstSegmentScalarParameterName;                           // 0x0160(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ArcColorParameterName;                                     // 0x0168(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ArcCookParameterName;                                      // 0x0170(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       PostProcessStopLocationParameterName;                      // 0x0178(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       PostProcessRadiusParameterName;                            // 0x0180(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPostProcessParameterIndexed;                              // 0x0188(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EKSProjectileTargetingHitComponentType  ImpactComponentType;                                       // 0x0189(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EKSProjectileTargetingHitComponentType  BounceComponentType;                                       // 0x018A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VBZQ[0x1];                                     // 0x018B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     ImpactComponentSize;                                       // 0x018C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     BounceComponentSize;                                       // 0x0198(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X38U[0x4];                                     // 0x01A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          ImpactComponentMaterial;                                   // 0x01A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          BounceComponentMaterial;                                   // 0x01B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ImpactColorParameterName;                                  // 0x01B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ImpactCookParameterName;                                   // 0x01C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BounceColorParameterName;                                  // 0x01C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BounceCookParameterName;                                   // 0x01D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 ImpactMesh;                                                // 0x01D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 BounceMesh;                                                // 0x01E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_ESplineMeshAxis>                SplineMeshAxisType;                                        // 0x01E8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XGK1[0x3];                                     // 0x01E9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector2D                                   ArcSegmentScale;                                           // 0x01EC(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                BounceCount;                                               // 0x01F4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxSegmentsPerBounceArc;                                   // 0x01F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XZLK[0x4];                                     // 0x01FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      TargetingDetailsWidgetClass;                               // 0x0200(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USplineMeshComponent*>                ArcComponent;                                              // 0x0208(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    ImpactMaterialInstance;                                    // 0x0218(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    BounceMaterialInstance;                                    // 0x0220(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceDynamic*>            ArcSegmentMaterialInstances;                               // 0x0228(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             ImpactComponent;                                           // 0x0238(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USceneComponent*>                     BounceComponents;                                          // 0x0240(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetComponent*                            TargetingDetailsWidgetComponent;                           // 0x0250(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UKSTargetingDetailsWidget*                   TargetingDetailsWidget;                                    // 0x0258(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTargetingVisualsInitialized;                              // 0x0260(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UJOP[0x7];                                     // 0x0261(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponAsset_WithProjectile*               ProjectileAsset;                                           // 0x0268(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSProjectile*                               ProjectileCDO;                                             // 0x0270(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EGIQ[0x10];                                    // 0x0278(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPredictProjectilePathResult                CachedPredictedPathResults;                                // 0x0288(0x00B8) (BlueprintVisible, BlueprintReadOnly, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                              PredictedGrenadePathArcLength;                             // 0x0340(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8RG7[0x64];                                    // 0x0344(0x0064) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1176);
		return ptr;
	}



	class UKSWeaponAsset_WithProjectile* GetWeaponAsset_WithProjectile();
	struct FName GetInstancedPostProcessStopLocationParameterName();
	struct FName GetInstancedPostProcessRadiusParameterName();
};

// Class Killstreak.KSGrenadeTargetingModule
// 0x0048 (FullSize[0x03F0] - InheritedSize[0x03A8])
class UKSGrenadeTargetingModule : public UKSProjectileTargetingModule
{
public:
	struct FLinearColor                                FuseWarningColor;                                          // 0x03A8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                FuseSafeColor;                                             // 0x03B8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FuseWarningStartTime;                                      // 0x03C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N31F[0x4];                                     // 0x03CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponAsset_Grenade*                      GrenadeAsset;                                              // 0x03D0(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6Z6X[0x18];                                    // 0x03D8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1177);
		return ptr;
	}



	class UKSWeaponAsset_Grenade* GetWeaponAsset_Grenade();
};

// Class Killstreak.KSClusterGrenadeTargetingModule
// 0x0000 (FullSize[0x03F0] - InheritedSize[0x03F0])
class UKSClusterGrenadeTargetingModule : public UKSGrenadeTargetingModule
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1178);
		return ptr;
	}



};

// Class Killstreak.KSCombatLogVisualizer
// 0x0050 (FullSize[0x0280] - InheritedSize[0x0230])
class AKSCombatLogVisualizer : public APGame_CombatLogVisualizer
{
public:
	TMap<struct FString, struct FCharacterArray>       Characters;                                                // 0x0230(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1179);
		return ptr;
	}



};

// Class Killstreak.KSCommunication
// 0x0008 (FullSize[0x02C0] - InheritedSize[0x02B8])
class UKSCommunication : public UKSRadialMenuItem
{
public:
	Killstreak_EPingType                               PingType;                                                  // 0x02B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EPingMessage                            PingMessage;                                               // 0x02B9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_23ED[0x6];                                     // 0x02BA(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1181);
		return ptr;
	}



};

// Class Killstreak.KSCommunicationInstance
// 0x0000 (FullSize[0x02C8] - InheritedSize[0x02C8])
class AKSCommunicationInstance : public AKSRadialMenuItemInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1183);
		return ptr;
	}



};

// Class Killstreak.KSControllerInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSControllerInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1184);
		return ptr;
	}



	void RecordDamageDealt(float ProratedDamage, float ActualDamage, class UDamageType* DamageType, class AActor* DamagedActor, class AActor* DamageCauser);
	void OnTeamUpdated();
	void OnSideUpdated();
	class AKSTeamState* GetTeam();
	int GetSkinLevel();
	int GetSkinId();
	int GetSideNum();
	class AKSPlayerState* GetKSPlayerState();
	class AKSCharacterBase* GetKSCharacter();
	class AController* GetController();
	class UKSCheatComponent* GetCheatComponent();
	int GetBotId();
};

// Class Killstreak.KSControlPoint
// 0x01C0 (FullSize[0x0540] - InheritedSize[0x0380])
class AKSControlPoint : public AKSObjectiveBase
{
public:
	unsigned char                                      UnknownData_U2QQ[0x10];                                    // 0x0380(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Killstreak_EKSPOIState                             POIState;                                                  // 0x0390(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HK0F[0x7];                                     // 0x0391(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSObjectiveInfo                            ObjectiveInfo;                                             // 0x0398(0x0068) (Net, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FKSObjectiveTimerInfo                       ObjectiveTimerInfo;                                        // 0x0400(0x0038) (Net, RepNotify, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FKSObjectiveCaptureInfo                     ObjectiveCaptureInfo;                                      // 0x0438(0x0014) (Net, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P6D3[0x4];                                     // 0x044C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCapturedDelegate;                                        // 0x0450(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUncapturedDelegate;                                      // 0x0460(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnContestedDelegate;                                       // 0x0470(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUncontestedDelegate;                                     // 0x0480(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnOwningTeamChangedDelegate;                               // 0x0490(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCapturingTeamChangedDelegate;                            // 0x04A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnScorePeriodElapsedDelegate;                              // 0x04B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FKSControlPointSettings                     ControlPointSettings;                                      // 0x04C0(0x0030) (Edit, Net, Protected, NativeAccessSpecifierProtected)
	class AKSTeamState*                                OwningTeam;                                                // 0x04F0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSTeamState*                                CapturingTeam;                                             // 0x04F8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CaptureProgress;                                           // 0x0500(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ScoreUpdatePeriod;                                         // 0x0504(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      NumTeamMembersCapturing;                                   // 0x0508(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_U38Q[0x3];                                     // 0x0509(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SimulatedProgressRate;                                     // 0x050C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SimulatedTimeUntilScore;                                   // 0x0510(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                FavoredSide;                                               // 0x0514(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHideLocked;                                               // 0x0518(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0S14[0x7];                                     // 0x0519(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UPrimitiveComponent*>                 RegisteredPawnOverlapComponents;                           // 0x0520(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AKSCharacterBase*>                    OverlappingPawns;                                          // 0x0530(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1186);
		return ptr;
	}



	void UpdateControlPointSettings(const struct FKSControlPointSettings& NewSettings);
	void ResetScoreProgress();
	void RemovePrimitiveToPawnOverlapCheck(class UPrimitiveComponent* InPrimitive);
	void OnRep_OwningTeam();
	void OnRep_ObjectiveTimer();
	void OnRep_GenericCaptureProgress();
	void OnRep_CapturingTeam();
	void OnOwningTeamChanged(class AKSTeamState* NewTeam);
	void OnObjectiveTimerTickEvent(float Time);
	void OnObjectiveTimerCompleteEvent();
	void OnObjectiveTimerActiveEvent(bool Active);
	void OnObjectiveStateChangedEvent();
	void OnObjectiveInactiveEvent();
	void OnObjectiveActiveEvent();
	void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnCapturingTeamChanged(class AKSTeamState* NewTeam);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	float GetUpdateRateForControlPoint();
	float GetScorePeriodForControlPoint();
	class AKSTeamState* GetOwningTeam();
	class AKSTeamState* GetCapturingTeam();
	bool CheckIfPointCausesSuddenDeath();
	void BroadcastPointUncaptured();
	void BroadcastPointScored();
	void BroadcastPointCaptured();
	void AddPrimitiveToPawnOverlapCheck(class UPrimitiveComponent* InPrimitive);
};

// Class Killstreak.KSCustomApparelComponent
// 0x0020 (FullSize[0x00D0] - InheritedSize[0x00B0])
class UKSCustomApparelComponent : public UActorComponent
{
public:
	bool                                               bLinkLocalSkinObjectToBodyApparel;                         // 0x00B0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RWXV[0x7];                                     // 0x00B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSCharacter*                                CharacterOwner;                                            // 0x00B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSApparelAsset_CustomComponent*             ApparelAsset;                                              // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMultiSkinObject*                            SkinObject;                                                // 0x00C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1187);
		return ptr;
	}



	class UMultiSkinObject* GetSkinObject();
	class AKSCharacter* GetCharacterOwner();
	class UKSApparelAsset_CustomComponent* GetApparelAsset();
	void CamouflageLevelChanged(class AKSCharacter* Character, Killstreak_EKSCamouflageLevel OldCamouflageLevel, Killstreak_EKSCamouflageLevel NewCamouflageLevel);
	void CamouflageChanged(class AKSCharacter* Character, bool bNewCamouflaged);
	void BlueprintPlayAbilityCosmetics();
	void BlueprintFinishedInitialization();
};

// Class Killstreak.KSDamageable
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSDamageable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1188);
		return ptr;
	}



	void ReportDamageByInstigator(const struct FCombatEventInfo& DamageInfo);
	Killstreak_EHitLocationType GetHitLocationTypeFromBoneName(const struct FName& BoneName);
	bool DoesBoneAllowHeadshotPassthrough(const struct FName& BoneName);
};

// Class Killstreak.KSDamageTypeBase
// 0x00F8 (FullSize[0x0138] - InheritedSize[0x0040])
class UKSDamageTypeBase : public UDamageType
{
public:
	Killstreak_EDamageCategory                         DamageCategory;                                            // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C3SE[0x7];                                     // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             HitPawnEffect;                                             // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               HitBodyAudioEvent;                                         // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               HitHeadAudioEvent;                                         // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               HitResistedAudioEvent;                                     // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               HitReducedAudioEvent;                                      // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               HitByAudioEvent;                                           // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               HitByResistedAudioEvent;                                   // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               HitByReducedAudioEvent;                                    // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKSSpecialEffect                            HitSpecialEffect;                                          // 0x0088(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FName                                       EffectAttachPointName;                                     // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPreProcessResistable;                                     // 0x00E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRequiresDamageForDebuffs;                                 // 0x00E1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUIDisplayable;                                            // 0x00E2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bClientPredictable;                                        // 0x00E3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideDamageDirection;                                      // 0x00E4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCountTowardsTrackedFriendlyFireDamage;                    // 0x00E5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDoFriendlyDamageWithReverseFriendlyFire;                  // 0x00E6(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3WOW[0x1];                                     // 0x00E7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UKSPlayerMod*>                        DebuffsAppliedOnDamage;                                    // 0x00E8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchDuration;                                            // 0x00F8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchRecoveryRate;                                        // 0x00FC(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchMinHeightBody;                                       // 0x0100(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchMaxHeightBody;                                       // 0x0104(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchMinHeightHead;                                       // 0x0108(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlinchMaxHeightHead;                                       // 0x010C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       DamageTags;                                                // 0x0110(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              ImpulseMagnitudePerDamage;                                 // 0x0130(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9JLJ[0x4];                                     // 0x0134(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1190);
		return ptr;
	}



	bool PreProcessDamageEffects(class AActor* DamagedActor, float* Damage, const struct FKSDamageEventInfo& DamageEventInfo, class AController* EventInstigator, class AActor* DamageCauser);
	void PostProcessDamageEffects(class AActor* DamagedActor, float AttemptedDamage, float ActualDamage, const struct FKSDamageEventInfo& DamageEventInfo, const struct FCombatEventInfo& CombatEventInfo, class AController* EventInstigator, class AActor* DamageCauser, bool IsKillEvent);
	void STATIC_GetDefaultObjectPropertiesFromDamageType(class UClass* DamageTypeClass, class UParticleSystem** OutHitPawnEffect, class UAkAudioEvent** OutHitBodyAudioEvent, class UAkAudioEvent** OutHitHeadAudioEvent, class UAkAudioEvent** OutHitByAudioEvent);
};

// Class Killstreak.KSDamageTypeDisperse
// 0x0000 (FullSize[0x0138] - InheritedSize[0x0138])
class UKSDamageTypeDisperse : public UKSDamageTypeBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1191);
		return ptr;
	}



};

// Class Killstreak.KSDamageTypeEMP
// 0x0008 (FullSize[0x0140] - InheritedSize[0x0138])
class UKSDamageTypeEMP : public UKSDamageTypeBase
{
public:
	float                                              EMPDuration;                                               // 0x0138(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NO8V[0x4];                                     // 0x013C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1192);
		return ptr;
	}



};

// Class Killstreak.KSDamageTypeFire
// 0x0008 (FullSize[0x0140] - InheritedSize[0x0138])
class UKSDamageTypeFire : public UKSDamageTypeBase
{
public:
	float                                              FireDuration;                                              // 0x0138(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DJRA[0x4];                                     // 0x013C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1193);
		return ptr;
	}



};

// Class Killstreak.KSFlashSource
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSFlashSource : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1194);
		return ptr;
	}



	class UCurveFloat* GetFlashCurve(Killstreak_EFlashBangIntensity Intensity);
	Killstreak_EFlashBangIntensity DetermineFlashIntensity(class AKSCharacter* FlashedCharacter);
};

// Class Killstreak.KSDamageTypeFlashBang
// 0x0008 (FullSize[0x0140] - InheritedSize[0x0138])
class UKSDamageTypeFlashBang : public UKSDamageTypeBase
{
public:
	float                                              EffectiveAngle;                                            // 0x0138(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KW8D[0x4];                                     // 0x013C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1195);
		return ptr;
	}



};

// Class Killstreak.KSDamageTypeMaxHealth
// 0x0000 (FullSize[0x0138] - InheritedSize[0x0138])
class UKSDamageTypeMaxHealth : public UKSDamageTypeBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1196);
		return ptr;
	}



};

// Class Killstreak.KSDamageTypeReverseFriendly
// 0x0000 (FullSize[0x0138] - InheritedSize[0x0138])
class UKSDamageTypeReverseFriendly : public UKSDamageTypeBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1197);
		return ptr;
	}



};

// Class Killstreak.KSDamageTypeSonar
// 0x0008 (FullSize[0x0140] - InheritedSize[0x0138])
class UKSDamageTypeSonar : public UKSDamageTypeBase
{
public:
	bool                                               bRevealOnly;                                               // 0x0138(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CIVI[0x3];                                     // 0x0139(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RevealDuration;                                            // 0x013C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1198);
		return ptr;
	}



};

// Class Killstreak.KSDamageTypeStuck
// 0x0000 (FullSize[0x0138] - InheritedSize[0x0138])
class UKSDamageTypeStuck : public UKSDamageTypeBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1199);
		return ptr;
	}



};

// Class Killstreak.KSDamageTypeStun
// 0x0008 (FullSize[0x0140] - InheritedSize[0x0138])
class UKSDamageTypeStun : public UKSDamageTypeBase
{
public:
	float                                              StunDuration;                                              // 0x0138(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_93OQ[0x4];                                     // 0x013C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1200);
		return ptr;
	}



};

// Class Killstreak.KSDefaultAimTargetingModule
// 0x0024 (FullSize[0x014C] - InheritedSize[0x0128])
class UKSDefaultAimTargetingModule : public UKSWeaponTargetingModule
{
public:
	unsigned char                                      UnknownData_8NOS[0x8];                                     // 0x0128(0x0008) Fix Super Size
	struct FVector                                     WallMarkerWorldLocation;                                   // 0x0130(0x000C) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAimedAtEnemy;                                             // 0x013C(0x0001) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAimedAtFriendly;                                          // 0x013D(0x0001) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ULOL[0x2];                                     // 0x013E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponAsset_WithProjectile*               ProjWeaponAsset;                                           // 0x0140(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8588[0x4];                                     // 0x0148(0x0004) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1201);
		return ptr;
	}



	bool IsWallMarkerActive(struct FVector* WallLocation);
	bool IsCurrentlyBlocked();
	float GetWallMarkerMaxDistance();
};

// Class Killstreak.KSDefensePoint
// 0x0020 (FullSize[0x0278] - InheritedSize[0x0258])
class AKSDefensePoint : public AKSMapPoint
{
public:
	class AKSObjectiveBase*                            RelevantObjective;                                         // 0x0258(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                              AssignedDefenders;                                         // 0x0260(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UMIW[0x8];                                     // 0x0270(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1203);
		return ptr;
	}



	void RelevantObjectiveUpdated(class AKSObjectiveBase* Objective);
	struct FVector GetTargetDefensePoint();
};

// Class Killstreak.KSDeployable
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSDeployable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1204);
		return ptr;
	}



	bool ShouldSetFriendlyOutlineOnRegister();
	bool ShouldNotAffectTargetingReticle();
	bool ShouldDisablePingTargeting();
	bool ShouldDisablePingOutline();
	void SetOutlineColor(bool Enabled, const struct FKSOutlineParameters& OutlineParams, int Color);
};

// Class Killstreak.KSDestroyableHazard
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSDestroyableHazard : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1205);
		return ptr;
	}



};

// Class Killstreak.KSDestroyableHazardComponent
// 0x0020 (FullSize[0x00D0] - InheritedSize[0x00B0])
class UKSDestroyableHazardComponent : public UActorComponent
{
public:
	float                                              MinPerceptionValue;                                        // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxPerceptionValue;                                        // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RandomizedPerceptionValue;                                 // 0x00B8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ShouldReactWithEMP;                                        // 0x00BC(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ShouldReactWithGunshot;                                    // 0x00BD(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7TPR[0x2];                                     // 0x00BE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      ActorsSeenBy[0x10];                                        // 0x00BE(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1206);
		return ptr;
	}



	bool ShouldFireAt();
	bool ShouldEMP();
};

// Class Killstreak.KSDestructibleBase
// 0x0170 (FullSize[0x0390] - InheritedSize[0x0220])
class AKSDestructibleBase : public AActor
{
public:
	unsigned char                                      UnknownData_98JH[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bRenderTrueCollisionUntilDestruction;                      // 0x0228(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EBUQ[0x7];                                     // 0x0229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             SceneRoot;                                                 // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDestructibleComponent*                      VisualMesh;                                                // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        TrueCollision;                                             // 0x0240(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                               SpeedOverlap;                                              // 0x0248(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowDestructibleMeshSimulation;                          // 0x0250(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowPlayerToWalkOnSurface;                               // 0x0251(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowDestructionAudio;                                    // 0x0252(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K2IG[0x5];                                     // 0x0253(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               DefaultDestructionEvent;                                   // 0x0258(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSpawnBreakParticleAtActorLocation;                        // 0x0260(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LLBP[0x7];                                     // 0x0261(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             BreakParticles;                                            // 0x0268(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             ImpactParticles;                                           // 0x0270(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             FakeHitDecalParticle;                                      // 0x0278(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CharacterSpeedOverlapCameraShake;                          // 0x0280(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDestructibleDestroyed;                                   // 0x0288(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              MaxHealth;                                                 // 0x0298(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Health;                                                    // 0x029C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LocalHealth;                                               // 0x02A0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bResetOnRoundChange;                                       // 0x02A4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowsWeaponPenetration;                                  // 0x02A5(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanBreakWithSpeed;                                        // 0x02A6(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllProjectilesInstantBreak;                               // 0x02A7(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpeedBreakThreshold;                                       // 0x02A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTransparentDestructible;                                  // 0x02AC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_79XU[0x3];                                     // 0x02AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<Killstreak_EDamageCategory, float>            DamageTypeMultipliers;                                     // 0x02B0(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              BreakingDamage;                                            // 0x0300(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BreakingImpulse;                                           // 0x0304(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseRadialDestruction;                                     // 0x0308(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_V6V0[0x3];                                     // 0x0309(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BreakingRadius;                                            // 0x030C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ImpactImpulseOffset;                                       // 0x0310(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIgnoreCharacterVerticalSpeed;                             // 0x0314(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_862Z[0x3];                                     // 0x0315(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BadDestroyCheckTime;                                       // 0x0318(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EventlessDestroyWaitTime;                                  // 0x031C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               MeshDestroyed;                                             // 0x0320(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BWJ5[0x7];                                     // 0x0321(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPhysicalMaterial*                           PhysicalMaterialOverride;                                  // 0x0328(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDestructibleMesh*                           MeshAsset;                                                 // 0x0330(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     LastHitLocation;                                           // 0x0338(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     LastHitDirection;                                          // 0x0344(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     LastHitNormal;                                             // 0x0350(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8H3K[0x4];                                     // 0x035C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UParticleSystemComponent*>            FakeHitDecals;                                             // 0x0360(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_W2X7[0x10];                                    // 0x0370(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSItemStimuliSourceComponent*               StimuliSourceComponent;                                    // 0x0380(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OV2Z[0x8];                                     // 0x0388(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1207);
		return ptr;
	}



	void UndoBadDestroy();
	void SpeedGateOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	bool ShouldProjectilesInstantBreak();
	void SetupPreBroken();
	void ResetDestructible();
	int PostDestructionEvent(class UAkAudioEvent* InEvent);
	void OnRoundChange(const struct FRoundInitState& RoundInitState);
	void OnRep_Health();
	void OnDestructionChange(bool Destroyed, bool bInitialSetup);
	void OnDamageEvent(float NewHealth, const struct FVector& HitLocation, const struct FVector& HitDirection, const struct FVector& HitNormal, bool FromServer);
	float GetMaxHealth();
	float GetCurrentHealth();
	void BlueprintPrepareKillCamPlayback();
};

// Class Killstreak.KSDispersible
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSDispersible : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1208);
		return ptr;
	}



	void Disperse(TArray<class USceneComponent*> HitComponents);
};

// Class Killstreak.KSDistanceOptimizationComponent
// 0x0040 (FullSize[0x00F0] - InheritedSize[0x00B0])
class UKSDistanceOptimizationComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    DistanceOptimizationChangedDelegate;                       // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bAlwaysDisableOnServer;                                    // 0x00C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A7HO[0x3];                                     // 0x00C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ActiveDistance;                                            // 0x00C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentDistance;                                           // 0x00C8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4AMB[0x4];                                     // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UActorComponent*>                     ComponentsToControl;                                       // 0x00D0(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                              ActorsToControl;                                           // 0x00E0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1209);
		return ptr;
	}



	bool IsCloseEnough();
	void DistanceOptimizationChangedDelegate__DelegateSignature(bool bShouldBeActive);
	void AddComponents(TArray<class UActorComponent*> InComponents);
	void AddComponent(class UActorComponent* InComponent);
	void AddActor(class AActor* Actor);
};

// Class Killstreak.KSDropLocation
// 0x0020 (FullSize[0x0278] - InheritedSize[0x0258])
class AKSDropLocation : public AKSMapPoint
{
public:
	class AKSWayPointSet*                              WayPointSet;                                               // 0x0258(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ReverseWayPointSetDirection;                               // 0x0260(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZJ1A[0x3];                                     // 0x0261(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FlightDistanceModifier;                                    // 0x0264(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FreefallXYDistance;                                        // 0x0268(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FreefallHeight;                                            // 0x026C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UB25[0x8];                                     // 0x0270(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1210);
		return ptr;
	}



	bool ShouldReverseWayPointSetDirection();
	void IncrementSelectionCount();
	void HandleRoundSetup(const struct FRoundInitState& RoundInitState);
	class AKSWayPointSet* GetWayPointSet();
	TArray<int> GetValidSides();
	struct FVector GetTargetDropLocation();
	int GetNumTimesSelected();
	float GetFreefallXYDistance();
	float GetFreefallHeight();
	float GetFlightDistanceModifier();
};

// Class Killstreak.KSDropOffZone
// 0x00A8 (FullSize[0x0428] - InheritedSize[0x0380])
class AKSDropOffZone : public AKSObjectiveBase
{
public:
	unsigned char                                      UnknownData_TZT2[0x10];                                    // 0x0380(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Killstreak_EKSPOIState                             POIState;                                                  // 0x0390(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8FXZ[0x3];                                     // 0x0391(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                Team;                                                      // 0x0394(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                FlipTeam;                                                  // 0x0398(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bActivated;                                                // 0x039C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HQ4G[0x3];                                     // 0x039D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       PointAreaComponentTag;                                     // 0x03A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPrimitiveComponent*>                 PointAreaComponents;                                       // 0x03A8(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSInteractionManager*                       CurrentInteractionManager;                                 // 0x03B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSCharacter*                                CurrentInteractor;                                         // 0x03C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentInteractionProgress;                                // 0x03C8(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                                MacGuffinEquipPoint;                                       // 0x03CC(0x0008) (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DropOffDuration;                                           // 0x03D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       DropOffProgressText;                                       // 0x03D8(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       DropOffPrompt;                                             // 0x03F0(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FName                                       DropOffInteractionMode;                                    // 0x0408(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                 // 0x0410(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2009[0x10];                                    // 0x0418(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1211);
		return ptr;
	}



	void TeamUpdated();
	void ResetZone();
	void OnRep_Team();
	void OnRep_Activated();
	void ActivateZone();
	void Activated(bool bActive);
};

// Class Killstreak.KSDropRuleComponent
// 0x0068 (FullSize[0x0118] - InheritedSize[0x00B0])
class UKSDropRuleComponent : public UKSGameRuleComponent
{
public:
	struct FGameplayTagContainer                       WeaponSlotsToDropOnDeath;                                  // 0x00B0(0x0020) (Edit, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FKSRandomDropEntry>                  RandomDeathDropList;                                       // 0x00D0(0x0010) (Edit, ZeroConstructor, Config, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       WeaponSlotsToDropOnDowned;                                 // 0x00E0(0x0020) (Edit, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FKSRandomDropEntry>                  RandomDownDropList;                                        // 0x0100(0x0010) (Edit, ZeroConstructor, Config, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PlayerDropLifetime;                                        // 0x0110(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RequiredAmmoPercent;                                       // 0x0114(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1212);
		return ptr;
	}



	void OnPlayerDowned(const struct FCombatEventInfo& EventInfo, int ExpBonus);
	void OnPlayerDeath(const struct FCombatEventInfo& EventInfo);
	float GetPlayerDropLifetime();
};

// Class Killstreak.KSDropshipBase
// 0x0150 (FullSize[0x0370] - InheritedSize[0x0220])
class AKSDropshipBase : public AActor
{
public:
	class USceneComponent*                             DefaultSceneRoot;                                          // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             SharedRoot;                                                // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        PlaneBase;                                                 // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        EnvironmentStaticMesh;                                     // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        NoFireZone;                                                // 0x0240(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        OutOfBoundsVolume;                                         // 0x0248(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        DoorCollider;                                              // 0x0250(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             DropshipInteriorRoot;                                      // 0x0258(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        DropshipInteriorGeometry;                                  // 0x0260(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        DropshipInteriorLights;                                    // 0x0268(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             DropshipExteriorRoot;                                      // 0x0270(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        DropshipExteriorGeometry;                                  // 0x0278(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        FreeFallHeightMarker;                                      // 0x0280(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        PlayerShopZone;                                            // 0x0288(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        DropshipExitZone;                                          // 0x0290(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        DropshipModZone;                                           // 0x0298(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        KSPlayerStart_01;                                          // 0x02A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        KSPlayerStart_02;                                          // 0x02A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        KSPlayerStart_03;                                          // 0x02B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        KSPlayerStart_04;                                          // 0x02B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        KSPlayerStart_05;                                          // 0x02C0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        KSPlayerStart_06;                                          // 0x02C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        KSPlayerStart_07;                                          // 0x02D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        KSPlayerStart_08;                                          // 0x02D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        BotFactory;                                                // 0x02E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                               PlayerDetectionVolume;                                     // 0x02E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSDistanceOptimizationComponent*            KSDistanceOptimization;                                    // 0x02F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                DropshipSideNumber;                                        // 0x02F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bOutOfBoundsEnabled;                                       // 0x02FC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5OTG[0x3];                                     // 0x02FD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              OutOfBoundsMaxScale;                                       // 0x0300(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OutOfBoundsInitialScale;                                   // 0x0304(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OutOfBoundsStartSeconds;                                   // 0x0308(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDoorOpen;                                                 // 0x030C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCloaked;                                                  // 0x030D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IPMF[0x2];                                     // 0x030E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class APlayerStart*>                        InitialPlayerStarts;                                       // 0x0310(0x0010) (Edit, BlueprintVisible, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSDropshipInterior*                         DropshipInteriorVar;                                       // 0x0320(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSDropshipLights*                           DropshipInteriorLightsVar;                                 // 0x0328(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSDropshipExterior*                         DropshipExteriorVar;                                       // 0x0330(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_72NC[0x20];                                    // 0x0338(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bShouldReverseWayPointSetDirection;                        // 0x0358(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XEJU[0x7];                                     // 0x0359(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSWayPointSet*                              WayPointSet;                                               // 0x0360(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSBotDefinitionCollection*                  BotSpawnCollection;                                        // 0x0368(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1213);
		return ptr;
	}



	void ValidateDoor();
	void UpdateDoorRotation(float DoorRotation, float AdditionalInteriorMeshRotation1, float AdditionalInteriorMeshRotation2, float AdditionalExteriorMeshRotation1, float AdditionalExteriorMeshRotation2);
	void UpdateDoorLocation(const struct FVector& AdditionalDoorLocation, const struct FVector& AdditionalInteriorMeshLocation1, const struct FVector& AdditionalInteriorMeshLocation2, const struct FVector& AdditionalExteriorMeshLocation1, const struct FVector& AdditionalExteriorMeshLocation2);
	void UncloakDropship();
	void StopOpenDoorTimeline();
	void StopCloseDoorTimeline();
	void StopChildActorTimelines();
	void StartCheckPlayersInDropshipTimer();
	void SetupPlayerStarts();
	void SetupDoorAfterDelay();
	void SetupBots();
	void SetOutOfBoundsScale(float NewScale);
	void SetOpenDoorTimelineTime(float NewTime);
	void SetEnvironment(bool bOpen);
	void Server_StartCheckPlayersInDropshipTimer();
	void Server_SetupDoor();
	void Server_OpenDoor();
	void ResetTimers();
	void ResetTimelinesAndTimers();
	void ResetSFX();
	void PlayOpenDoorTimeline();
	void PlayCloseDoorTimeline();
	void OpenDoor();
	void NetMulticast_PlayOpenDoorTimeline();
	void NetMulticast_PlayCloseDoorTimeline();
	void NetMulticast_OpenDoor();
	void NetMulticast_HandlePhaseChanged(const struct FMatchPhase& NewPhase, const struct FMatchPhase& PreviousPhase);
	bool IsDoorOpen();
	bool IsCloaked();
	void InitializeDropship();
	void HandleUnlockPhase();
	void HandleSelectionPhase();
	void HandleRoundInProgess();
	void HandlePrepareRound();
	void HandlePostSelectionPhase();
	void HandlePostSelectionCinematicPhase();
	void HandlePostRound();
	void HandleOvertimeInProgress();
	void HandleHackedPhase();
	float GetRemainingTimeUntilPlayOpenDoorTimeline();
	float GetRemainingTimeUntilDoorOpens();
	float GetOpenDoorTimelineLength();
	int GetDropshipSideNumber();
	void DistanceOptimizationChanged(bool bShouldBeActive);
	void CloseDoor();
	void CloakDropship();
	void CheckPlayersInDropship();
	void BindDelegates();
	void AssignPlayerStartsSideNum();
};

// Class Killstreak.KSDropShipExitVolume
// 0x0008 (FullSize[0x0270] - InheritedSize[0x0268])
class AKSDropShipExitVolume : public APhysicsVolume
{
public:
	float                                              YawDirection;                                              // 0x0268(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CJD6[0x4];                                     // 0x026C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1215);
		return ptr;
	}



};

// Class Killstreak.KSDropShipExitZone
// 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
class AKSDropShipExitZone : public AActor
{
public:
	float                                              YawDirection;                                              // 0x0220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4QKL[0x4];                                     // 0x0224(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1216);
		return ptr;
	}



	void ActorLeavingZone(class AActor* Other);
	void ActorEnteredZone(class AActor* Other);
};

// Class Killstreak.KSDropshipExterior
// 0x0058 (FullSize[0x0278] - InheritedSize[0x0220])
class AKSDropshipExterior : public AActor
{
public:
	class USceneComponent*                             DefaultSceneRoot;                                          // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             SharedRoot;                                                // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     StartingDoorLocation;                                      // 0x0230(0x000C) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     StartingMeshLocation1;                                     // 0x023C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     StartingMeshLocation2;                                     // 0x0248(0x000C) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    StartingDoorRotator;                                       // 0x0254(0x000C) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    StartingMeshRotator1;                                      // 0x0260(0x000C) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    StartingMeshRotator2;                                      // 0x026C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1217);
		return ptr;
	}



	void UpdateExteriorDoorRotation(float DoorRotation, float AdditionalMeshRotation1, float AdditionalMeshRotation2);
	void UpdateExteriorDoorLocation(const struct FVector& AdditionalDoorLocation, const struct FVector& AdditionalMeshLocation1, const struct FVector& AdditionalMeshLocation2);
	void UncloakExterior();
	void StopExteriorTimelines();
	void SetupExteriorSFX();
	void SetStartingValues();
	void ResetExteriorSFX();
	void CloakExterior();
};

// Class Killstreak.KSDropshipInterior
// 0x0058 (FullSize[0x0278] - InheritedSize[0x0220])
class AKSDropshipInterior : public AActor
{
public:
	class USceneComponent*                             DefaultSceneRoot;                                          // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             SharedRoot;                                                // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     StartingDoorLocation;                                      // 0x0230(0x000C) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     StartingMeshLocation1;                                     // 0x023C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     StartingMeshLocation2;                                     // 0x0248(0x000C) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    StartingDoorRotator;                                       // 0x0254(0x000C) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    StartingMeshRotator1;                                      // 0x0260(0x000C) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    StartingMeshRotator2;                                      // 0x026C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1218);
		return ptr;
	}



	void UpdateInteriorDoorRotation(float DoorRotation, float AdditionalMeshRotation1, float AdditionalMeshRotation2);
	void UpdateInteriorDoorLocation(const struct FVector& AdditionalDoorLocation, const struct FVector& AdditionalMeshLocation1, const struct FVector& AdditionalMeshLocation2);
	void StopInteriorTimelines();
	void SetVisibleAndShouldTick(bool bVisible, bool bShouldTick);
	void SetupInteriorSFX();
	void SetStartingValues();
	void ResetInteriorSFX();
	void OnGateDown();
	void OnDoorOpen();
	void OnDoorFullyOpen();
};

// Class Killstreak.KSDropshipLights
// 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
class AKSDropshipLights : public AActor
{
public:
	class USceneComponent*                             DefaultSceneRoot;                                          // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             SharedRoot;                                                // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1219);
		return ptr;
	}



	void StopLoopingLightsTimeline();
	void StopExitLightsTimeline();
	void StopDimLightsTimeline();
	void SetVisibleAndShouldTick(bool bVisible, bool bShouldTick);
	void ResetAllLights();
	void PlayLoopingLightsTimeline();
	void PlayExitLightsTimeline();
	void PlayDimLightsTimeline();
};

// Class Killstreak.KSDynamicMaskComponent
// 0x0040 (FullSize[0x00F0] - InheritedSize[0x00B0])
class UKSDynamicMaskComponent : public UActorComponent
{
public:
	class UTextureRenderTarget2D*                      DynamicMaskRenderTarget;                                   // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TargetDimPixels;                                           // 0x00B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                EmptyColor;                                                // 0x00BC(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                FillColor;                                                 // 0x00CC(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MJDL[0x4];                                     // 0x00DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             ConversionBasisComponent;                                  // 0x00E0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WorldToTargetScaleX;                                       // 0x00E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WorldToTargetScaleY;                                       // 0x00EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1220);
		return ptr;
	}



	void Wipe();
	struct FColor GetColorAtPosition(const struct FVector2D& Position);
	void DrawDodecagon(const struct FVector2D& Position, float Radius);
	void DrawBox(const struct FVector2D& Position, const struct FVector2D& Dimensions);
	struct FVector2D ConvertToTargetFromWorld(const struct FVector& WorldSpace);
};

// Class Killstreak.KSEasyAntiCheatSettings
// 0x0068 (FullSize[0x00A0] - InheritedSize[0x0038])
class UKSEasyAntiCheatSettings : public UDeveloperSettings
{
public:
	uint16_t                                           AbilityEACWeaponTypeId;                                    // 0x0038(0x0002) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UJ3J[0x6];                                     // 0x003A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FWeaponTypeToAntiCheatId>            WeaponTypeToAntiCheatId;                                   // 0x0040(0x0010) (Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, uint16_t>                WeaponTypeToAntiCheatIdMap;                                // 0x0050(0x0050) (Transient, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1221);
		return ptr;
	}



};

// Class Killstreak.KSEncounterWave
// 0x00B8 (FullSize[0x00E8] - InheritedSize[0x0030])
class UKSEncounterWave : public UDataAsset
{
public:
	class UDataTable*                                  SpawnTable;                                                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int, int>                                     nMaxSpawnsPerPlayer;                                       // 0x0038(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	struct FKSRevealInfo                               WaveRevealParameters;                                      // 0x0088(0x0048) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4OB1[0x18];                                    // 0x00D0(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1236);
		return ptr;
	}



	float GetCostToSpawn(const struct FName& nmTableRowName);
	TArray<struct FName> ChooseNSpawnTableRows(int nCount);
};

// Class Killstreak.KSEnforcedEquipmentRuleComponent
// 0x00F8 (FullSize[0x01A8] - InheritedSize[0x00B0])
class UKSEnforcedEquipmentRuleComponent : public UKSGameRuleComponent
{
public:
	TMap<class UDataTable*, struct FGameplayTag>       ItemTables;                                                // 0x00B0(0x0050) (Edit, Protected, NativeAccessSpecifierProtected)
	TMap<class UKSItem*, struct FGameplayTag>          ChosenEquipment;                                           // 0x0100(0x0050) (Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HYWE[0x50];                                    // 0x0150(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSEnforcedEquipmentState*                   EnforcedEquipmentState;                                    // 0x01A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1237);
		return ptr;
	}



};

// Class Killstreak.KSEnforcedEquipmentState
// 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
class AKSEnforcedEquipmentState : public AInfo
{
public:
	TArray<class UKSItem*>                             EnforcedItems;                                             // 0x0220(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnEnforcedItemsUpdated;                                    // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1238);
		return ptr;
	}



	void OnRep_EnforcedItems();
};

// Class Killstreak.KSEnvironmentVolumeActor
// 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
class AKSEnvironmentVolumeActor : public AActor
{
public:
	unsigned char                                      UnknownData_5R2E[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       EnvironmentTag;                                            // 0x0228(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UEnvironmentTrackerComponent*>        ContainedEnvironmentTrackers;                              // 0x0230(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1239);
		return ptr;
	}



	void UpdateEnvironmentTag(const struct FName& NewTag);
};

// Class Killstreak.KSEnvQueryContext_Character
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UKSEnvQueryContext_Character : public UEnvQueryContext
{
public:
	struct FName                                       BlackboardKeyName;                                         // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1241);
		return ptr;
	}



};

// Class Killstreak.KSEnvQueryContext_Teammates
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSEnvQueryContext_Teammates : public UEnvQueryContext
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1242);
		return ptr;
	}



};

// Class Killstreak.KSEnvQueryTest_CharacterTrace
// 0x00E0 (FullSize[0x02D8] - InheritedSize[0x01F8])
class UKSEnvQueryTest_CharacterTrace : public UEnvQueryTest
{
public:
	struct FEnvTraceData                               TraceData;                                                 // 0x01F8(0x0030) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderBoolValue                    TraceFromContext;                                          // 0x0228(0x0038) (Edit, DisableEditOnInstance, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue                   ItemHeightOffset;                                          // 0x0260(0x0038) (Edit, DisableEditOnInstance, ContainsInstancedReference, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue                   ContextHeightOffset;                                       // 0x0298(0x0038) (Edit, DisableEditOnInstance, ContainsInstancedReference, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	class UClass*                                      Context;                                                   // 0x02D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1245);
		return ptr;
	}



};

// Class Killstreak.KSEquipmentContainerOwner
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSEquipmentContainerOwner : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1246);
		return ptr;
	}



};

// Class Killstreak.KSEquipmentManagerComponent
// 0x0168 (FullSize[0x0218] - InheritedSize[0x00B0])
class UKSEquipmentManagerComponent : public UActorComponent
{
public:
	TMap<struct FGameplayTag, class AKSEquipment*>     EquippedInventory;                                         // 0x00B0(0x0050) (Edit, DisableEditOnTemplate, Transient, EditConst, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_60G6[0x50];                                    // 0x0100(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AKSEquipment*>                        SlotlessInventory;                                         // 0x0150(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       MultiUseEquipPoints;                                       // 0x0160(0x0020) (Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      EquipmentManagerOwner[0x10];                               // 0x0180(0x0010) UNKNOWN PROPERTY: InterfaceProperty
	struct FScriptMulticastDelegate                    OnEquipmentAddedDel;                                       // 0x0190(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5276[0x18];                                    // 0x01A0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnEquipmentRemovedDel;                                     // 0x01B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KVLB[0x40];                                    // 0x01C8(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EmoteCooldownExpireTime;                                   // 0x0208(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              QuipCooldownExpireTime;                                    // 0x020C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CommunicationCooldownExpireTime;                           // 0x0210(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              RadialMenuItemCooldownExpireTime;                          // 0x0214(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1247);
		return ptr;
	}



	void SetEquipmentContainerOwner();
	class AKSEquipment* GetEquipmentByEquipPoint(const struct FGameplayTag& InEquipPoint);
};

// Class Killstreak.KSEquipmentManagerOwner
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSEquipmentManagerOwner : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1248);
		return ptr;
	}



};

// Class Killstreak.KSEventChallengesManager
// 0x0038 (FullSize[0x0248] - InheritedSize[0x0210])
class UKSEventChallengesManager : public UKSActivityManagerBase
{
public:
	struct FScriptMulticastDelegate                    OnEventChallengeActivitiesReady;                           // 0x0210(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSelectedChallengeChanged;                                // 0x0220(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               EventChallengesReady;                                      // 0x0230(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I5BR[0x17];                                    // 0x0231(0x0017) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1249);
		return ptr;
	}



	bool STATIC_ShouldDisplayBuyThroughEvent();
	bool SetSelectedEventChallenge(class UKSActivityInstance* ActivityInstance);
	bool IsPremiumChallengeInstance(class UKSActivityInstance* ActivityInstance);
	bool IsPremiumChallenge(class UKSActivity* Activity);
	bool GetSortedEventChallenges(TArray<class UKSActivityInstance*>* OutActivityInstances, class AKSPlayerController* Player, class AKSPlayerState* PlayerState);
	class UKSActivityInstance* GetSelectedEventChallenge();
	TArray<class UPUMG_StoreItem*> GetPurchasableEventBundles();
	class UPUMG_StoreItem* GetPremiumUnlockItem();
	struct FGrandPrizeProgression GetGrandPrizeProgression();
	class UPUMG_StoreItem* GetEventGrandPrizeBundle();
	int STATIC_GetEventCreditsItemId();
	struct FText GetEventChallengesTimeRemainingText();
	Killstreak_EKSEventChallengesDisplayState GetEventChallengesDisplayState();
	struct FGameplayTag STATIC_GetEventActivityTag();
	bool ClearSelectedEventChallenge();
	bool CanSelectChallenge(class UKSActivityInstance* ActivityInstance);
};

// Class Killstreak.KSEventTracker
// 0x01E0 (FullSize[0x0208] - InheritedSize[0x0028])
class UKSEventTracker : public UObject
{
public:
	unsigned char                                      UnknownData_0CEJ[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnTriggered;                                               // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bDoesTick;                                                 // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SKVM[0x7];                                     // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      ExpectedConfigEntries[0x50];                               // 0x0041(0x0050) UNKNOWN PROPERTY: SetProperty
	TWeakObjectPtr<class AKSPlayerController>          PlayerController;                                          // 0x0098(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UKSActivityInstance>          WeakActivityInstance;                                      // 0x00A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<Killstreak_ERewardSource, float>              ProgressEarnedBySource;                                    // 0x00A8(0x0050) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	TMap<struct FString, float>                        ProgressEarnedByEvent;                                     // 0x00F8(0x0050) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	TMap<struct FString, float>                        ProgressEarnedByBooster;                                   // 0x0148(0x0050) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	TMap<struct FString, float>                        ExtraData;                                                 // 0x0198(0x0050) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	class UKSEventTrackerPlayerData*                   PlayerData;                                                // 0x01E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RL1K[0x18];                                    // 0x01F0(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1250);
		return ptr;
	}



	void TriggerEvent(int Count);
	void TickTracker(float DeltaTime);
	void StoreProgressBySource(Killstreak_ERewardSource Source, float Progress);
	void StoreProgressByEvent(const struct FString& EventName, float Progress);
	void StoreProgressByBooster(const struct FString& BoosterName, float Progress);
	void StoreExtraData(const struct FString& ExtraDataKey, float ExtraDataValue);
	void ResetAccumulatedProgress();
	bool IsTriggerConditionMet();
	void HandleTrackerInitialized(TMap<struct FString, float> Config, TMap<struct FString, struct FString> StringConfig);
	void HandleLostPlayerController();
	class AKSWorldSettings* GetWorldSettings();
	class AKSPlayerState* GetPlayerState();
	class AKSGameState* GetGameState();
	class AKSGameMode* GetGameMode();
	class UKSGameInstance* GetGameInstance();
	int GetAccumulatedProgress();
};

// Class Killstreak.KSEventTrackerPlayerData
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UKSEventTrackerPlayerData : public UObject
{
public:
	unsigned char                                      UnknownData_KXJ7[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1251);
		return ptr;
	}



	bool UsesPlacementMatches();
	int SetInitialRankedXp();
	bool IsPlayerDeserter();
	bool IsLossPreventionEnabled();
	bool IsInLastPlacementMatch();
	void IncrementPlacementMatches();
	bool HasCompletedPlacementMatches();
	int GetTeamNum();
	float GetRankedXpWinBaseValue();
	float GetRankedXpMinBonusClamp();
	float GetRankedXpMaxBonusClamp();
	float GetRankedXpLossBaseValue();
	float GetRankDifferenceMultiplier();
	struct FString GetPlayerName();
	int GetPlacementMatchCount();
	int GetMmrZoneRankedLevel();
	float GetMMR();
	int GetFavoredMatchBonusXp();
	int GetCurrentRankedLevel();
};

// Class Killstreak.KSPawnActionBase
// 0x0008 (FullSize[0x00A0] - InheritedSize[0x0098])
class UKSPawnActionBase : public UPawnAction_BlueprintBase
{
public:
	class AKSCharacter*                                KSChar;                                                    // 0x0098(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1477);
		return ptr;
	}



};

// Class Killstreak.KSPawnAction_StopFire
// 0x0008 (FullSize[0x00A8] - InheritedSize[0x00A0])
class UKSPawnAction_StopFire : public UKSPawnActionBase
{
public:
	struct FGameplayTag                                EquipPoint;                                                // 0x00A0(0x0008) (Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1489);
		return ptr;
	}



};

// Class Killstreak.KSPawnAction_StopSprint
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UKSPawnAction_StopSprint : public UKSPawnActionBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1490);
		return ptr;
	}



};

// Class Killstreak.KSTimerComponent
// 0x00C0 (FullSize[0x0170] - InheritedSize[0x00B0])
class UKSTimerComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    TimerActive;                                               // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    TimerComplete;                                             // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FPGame_ReplicatedTimer                      ReplicatedTimer;                                           // 0x00D0(0x0038) (Net, NoDestructor, NativeAccessSpecifierPrivate)
	struct FKSTimerState                               TimerState;                                                // 0x0108(0x0008) (Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	struct FKSTimerState                               LocalTimerState;                                           // 0x0110(0x0008) (Transient, DuplicateTransient, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X2ZM[0x58];                                    // 0x0118(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1706);
		return ptr;
	}



	void StopTimer();
	void StartTimer(float Seconds);
	void SetTimerRefreshRate(float RefreshRate);
	void OnRep_TimerState();
	bool IsTimerComplete();
	bool IsTimerActive();
	float GetTimeRemaining();
	float GetInitialTime();
};

// Class Killstreak.KSTitle
// 0x0018 (FullSize[0x0268] - InheritedSize[0x0250])
class UKSTitle : public UKSItem
{
public:
	struct FText                                       TitleText;                                                 // 0x0250(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1707);
		return ptr;
	}



};

// Class Killstreak.KSUISessionManager
// 0x00C8 (FullSize[0x00F0] - InheritedSize[0x0028])
class UKSUISessionManager : public UObject
{
public:
	unsigned char                                      UnknownData_JUI0[0x93];                                    // 0x0028(0x0093) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bAchievementIntegrationEnabled;                            // 0x00BB(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasInitialInventory;                                      // 0x00BC(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TMBT[0x3];                                     // 0x00BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                DivertFromQueueId;                                         // 0x00C0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                DivertToQueueId;                                           // 0x00C4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EQueueDivertType                        QueueDivertType;                                           // 0x00C8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YAMI[0x3];                                     // 0x00C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ShelteredMMAttemptTimeout;                                 // 0x00CC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ShelteredMMLevelLimit;                                     // 0x00D0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ForcedBotMatchLimit;                                       // 0x00D4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MercyMatchLossesRequired;                                  // 0x00D8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasReceivedPlayerEmail;                                   // 0x00DC(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEmailCallWasSuccess;                                      // 0x00DD(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EN79[0x2];                                     // 0x00DE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     PlayerEmail;                                               // 0x00E0(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1708);
		return ptr;
	}



};

// Class Killstreak.KSVehicle
// 0x0380 (FullSize[0x0610] - InheritedSize[0x0290])
class AKSVehicle : public AWheeledVehicle
{
public:
	unsigned char                                      UnknownData_01RD[0x10];                                    // 0x0290(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSVehicleMovementComponent4W*               KSVehicleMovementComponent;                                // 0x02A0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                 // 0x02A8(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKSVehicleSeatComponent*>             Seats;                                                     // 0x02B0(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class AKSCharacter*, class UKSVehicleSeatComponent*> RiderMap;                                                  // 0x02C0(0x0050) (BlueprintVisible, ExportObject, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnVehicleSeatingChanged;                                   // 0x0310(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FText                                       VehicleName;                                               // 0x0320(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              TimeToGetIn;                                               // 0x0338(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxSpeedToEnter;                                           // 0x033C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxAngleFromVehicleToInteract;                             // 0x0340(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SwapToDriverSeatHoldTime;                                  // 0x0344(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSCharacter*                                Driver;                                                    // 0x0348(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FKSRiderSeatPair>                    Riders;                                                    // 0x0350(0x0010) (Net, ZeroConstructor, RepNotify, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AKSCharacter*>                        Interacters;                                               // 0x0360(0x0010) (Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RHLD[0x1];                                     // 0x0370(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               PreventRiderSilhouette;                                    // 0x0371(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PHXZ[0x2];                                     // 0x0372(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DetachedParachuteLinearDamping;                            // 0x0374(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeUntilParachuteDestroyed;                               // 0x0378(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     ParachuteDetachImpulse;                                    // 0x037C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               ParachuteImpulseBoneNames;                                 // 0x0388(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      ParachuteMesh;                                             // 0x0398(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VG39[0x38];                                    // 0x03A0(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnManualDetachmentAvailable;                               // 0x03D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnManualDetachmentUnavailable;                             // 0x03E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Z0UD[0x8];                                     // 0x03F8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               ValidInteractionTypes;                                     // 0x0400(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpringArmComponent*                         SpringArm;                                                 // 0x0410(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                            MainCamera;                                                // 0x0418(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H9H4[0x18];                                    // 0x0420(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RiderCameraBlendTime;                                      // 0x0438(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RiderCameraBlendExponent;                                  // 0x043C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraXTurnRate;                                           // 0x0440(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraYTurnRate;                                           // 0x0444(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraDeadZoneRate;                                        // 0x0448(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraMinHorizontalAngle;                                  // 0x044C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraMaxHorizontalAngle;                                  // 0x0450(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraMinVerticalAngle;                                    // 0x0454(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraMaxVerticalAngle;                                    // 0x0458(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FReplicatedViewInfo                         ViewInfo;                                                  // 0x045C(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              MaxHealth;                                                 // 0x0464(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentHealth;                                             // 0x0468(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GXUD[0x4];                                     // 0x046C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CurrentHealthStage;                                        // 0x0470(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PPYA[0x4];                                     // 0x0474(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnVehicleHealthChanged;                                    // 0x0478(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                               Destroyed;                                                 // 0x0488(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7ILS[0x3];                                     // 0x0489(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     LocalImpulsePosition;                                      // 0x048C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        DestroyedMesh;                                             // 0x0498(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPrimitiveComponent*>                 DamageableComponents;                                      // 0x04A0(0x0010) (ExportObject, ZeroConstructor, Transient, DuplicateTransient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NSNH[0x8];                                     // 0x04B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<float, struct FKSVehicleDestructionStage>     HealthStages;                                              // 0x04B8(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_EDamageCategory, float>            Vulnerabilities;                                           // 0x0508(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              DamageImpulseMultiplier;                                   // 0x0558(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9KFX[0x4];                                     // 0x055C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponAsset*                              DestructionDamageWeapon;                                   // 0x0560(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      DestructionDamageTypeClass;                                // 0x0568(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UR5J[0x40];                                    // 0x0570(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinSpeedToDamageHitPlayer;                                 // 0x05B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxSpeedToDamageHitPlayer;                                 // 0x05B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinPlayerDamageMultiplier;                                 // 0x05B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxPlayerDamageMultiplier;                                 // 0x05BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PlayerDamageCooldown;                                      // 0x05C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinSpeedForImpactDamage;                                   // 0x05C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxSpeedForImpactDamage;                                   // 0x05C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinImpactDamage;                                           // 0x05CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxImpactDamage;                                           // 0x05D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              VehicleDamageCooldown;                                     // 0x05D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinImpactAngleFromVehicleUp;                               // 0x05D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxImpactAngleFromVehicleUp;                               // 0x05DC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinAngleToSlideCorrect;                                    // 0x05E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxAngleToSlideCorrect;                                    // 0x05E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxSlideCorrectionSpeed;                                   // 0x05E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Z5YO[0xC];                                     // 0x05EC(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponAsset*                              ImpactDamageWeapon;                                        // 0x05F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      ImpactDamageTypeClass;                                     // 0x0600(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                           PlayerHitComponent;                                        // 0x0608(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1709);
		return ptr;
	}



	void VehicleHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void VehicleFeatureReleased();
	void VehicleFeaturePressed();
	void VehicleFeature(bool Pressed);
	void UseReleased();
	void UsePressed();
	void TurnCameraY(float Rate);
	void TurnCameraX(float Rate);
	void SwapReleased();
	void SwapPressed();
	void StopParachute();
	void Steer(float Value);
	void StartParachute();
	void ServerVehicleFeature(bool Pressed);
	void ServerUpdateRotation(const struct FReplicatedViewInfo& NewViewInfo);
	void ServerHorn(bool Pressed);
	void ServerGetOut(class AKSCharacter* Rider);
	void ServerGetInNextEmptySeat(class AKSCharacter* Rider);
	void ServerAirSpeed(float Value);
	void RiderDestroyed(class AActor* DestroyedActor);
	void ResetVehicle(const struct FRoundInitState& RoundInitState);
	void ResetInput();
	void ResetCameraRotations();
	void PlayHealthStageChange(const struct FKSVehicleDestructionStage& Stage);
	void OnRep_Riders();
	void OnRep_Driver();
	void OnRep_Destroyed();
	void OnRep_CurrentHealthStage();
	void OnRep_CurrentHealth();
	void MoveForward(float Value);
	void HornReleased();
	void HornPressed();
	void Horn(bool Pressed);
	void HideParachute();
	bool GetInHighestPriorityEmptySeat(class AKSCharacter* Rider);
	class AKSCharacter* GetDriver();
	void Explode();
	void ExitPressed();
	void Deteriorate();
	void BroadcastVehicleFeature(bool Pressed);
	void BroadcastHorn(bool Pressed);
	void Brake(float Value);
	void AirSpeed(float Value);
};

// Class Killstreak.KSVehicleBase
// 0x0200 (FullSize[0x0C90] - InheritedSize[0x0A90])
class AKSVehicleBase : public AKSCharacterFoundation
{
public:
	unsigned char                                      UnknownData_TFOQ[0x20];                                    // 0x0A90(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPGame_PositionHistoryComponent*             PositionHistoryComponent;                                  // 0x0AB0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSOutOfBoundsManager*                       OutOfBoundsManager;                                        // 0x0AB8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnOutOfBoundsBeginDel;                                     // 0x0AC0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnOutOfBoundsWarningEndDel;                                // 0x0AD0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnOutOfBoundsEndDel;                                       // 0x0AE0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FKSVehicleOutOfBoundsInfo                   OutOfBoundsInfo;                                           // 0x0AF0(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bLocalOutOfBounds;                                         // 0x0AF8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_C3A2[0xF];                                     // 0x0AF9(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnStartVehicleDestruction;                                 // 0x0B08(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class USpringArmComponent*                         SpringArm;                                                 // 0x0B18(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                            MainCamera;                                                // 0x0B20(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraBlendTime;                                           // 0x0B28(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraXTurnRate;                                           // 0x0B2C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraYTurnRate;                                           // 0x0B30(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraMinHorizontalAngle;                                  // 0x0B34(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraMaxHorizontalAngle;                                  // 0x0B38(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraMinVerticalAngle;                                    // 0x0B3C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraMaxVerticalAngle;                                    // 0x0B40(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2W7B[0x14];                                    // 0x0B44(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSSpecialEffect                            DefaultPPE;                                                // 0x0B58(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                               bDisplayDefaultPPE;                                        // 0x0BA8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DSP3[0x7];                                     // 0x0BA9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        DestroyedMesh;                                             // 0x0BB0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxHealth;                                                 // 0x0BB8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Health;                                                    // 0x0BBC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnHealthChangedDel;                                        // 0x0BC0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	struct FKSVehicleDeathInfo                         DeathInfo;                                                 // 0x0BD0(0x0020) (Edit, Net, DisableEditOnTemplate, EditConst, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UClass*                                      InstantDeathDamageType;                                    // 0x0BF0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACharacter*                                  LastCharacterToDamageMe;                                   // 0x0BF8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KZ16[0x1];                                     // 0x0C00(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsSelfDestructing;                                        // 0x0C01(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8GKD[0x6];                                     // 0x0C02(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnVehicleDeathStateChangedDel;                             // 0x0C08(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnAbilityOnePressed;                                       // 0x0C18(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnAbilityOneReleased;                                      // 0x0C28(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnAbilityTwoPressed;                                       // 0x0C38(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnAbilityTwoReleased;                                      // 0x0C48(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnAbilityThreePressed;                                     // 0x0C58(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnAbilityThreeReleased;                                    // 0x0C68(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnVehicleMoveForward;                                      // 0x0C78(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7RV9[0x8];                                     // 0x0C88(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1632);
		return ptr;
	}



	void Suicide();
	void SetMaxHealth(float NewMaxHealth);
	void SetHealth(float NewHealth);
	void ServerRequest_BroadcastOnMoveForward(float AxisValue);
	void ServerRequest_BroadcastOnAbilityTwoReleased();
	void ServerRequest_BroadcastOnAbilityTwoPressed();
	void ServerRequest_BroadcastOnAbilityThreeReleased();
	void ServerRequest_BroadcastOnAbilityThreePressed();
	void ServerRequest_BroadcastOnAbilityOneReleased();
	void ServerRequest_BroadcastOnAbilityOnePressed();
	void OutOfBoundsWarningEnd();
	void OutOfBoundsOverlapEnd();
	void OutOfBoundsOverlapBegin(float WarningLength);
	void OnRep_VehicleDeathState();
	void OnRep_OutOfBoundsInfo();
	void OnEndOutOfBounds();
	void OnBeginOutOfBounds();
	void MoveRight(float Value);
	void MoveForward(float Value);
	bool IsOutOfBounds(float* RemainingTime);
	float GetMaxHealth();
	float GetHealthPct();
	float GetHealth();
	Killstreak_EKSVehicleDeathState GetDeathState();
	void GamepadLookUp(float Value);
	void GamepadLookRight(float Value);
	void EndOutOfBounds();
	void BroadcastOnVehicleKilled(class AKSCharacterFoundation* KillerCharacter);
	void BroadcastOnStartVehicleDestruction();
	void BroadcastOnMoveForward(float AxisValue);
	void BroadcastOnAbilityTwoReleased();
	void BroadcastOnAbilityTwoPressed();
	void BroadcastOnAbilityThreeReleased();
	void BroadcastOnAbilityThreePressed();
	void BroadcastOnAbilityOneReleased();
	void BroadcastOnAbilityOnePressed();
	void BeginOutOfBounds(float WarningLength);
	void AbilityTwoReleased();
	void AbilityTwoPressed();
	void AbilityThreeReleased();
	void AbilityThreePressed();
	void AbilityOneReleased();
	void AbilityOnePressed();
};

// Class Killstreak.KSRemoteControlledVehicle
// 0x0000 (FullSize[0x0C90] - InheritedSize[0x0C90])
class AKSRemoteControlledVehicle : public AKSVehicleBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1633);
		return ptr;
	}



};

// Class Killstreak.KSVehicle_RCCrawler
// 0x0000 (FullSize[0x0C90] - InheritedSize[0x0C90])
class AKSVehicle_RCCrawler : public AKSRemoteControlledVehicle
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1710);
		return ptr;
	}



};

// Class Killstreak.KSVehicle_Remote
// 0x00A0 (FullSize[0x06B0] - InheritedSize[0x0610])
class AKSVehicle_Remote : public AKSVehicle
{
public:
	class AKSCharacter*                                OwningCharacter;                                           // 0x0610(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     JumpVector;                                                // 0x0618(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     JumpGroundTraceVector;                                     // 0x0624(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              JumpCooldown;                                              // 0x0630(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5GFY[0xC];                                     // 0x0634(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TotalBatteryDuration;                                      // 0x0640(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              UpdateReplicatedBatteryTimerPeriod;                        // 0x0644(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SQ49[0x10];                                    // 0x0648(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPGame_ReplicatedTimer                      ReplicatedBatteryTimer;                                    // 0x0658(0x0038) (Edit, Net, DisableEditOnTemplate, EditConst, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              RevealHoldDuration;                                        // 0x0690(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RevealConeAngle;                                           // 0x0694(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RevealMaxDistance;                                         // 0x0698(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RevealEffectDuration;                                      // 0x069C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0Q21[0x10];                                    // 0x06A0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1711);
		return ptr;
	}



	void SetOwningCharacter(class AKSCharacter* Rider);
	void OnRep_OwningCharacter();
	void Jump();
	void GetRemainingBattery(float* RemainingTime, float* TotalTime);
	void ExecuteReveal();
};

// Class Killstreak.KSVehicleMovementComponent4W
// 0x0050 (FullSize[0x0458] - InheritedSize[0x0408])
class UKSVehicleMovementComponent4W : public UWheeledVehicleMovementComponent4W
{
public:
	bool                                               ParachuteDeployed;                                         // 0x0408(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ParachuteDetached;                                         // 0x0409(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HNQ9[0x2];                                     // 0x040A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SpeedToConsiderParachuteDeployment;                        // 0x040C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DistanceToDeployParachute;                                 // 0x0410(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DistanceToDetachParachute;                                 // 0x0414(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DistanceToAllowManualDetachment;                           // 0x0418(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeUntilParachuteDeployed;                                // 0x041C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ParachuteDownwardSpeed;                                    // 0x0420(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ManualDetachmentAllowed;                                   // 0x0424(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BIJV[0x3];                                     // 0x0425(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ReorientedPitch;                                           // 0x0428(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeToReorientPitch;                                       // 0x042C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FallingTurnSpeed;                                          // 0x0430(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SlowFallingSpeed;                                          // 0x0434(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DefaultFallingSpeed;                                       // 0x0438(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FastFallingSpeed;                                          // 0x043C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeToReachDesiredFallSpeed;                               // 0x0440(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AirSpeedInput;                                             // 0x0444(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxAngleToPreventRoll;                                     // 0x0448(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_57J3[0xC];                                     // 0x044C(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1712);
		return ptr;
	}



	void StopParachute();
	void StartParachute();
	void OnRep_ParachuteDeployed();
	void OnRep_ManualDetachmentAllowed();
	void AttemptManualDetachment();
};

// Class Killstreak.KSVehicleSeatComponent
// 0x0058 (FullSize[0x0260] - InheritedSize[0x0208])
class UKSVehicleSeatComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData_6R1R[0x4];                                     // 0x0208(0x0004) Fix Super Size
	struct FReplicatedViewInfo                         MainCameraViewInfo;                                        // 0x020C(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FReplicatedViewInfo                         AimCameraViewInfo;                                         // 0x0214(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TFY1[0x18];                                    // 0x021C(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       AttachSocket;                                              // 0x0234(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6ZXO[0x4];                                     // 0x023C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                GetInSequence;                                             // 0x0240(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                                GetOutSequence;                                            // 0x0248(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequence*                               IdleSequence;                                              // 0x0250(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequence*                               LeanOutSequence;                                           // 0x0258(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1713);
		return ptr;
	}



	class USpringArmComponent* GetSeatSpringArm();
};

// Class Killstreak.KSVehicleWheel
// 0x0078 (FullSize[0x0168] - InheritedSize[0x00F0])
class UKSVehicleWheel : public UVehicleWheel
{
public:
	TMap<TEnumAsByte<Engine_EPhysicalSurface>, class UParticleSystem*> WheelEffectMap;                                            // 0x00F0(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    WheelParticleSystem;                                       // 0x0140(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       AttachSocketOverrideName;                                  // 0x0148(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       VehicleSpeedParticleParameter;                             // 0x0150(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EffectSpeedInterpolationAlpha;                             // 0x0158(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinimumWheelEffectSpeed;                                   // 0x015C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaximumWheelEffectSpeed;                                   // 0x0160(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_T53B[0x4];                                     // 0x0164(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1714);
		return ptr;
	}



};

// Class Killstreak.KSViewModel
// 0x0408 (FullSize[0x0628] - InheritedSize[0x0220])
class AKSViewModel : public AActor
{
public:
	unsigned char                                      UnknownData_DG98[0x60];                                    // 0x0220(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       ViewModelName;                                             // 0x0280(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKSEquipmentContainer                       EquipmentContainer;                                        // 0x0288(0x0228) (ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FVector                                     MaxAxisRotation;                                           // 0x04B0(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              IdleSecondsToResetRotation;                                // 0x04BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ResetRotationSpeedRadians;                                 // 0x04C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     RotationRatePerAxis;                                       // 0x04C4(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ODDB[0x48];                                    // 0x04D0(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bModelDataIsDirty;                                         // 0x0518(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4UG9[0x7];                                     // 0x0519(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponAsset*                              DesiredWeaponAsset;                                        // 0x0520(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<unsigned char, class UKSWeaponAttachment*>    DesiredAttachments;                                        // 0x0528(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	class UKSWeaponComponent*                          ActiveWeaponComponent;                                     // 0x0578(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKSWeaponAttachmentCosmeticInst*>     ActiveAttachmentCosmetics;                                 // 0x0580(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSWeaponSkeletalMeshComponent*              ActiveWeaponModelMeshComponent;                            // 0x0590(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKSEquipmentId                              PendingWeaponComponentId;                                  // 0x0598(0x0004) (Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5NVA[0x4];                                     // 0x059C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponAsset*                              PendingWeaponAsset;                                        // 0x05A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSWeaponComponent*                          PendingWeaponComponent;                                    // 0x05A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      PendingWeaponCosmeticIds[0x50];                            // 0x05B0(0x0050) UNKNOWN PROPERTY: SetProperty
	TArray<struct FPendingCosmeticInfo>                PendingInfos;                                              // 0x0600(0x0010) (ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ModelUpdateDebounceTime;                                   // 0x0610(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Y3L2[0xC];                                     // 0x0614(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bClearActiveModelWhileTransitioning;                       // 0x0620(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0EJL[0x7];                                     // 0x0621(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1715);
		return ptr;
	}



	void OnAnimInstanceInitialized();
	void BeginRotationReset();
};

// Class Killstreak.KSViewModelInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSViewModelInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1716);
		return ptr;
	}



	struct FName GetViewModelName();
};

// Class Killstreak.KSVOComponent
// 0x00D0 (FullSize[0x0180] - InheritedSize[0x00B0])
class UKSVOComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_WRP5[0x18];                                    // 0x00B0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSCharacter*                                CharacterOwner;                                            // 0x00C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FIMV[0x40];                                    // 0x00D0(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GlobalCooldownDuration;                                    // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0U57[0x4];                                     // 0x0114(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<int, float>                                   CooldownGroupMap;                                          // 0x0118(0x0050) (Protected, NativeAccessSpecifierProtected)
	float                                              TimeNextEventCanPlayAfter;                                 // 0x0168(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptDelegate                             OnVOLineFinished;                                          // 0x016C(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	float                                              VODuckingAmount;                                           // 0x017C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1717);
		return ptr;
	}



	void TeamStateChanged(class AKSPlayerState* PlayerState);
	void ServerPostVO(const struct FKSVoicelineEvent& VoicelineEvent);
	void PostVOToServer(const struct FKSVoicelineEvent& VoicelineEvent);
	void PostVO(const struct FKSVoicelineEvent& VoicelineEvent);
	void PlayVO(const struct FKSVoicelineEvent& VoicelineEvent);
	void PlayerStateChanged(class AKSPlayerState* PlayerState);
	void OwnerPossessedBy(class AController* Controller);
	void OnReadyToPlay();
	void ForcePlayVO(const struct FKSVoicelineEvent& VoicelineEvent);
	void FinishedLineCallback(AkAudio_EAkCallbackType in_eType, class UAkCallbackInfo* in_pCallbackInfo);
	void ConditionalPlayVO(const struct FKSVoicelineEvent& VoicelineEvent);
	void BindToTeamStateEvents(class AKSTeamState* TeamState);
	void BindToPlayerStateEvents(class AKSPlayerState* PlayerState);
	void BindToPlayerControllerEvents(class AKSPlayerController* PlayerController);
	void BindToPingManagerEvents(class UKSPingManager* PingManager);
	void BindToGameStateEvents(class AKSGameState* GameState);
	void BindToEvents();
	void BindToCharacterEvents(class AKSCharacter* Character);
	void BindToActivatableModEvents(class UKSModInst_Activated* ActivatableMod);
	void AnnounceBombSpotted(bool Armed);
};

// Class Killstreak.KSVoiceActor
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSVoiceActor : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1718);
		return ptr;
	}



};

// Class Killstreak.KSInteractionManager
// 0x00B8 (FullSize[0x0168] - InheritedSize[0x00B0])
class UKSInteractionManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData_9QTF[0x38];                                    // 0x00B0(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CachedInteractionTimeStamp;                                // 0x00E8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8TXF[0x4];                                     // 0x00EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      InteractRequestId;                                         // 0x00F0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7T0T[0x7];                                     // 0x00F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSInteractionState*                         State;                                                     // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSInteractionState*                         PreviousState;                                             // 0x0100(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSCharacter*                                User;                                                      // 0x0108(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      Interactable[0x10];                                        // 0x0110(0x0010) UNKNOWN PROPERTY: InterfaceProperty
	struct FKSInteractableCameraTransition             CameraTransition;                                          // 0x0120(0x0030) (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VEAG[0x18];                                    // 0x0150(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1314);
		return ptr;
	}



	void ServerTap(bool bAllowTapAsHold);
	void ServerStartNew(int InInteractionId, class AActor* InInteractable, class AKSCharacter* InUser);
	void ServerHoldRelease();
	void ServerHold(bool bAllowHoldAsTap);
	void ServerCancel();
	void OnInteractableDestroyed(class AActor* DestroyedInteractable);
	void ClientInteractionStopped(int InInteractionId, Killstreak_EKSInteractionResult Result);
	void ClientInteractionStarted(int InInteractionId, float Duration);
};

// Class Killstreak.KSInteractionType
// 0x0300 (FullSize[0x0328] - InheritedSize[0x0028])
class UKSInteractionType : public UObject
{
public:
	struct FName                                       InteractionMode;                                           // 0x0028(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bInteractionStartsCameraLockout;                           // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Y6OG[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSkinnableAudioEvent                        CharacterStartSound;                                       // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FSkinnableAudioEvent                        InteractableStartSound;                                    // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FSkinnableAudioEvent                        LocalStartSound;                                           // 0x0058(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_EKSInteractionResult, struct FSkinnableAudioEvent> CharacterEndSound;                                         // 0x0068(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_EKSInteractionResult, struct FSkinnableAudioEvent> InteractableEndSound;                                      // 0x00B8(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_EKSInteractionResult, struct FSkinnableAudioEvent> LocalEndSound;                                             // 0x0108(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                               bAutomaticallyPlayAudio;                                   // 0x0158(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAttachCharacterAutoAudioToSource;                         // 0x0159(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAttachInteractableAutoAudioToSource;                      // 0x015A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TQNL[0x5];                                     // 0x015B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSParticleSystemAttachment                 CharacterStartEffect;                                      // 0x0160(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FKSParticleSystemAttachment                 InteractableStartEffect;                                   // 0x0198(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_EKSInteractionResult, struct FKSParticleSystemAttachment> CharacterEndEffect;                                        // 0x01D0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_EKSInteractionResult, struct FKSParticleSystemAttachment> InteractableEndEffect;                                     // 0x0220(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UParticleSystemComponent>     CurrentCharacterEffect;                                    // 0x0270(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UParticleSystemComponent>     CurrentInteractableEffect;                                 // 0x0278(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       StartInteractionMontageRow;                                // 0x0280(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<Killstreak_EKSInteractionResult, struct FName> EndInteractionMontageSection;                              // 0x0288(0x0050) (Edit, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_EKSInteractionResult, struct FName> EndInteractionMontageRow;                                  // 0x02D8(0x0050) (Edit, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1315);
		return ptr;
	}



	void PlayInteractionAnimation(bool bIsStart, class AKSCharacter* Character, class AActor* InInteractionTarget, Killstreak_EKSInteractionResult Result, const struct FVector& InteractableLocation);
	class UParticleSystemComponent* MakeInteractableEffect(bool bIsStart, class AKSCharacter* Character, class AActor* Interactable, Killstreak_EKSInteractionResult Result, const struct FVector& InteractableLocation);
	class UParticleSystemComponent* MakeCharacterEffect(bool bIsStart, class AKSCharacter* Character, class AActor* Interactable, Killstreak_EKSInteractionResult Result, const struct FVector& InteractableLocation);
	struct FKSParticleSystemAttachment GetInteractableEffect(bool bIsStart, Killstreak_EKSInteractionResult Result);
	struct FKSParticleSystemAttachment GetCharacterEffect(bool bIsStart, Killstreak_EKSInteractionResult Result);
};

// Class Killstreak.KSMatchDataRecorder
// 0x0350 (FullSize[0x0378] - InheritedSize[0x0028])
class UKSMatchDataRecorder : public UObject
{
public:
	struct FMatchRecord                                MatchRecord;                                               // 0x0028(0x0198) (Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HVZF[0xA0];                                    // 0x01C0(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<uint64_t, struct FWeaponUseSummaryRecord>     InProgressWeaponSummaries;                                 // 0x0260(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QCEV[0xC8];                                    // 0x02B0(0x00C8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1368);
		return ptr;
	}



	void PushJsonMatchData();
	void OnPlayerLogout(class AGameModeBase* GameMode, class AController* Player);
	void OnPlayerLogin(class AGameModeBase* GameMode, class APlayerController* NewPlayer);
};

// Class Killstreak.KSMath
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSMath : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1369);
		return ptr;
	}



	struct FVector STATIC_ShiftLocationBetweenTransforms(const struct FVector& Location, const struct FTransform& SourceTransform, const struct FTransform& TargetTransform);
	struct FInterpCurveVector2D STATIC_ScaleInterpCurveVector2D(const struct FInterpCurveVector2D& InCurve, float InScale);
	struct FInterpCurveFloat STATIC_ScaleInterpCurveFloatInput(const struct FInterpCurveFloat& InCurve, float InScale);
	struct FRotator STATIC_RInterpConstantToDirectional(const struct FRotator& Current, const struct FRotator& Target, float DeltaTime, float InterpSpeed);
	struct FRotator STATIC_GetRotationFromNormals(const struct FVector& From, const struct FVector& To);
	int STATIC_GetLineSphereIntersectionPoints(const struct FVector& LinePointA, const struct FVector& LinePointB, const struct FVector& SphereOrigin, float SphereRadius, struct FVector* OutPointA, struct FVector* OutPointB);
	bool STATIC_GetLineRectangleIntersectionPoints(const struct FVector2D& LinePointA, const struct FVector2D& LinePointB, const struct FVector2D& RectCenter, const struct FVector2D& RectExtent, float RectYaw, struct FVector2D* IntPoint1, struct FVector2D* IntPoint2);
	bool STATIC_GetLineCircleIntersectionPoints(const struct FVector2D& LinePointA, const struct FVector2D& LinePointB, const struct FVector2D& CircleCenter, float CircleRadius, struct FVector2D* IntPoint1, struct FVector2D* IntPoint2);
	float STATIC_FloatInterpCurveIntegralTrapezoid(const struct FInterpCurveFloat& InCurve, float MinTime, float MaxTime, float DeltaTime);
	float STATIC_FInterpRadiansTo(float Current, float Target, float DeltaTime, float InterpSpeed);
	float STATIC_FInterpEaseOutViewStyle(float A, float B, float Alpha, float Exp);
	float STATIC_FInterpEaseOutInverse(float Time, float Exp);
	float STATIC_FInterpEaseInViewStyle(float A, float B, float Alpha, float Exp);
	float STATIC_FInterpDegreesTo(float Current, float Target, float DeltaTime, float InterpSpeed);
	struct FVector2D STATIC_ClampVector2D(const struct FVector2D& InVector2D, float MinSize, float MaxSize);
};

// Class Killstreak.KSMedPack
// 0x0008 (FullSize[0x0730] - InheritedSize[0x0728])
class AKSMedPack : public AKSWeapon
{
public:
	bool                                               bUseWhileMovingOverride;                                   // 0x0728(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanStopFire;                                              // 0x0729(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2HZQ[0x6];                                     // 0x072A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1370);
		return ptr;
	}



	float GetBuildupTime();
};

// Class Killstreak.KSMeleeTargetingModule
// 0x0058 (FullSize[0x0400] - InheritedSize[0x03A8])
class UKSMeleeTargetingModule : public UKSProjectileTargetingModule
{
public:
	unsigned char                                      UnknownData_P0CW[0x8];                                     // 0x03A8(0x0008) Fix Super Size
	class UKSWeaponAsset_Melee*                        MeleeAsset;                                                // 0x03B0(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     ImpactOnCharacterComponentSize;                            // 0x03B8(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E3HI[0x4];                                     // 0x03C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          ImpactOnCharacterComponentMaterial;                        // 0x03C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ImpactOnCharacterColorParameterName;                       // 0x03D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ImpactOnCharacterCookParameterName;                        // 0x03D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 ImpactOnCharacterMesh;                                     // 0x03E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    ImpactOnCharacterMaterialInstance;                         // 0x03E8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        ImpactOnCharacterComponent;                                // 0x03F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L9DN[0x8];                                     // 0x03F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1371);
		return ptr;
	}



};

// Class Killstreak.KSMeleeWeaponAssetDrop
// 0x0000 (FullSize[0x0848] - InheritedSize[0x0848])
class AKSMeleeWeaponAssetDrop : public AKSWeaponAssetDrop
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1372);
		return ptr;
	}



};

// Class Killstreak.KSMercManager
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSMercManager : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1373);
		return ptr;
	}



	void Uninitialize();
	bool IsItemEquippedInSlot(class UKSItem* CosmeticItem, Killstreak_EMercCosmeticSlot eSlot, int SlotPosition, class UKSJobItem* JobItem);
	bool IsItemEquippedInAnySlot(class UKSItem* CosmeticItem, Killstreak_EMercCosmeticSlot eSlot, TArray<int> SlotPosition, class UKSJobItem* JobItem);
	void Initialize();
	class UKSLoadoutDataFactory* GetLoadoutDataFactory();
	void GetJobItems();
	bool GetEquippedCosmeticItemBySlot(Killstreak_EMercCosmeticSlot eSlot, int SlotPosition, class UKSJobItem* JobItem, class UKSItem** CosmeticItem);
	bool EquipCosmeticItemToSlot(Killstreak_EMercCosmeticSlot eSlot, int SlotPosition, class UKSJobItem* JobItem, class UKSItem* CosmeticItem, bool bGlobal);
	void ClearCosmeticItemOnSlot(Killstreak_EMercCosmeticSlot eSlot, int SlotPosition, class UKSJobItem* JobItem, bool bGlobal);
};

// Class Killstreak.KSMercMasteryManager
// 0x0000 (FullSize[0x0210] - InheritedSize[0x0210])
class UKSMercMasteryManager : public UKSActivityManagerBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1374);
		return ptr;
	}



	class UKSActivity* STATIC_StaticGetMercMasteryActivity(class UObject* WorldContextObject, class UKSJobItem* Job);
	float GetWinPercentForJob(class UKSJobItem* JobItem, class AKSPlayerController* Player);
	class UKSActivityInstance* GetMercXpActivityInstanceForJob(class UKSJobItem* JobItem);
	class UKSActivity* GetMercMasteryActivity(class UKSJobItem* Job);
	class UKSJobItem* GetLowestJobForActivityType(const struct FGameplayTag& ActivityTag, class AKSPlayerController* Player);
	int GetJobMasteryLevelForXpValue(class UKSJobItem* JobItem, int XpValue);
	class UKSJobItem* GetHighestJobForActivityType(const struct FGameplayTag& ActivityTag, class AKSPlayerController* Player);
};

// Class Killstreak.KSMiniMapAssistant
// 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
class AKSMiniMapAssistant : public AInfo
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1375);
		return ptr;
	}



	void GetRelativeMinimapHeightToLocalPlayer(const struct FVector& ActorLocation, Killstreak_EKSRelativeMinimapHeight* RelativeHeight);
};

// Class Killstreak.KSMinimapRendererBase
// 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
class AKSMinimapRendererBase : public AActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1376);
		return ptr;
	}



	float GetMinimapWidth();
};

// Class Killstreak.KSModDrop
// 0x0000 (FullSize[0x0380] - InheritedSize[0x0380])
class AKSModDrop : public AKSItemDrop
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1377);
		return ptr;
	}



	void HandleNewItemAssetReceived();
};

// Class Killstreak.KSReverseTracker
// 0x0010 (FullSize[0x00B0] - InheritedSize[0x00A0])
class UKSReverseTracker : public UKSAccoladeTracker
{
public:
	TArray<struct FPlayerDamageInfo>                   PlayerDamageInfo;                                          // 0x00A0(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1639);
		return ptr;
	}



	void StoreDamageTakenEvent(const struct FAdvancedCombatEvent& DamageEvent);
	void HandleTrackerAccolade(class AKSPlayerState* PlayerState);
	bool CheckVictimDamageInstigator(class AKSPlayerState* Instigator, class AKSPlayerState* Victim, struct FPlayerDamageInfo* OutPlayerInfo);
};

// Class Killstreak.KSRewardsCalculator
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSRewardsCalculator : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1640);
		return ptr;
	}



	void GetStatsOrdering(TArray<Killstreak_EPlayerStatType>* StatsOrdering);
	bool GetRewardsFromStat(const struct FPlayerMatchStatInfo& PlayerStatInfo, float* OutExpRewardValue);
	void CalcPlayerRewards(int PlayerTeamNum, class UKSPlayerMatchStats* playerStats, struct FPlayerRewardsSummary* Rewards, class AKSPlayerController* PlayerController);
};

// Class Killstreak.KSSpectatorPawn
// 0x0000 (FullSize[0x02A8] - InheritedSize[0x02A8])
class AKSSpectatorPawn : public ASpectatorPawn
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1643);
		return ptr;
	}



	void GamepadLookUp(float Value);
	void GamepadLookRight(float Value);
};

// Class Killstreak.KSRideAlongSpectatorPawn
// 0x0000 (FullSize[0x02A8] - InheritedSize[0x02A8])
class AKSRideAlongSpectatorPawn : public AKSSpectatorPawn
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1644);
		return ptr;
	}



};

// Class Killstreak.KSRocket
// 0x0078 (FullSize[0x0530] - InheritedSize[0x04B8])
class AKSRocket : public ACharacter
{
public:
	unsigned char                                      UnknownData_QD2S[0x8];                                     // 0x04B8(0x0008) Fix Super Size
	float                                              RocketRotationCatchUpRadians;                              // 0x04C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraInitialLockoutTime;                                  // 0x04C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WMYO[0x8];                                     // 0x04C8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USpringArmComponent*                         SpringArm;                                                 // 0x04D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                            MainCamera;                                                // 0x04D8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSWeaponAsset*                              ExplodeWeaponAsset;                                        // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FlightDuration;                                            // 0x04E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WDQH[0x4];                                     // 0x04EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnFlightDurationTimerTick;                                 // 0x04F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnFlightDurationTimerActive;                               // 0x0500(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnFlightDurationTimerComplete;                             // 0x0510(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UKSTimerComponent*                           FlightDurationTimer;                                       // 0x0520(0x0008) (Edit, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XU3S[0x8];                                     // 0x0528(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1645);
		return ptr;
	}



	void OnRep_FlightDurationTimer();
	void OnIgnitionKickoff();
	void NativeOnProjectileStopped(const struct FHitResult& HitResult);
	void NativeOnIgnitionKickoff();
	void NativeDetonate(const struct FProjectileExplosionInfo& ExplosionInfo);
	class UKSWeaponAsset* GetWeaponAsset();
	float GetFlightDuration();
	void GamepadLookUp(float Value);
	void GamepadLookRight(float Value);
	void FlightDurationTimerTick(float Seconds);
	void FlightDurationTimerComplete();
	void FlightDurationTimerActive(bool bActive);
	void EnableCameraControl();
	void Detonate(const struct FProjectileExplosionInfo& ExplosionInfo);
	void BroadcastDetonate(const struct FProjectileExplosionInfo& ExplosionInfo);
};

// Class Killstreak.KSRocketMovementComponent
// 0x0040 (FullSize[0x06C0] - InheritedSize[0x0680])
class UKSRocketMovementComponent : public UCharacterMovementComponent
{
public:
	float                                              MaxSpeed;                                                  // 0x0680(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RocketAcceleration;                                        // 0x0684(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RocketIgniteTime;                                          // 0x0688(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RocketRotationCatchUpDegrees;                              // 0x068C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSmoothRotation;                                           // 0x0690(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YZVS[0x7];                                     // 0x0691(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnIgnitionKickoff;                                         // 0x0698(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRocketStop;                                              // 0x06A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6M9P[0x8];                                     // 0x06B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1646);
		return ptr;
	}



	void StopSimulating(const struct FHitResult& HitResult);
	void OnRocketStopDelegate__DelegateSignature(const struct FHitResult& ImpactResult);
	void OnIgnitionKickoffDelegate__DelegateSignature();
};

// Class Killstreak.KSRoundBasedObject
// 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
class AKSRoundBasedObject : public AActor
{
public:
	unsigned char                                      UnknownData_SHHV[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SideNum;                                                   // 0x0228(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_ELocalRequirements                      SkyDiverRelevanceRules;                                    // 0x022C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_ELimitPerRound                          SkyDiverLimit;                                             // 0x022D(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MPRE[0x2];                                     // 0x022E(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1647);
		return ptr;
	}



	void ReceiveGameSetup();
	void OnSkyDiveStarted(class AKSCharacter* SkyDiver);
	void OnSkyDiveSkipped(class AKSCharacter* SkyDiver);
	void OnSkyDiveEnded(class AKSCharacter* SkyDiver);
	void OnRoundStarted(const struct FRoundInitState& RoundInitState);
	void OnRoundEnded(class AKSGameState* GameState, const struct FRoundResult& RoundResult);
	void OnGameSetup();
	bool IsSkyDivingActive();
	bool CheckPlayerForMatchingTeam(class APlayerController* PC);
	bool CheckLocalPlayerForMatchingTeam();
	bool CheckCharacterForMatchingTeam(class AKSCharacter* Character);
};

// Class Killstreak.KSRoundedSquareDeadZoneFilter
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UKSRoundedSquareDeadZoneFilter : public UKSAnalogStickFilter
{
public:
	float                                              CardinalSize;                                              // 0x0038(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CornerRadius;                                              // 0x003C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1648);
		return ptr;
	}



};

// Class Killstreak.KSItem_Gender
// 0x0008 (FullSize[0x0258] - InheritedSize[0x0250])
class UKSItem_Gender : public UKSItem
{
public:
	struct FKSCharacterGender                          Gender;                                                    // 0x0250(0x0002) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_K8PY[0x6];                                     // 0x0252(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1316);
		return ptr;
	}



	struct FKSCharacterGender GetGender();
};

// Class Killstreak.KSItemDataTable
// 0x0020 (FullSize[0x00E8] - InheritedSize[0x00C8])
class UKSItemDataTable : public UDataTable
{
public:
	TArray<struct FString>                             DirectoriesToScan;                                         // 0x00C8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              ItemClassesToFilter;                                       // 0x00D8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1319);
		return ptr;
	}



};

// Class Killstreak.ItemDropWidgetInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UItemDropWidgetInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1320);
		return ptr;
	}



	void ShowLabel();
	void SetOwningWidgetComponent(class UActorComponent* WidgetComp);
	void SetLabel(const struct FText& LabelText);
	void HideLabel();
};

// Class Killstreak.KSItemStimuliSourceComponent
// 0x0000 (FullSize[0x00C8] - InheritedSize[0x00C8])
class UKSItemStimuliSourceComponent : public UAIPerceptionStimuliSourceComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1322);
		return ptr;
	}



};

// Class Killstreak.KSJobEquipmentGivingComponent
// 0x0038 (FullSize[0x00E8] - InheritedSize[0x00B0])
class UKSJobEquipmentGivingComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_NY5F[0x38];                                    // 0x00B0(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1323);
		return ptr;
	}



};

// Class Killstreak.KSPlayerModInstance
// 0x0108 (FullSize[0x01B8] - InheritedSize[0x00B0])
class UKSPlayerModInstance : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnModInstRemoved;                                          // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WC84[0x20];                                    // 0x00C0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnModTriggered;                                            // 0x00E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bPreventModInitialization;                                 // 0x00F0(0x0001) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInitialized;                                              // 0x00F1(0x0001) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EFJ2[0x6];                                     // 0x00F2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSPlayerModManager*                         OwningPlayerModManager;                                    // 0x00F8(0x0008) (Net, ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSCharacter*                                OwnerCharacter;                                            // 0x0100(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EDCN[0x8];                                     // 0x0108(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSCharacterFoundation*                      OwnerCharacterFoundation;                                  // 0x0110(0x0008) (Net, ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSPlayerMod*                                ModAsset;                                                  // 0x0118(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSPlayerState*                              ModInstigator;                                             // 0x0120(0x0008) (Net, ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSModSource                            ModSource;                                                 // 0x0128(0x0001) (Net, ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HH53[0x3];                                     // 0x0129(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AKSWeapon>                    WeaponInstigator;                                          // 0x012C(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                InstanceCount;                                             // 0x0134(0x0004) (Net, ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                LocalInstanceCount;                                        // 0x0138(0x0004) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUsesDuration;                                             // 0x013C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDisplaysDuration;                                         // 0x013D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_REB1[0x12];                                    // 0x013E(0x0012) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bUseAssetDataTableManager;                                 // 0x0150(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4C7V[0x7];                                     // 0x0151(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDynamicSkinTable*                           AssetDataTableManager;                                     // 0x0158(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDataTableInfo>                      PersistentSkinDataTables;                                  // 0x0160(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDataTableInfo>                      UISkinDataTables;                                          // 0x0170(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WCQO[0x18];                                    // 0x0180(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bLatencyElapsed;                                           // 0x0198(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0J8M[0xF];                                     // 0x0199(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FKSPlayerModInputBinding>            InputActions;                                              // 0x01A8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1378);
		return ptr;
	}



	bool UsesDuration();
	void TryTransferPlayerState(class AKSPlayerState* OldPlayerState, class AKSPlayerState* NewPlayerState);
	bool StopAnimationFromEvent(const struct FName& AnimEventName, class UKSCharacterAnimInst* CharAnimInstance);
	bool ReactsToAnimationEvent(const struct FName& AnimEventName, int* Priority);
	void PlayAnimationFromEvent(const struct FName& AnimEventName, class UKSCharacterAnimInst* CharAnimInstance);
	bool OwnerIsLocal();
	bool OwnerHasAuthority();
	bool OverrideInteraction(float* Duration, class UClass** Type);
	void OnRep_OwnerCharacterFoundation();
	void OnRep_ModAsset();
	void OnRep_InstanceCount();
	void OnOwnerDied(class AKSCharacterFoundation* KillerCharacter, class AKSCharacterFoundation* KilledCharacter);
	void OnNewCharacterFoundation();
	void OnModInitialized();
	void OnInstanceCountChanged(int DeltaInstances);
	void OnInputActionTriggered(const struct FName& ActionName, bool bReleasedAction);
	void OnEstimatedLatencyElapsed();
	void OnCharacterFoundationOwnerDeath(class AKSCharacterFoundation* Killer, class AKSCharacterFoundation* Killed);
	float ModifyDamageDealt(float DamageAmount, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class AActor* DamagedActor);
	void ModEventReceived(const struct FName& ModEvent);
	void InitializeMod();
	bool HasEstimatedLatencyElapsed();
	class AKSVehicleBase* GetVehicleOwner();
	class AKSPlayerState* GetPlayerStateOwner();
	class AKSPlayerModManager* GetOwningPlayerModManager();
	Killstreak_EPlayerModType GetModType();
	Killstreak_EKSModSource GetModSource();
	class AKSPlayerState* GetModInstigator();
	class UKSPlayerMod* GetModAsset();
	int GetInstanceCount();
	void GetDuration(float* Duration, float* RemainingTime, bool* UsesDuration);
	int GetClampedInstanceCount();
	class AKSCharacter* GetCharacterOwner();
	class AKSCharacterFoundation* GetCharacterFoundationOwner();
	void FinishAssetPreload();
	void BroadcastModTriggeredInternal();
	void BroadcastModTriggered();
};

// Class Killstreak.KSModInst_Activated
// 0x02C0 (FullSize[0x0478] - InheritedSize[0x01B8])
class UKSModInst_Activated : public UKSPlayerModInstance
{
public:
	bool                                               bCanBecomeFullyChargedOnEndActivation;                     // 0x01B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUsesAbilityMovement;                                      // 0x01B9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_EMovementMode>                  MovementMode;                                              // 0x01BA(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Killstreak_EKSGame_CustomMovement>     CustomMovementMode;                                        // 0x01BB(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FFQM[0x4];                                     // 0x01BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSTimerComponent*                           LockoutTimer;                                              // 0x01C0(0x0008) (Edit, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_A3WE[0x10];                                    // 0x01C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsLocked;                                                 // 0x01D8(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OKJ7[0x7];                                     // 0x01D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnModLocked;                                               // 0x01E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnModLockoutTick;                                          // 0x01F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UZTF[0x10];                                    // 0x0200(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSTimerComponent*                           SetupTimer;                                                // 0x0210(0x0008) (Edit, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnBonusAbilityDurationReceived;                            // 0x0218(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	float                                              BonusAbilityDuration;                                      // 0x0228(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              LocalBonusAbilityDuration;                                 // 0x022C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FKSActionRestrictor                         SetupActionRestrictor;                                     // 0x0230(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	int                                                CurrentSetupRestrictor;                                    // 0x0238(0x0004) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKSActionRestrictor                         RecoveryActionRestrictor;                                  // 0x023C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bUseDownedActionRestrictors;                               // 0x0244(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKSActionRestrictor                         DownedSetupActionRestrictor;                               // 0x0245(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FKSActionRestrictor                         DownedRecoveryActionRestrictor;                            // 0x024D(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2XGK[0x1B];                                    // 0x0255(0x001B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnModActivated;                                            // 0x0270(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UKSPlayerMod_Activated*                      ActivateMod;                                               // 0x0280(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnChargeChanged;                                           // 0x0288(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                               bEndActivationOnNullCharacter;                             // 0x0298(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDelayChargeConsumption;                                   // 0x0299(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bConsumeChargeOnEndActivation;                             // 0x029A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RJ2Y[0x5];                                     // 0x029B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnModSetup;                                                // 0x02A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               ActivationSoundEvent;                                      // 0x02B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               SpacialActivationSoundEvent;                               // 0x02B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               SetupSoundEvent;                                           // 0x02C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               SpacialSetupSoundEvent;                                    // 0x02C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               DeactivationSoundEvent;                                    // 0x02D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUnCrouchOnActivation;                                     // 0x02D8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanActivateWithoutRequiredCharge;                         // 0x02D9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanAddPerSecondChargeWhileActive;                         // 0x02DA(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PREU[0x5];                                     // 0x02DB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnModFailedToActivate;                                     // 0x02E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VNGU[0x30];                                    // 0x02F0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CurrentCharge;                                             // 0x0320(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_T6TD[0xFC];                                    // 0x0324(0x00FC) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bDeactivateWhenWeaponFired;                                // 0x0420(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4UDL[0x7];                                     // 0x0421(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              WeaponsToIgnore;                                           // 0x0428(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDeactivateWhenMacGuffinFired;                             // 0x0438(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VTSH[0x7];                                     // 0x0439(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              DamageTypesThatCancel;                                     // 0x0440(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnModHoldChanged;                                          // 0x0450(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	int                                                CurrentlyHeldId;                                           // 0x0460(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                LocalHeldId;                                               // 0x0464(0x0004) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCurrentlyHeld;                                            // 0x0468(0x0001) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SD0F[0x7];                                     // 0x0469(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSModInst_ActivatedStateMachine*            ActivatedStateMachine;                                     // 0x0470(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1379);
		return ptr;
	}



	void UpdateChargeDirect(float DeltaCharge);
	void UpdateCharge(int Delta);
	bool TryToCancel();
	bool TryToActivate();
	void SetAbilityMovementMode(TEnumAsByte<Engine_EMovementMode> InMovementMode, TEnumAsByte<Killstreak_EKSGame_CustomMovement> InCustomMovementMode);
	void SetAbilityMovementDisabled(bool bDisable);
	void RefundCharge();
	void Recharge();
	void OnSetupComplete();
	void OnSetupActive(bool bIsTimerActive);
	void OnSetup();
	void OnRep_SetupTimer();
	void OnRep_LockoutTimer();
	void OnRep_Locked();
	void OnRep_CurrentlyHeldId();
	void OnRep_CurrentCharge();
	void OnRep_BonusAbilityDuration();
	void OnOwnerDownStateChanged(class AKSPlayerState* DownedPlayer);
	void OnLockoutTimerTick(float Seconds);
	void OnLockoutTimerActive(bool bIsTimerActive);
	void OnFullyCharged();
	void OnEndRecovery();
	void OnEndActivationWarning();
	void OnEndActivation();
	void OnActivation();
	void OnAbilityReleased();
	bool IsLocked();
	bool IsInSetup();
	bool IsInActivatableState(Killstreak_EKSAbilityUsageFailureType* OutAbilityFailureType);
	bool IsCharacterAbility();
	bool IsActivated();
	bool IsAbilityMovementDisabled();
	void HandleWeaponFireStarted(class AKSWeapon* Weapon);
	void HandleSetupTimerComplete();
	void HandleSetupTimerActive(bool bIsTimerActive);
	void HandleCharacterOwnerTakeDamage(class AActor* InActor, float DamageAmount, class UDamageType* DamageTypeCDO, class AController* EventInstigator, class AActor* DamageCauser);
	class UKSModInst_ActivatedStateMachine* GetStateMachine();
	struct FKSActionRestrictor GetSetupActionRestrictor();
	int GetRequiredCharge();
	struct FKSActionRestrictor GetRecoveryActionRestrictor();
	float GetPerSecondCharge();
	int GetMaximumCharge();
	float GetLockoutTimeRemaining();
	class UKSPlayerMod_Activated* GetDisplayActivatedModAsset();
	int GetDefaultCharge();
	int GetCurrentCharge();
	float GetBonusDuration();
	class UKSPlayerMod_Activated* GetActivatedModAsset();
	float GetAbilitySetupDuration();
	float GetAbilityRecoveryDuration();
	float GetAbilityDuration();
	void EndActivation();
	void ConsumeChargeAmount(float Amount);
	void ConsumeCharge();
	void ClientModFailedToActivate(Killstreak_EKSAbilityUsageFailureType AbilityFailureType);
	bool CanTryToCancel();
	bool CanActivateWhileDowned();
	bool CanActivateNow(Killstreak_EKSAbilityUsageFailureType* OutAbilityFailureType);
	void BroadcastModActivated(bool bActive);
	void BroadcastEndRecovery();
	void BroadcastEndActivationWarning();
	void BroadcastCancel();
	void BeginActivation();
	void AwardBonusAbilityDuration(float BonusDuration);
	void AbilitySetupRequestTimeout();
	void AbilityActivationRequestTimeout();
};

// Class Killstreak.KSModInst_ActivatedStateMachine
// 0x00B0 (FullSize[0x0528] - InheritedSize[0x0478])
class UKSModInst_ActivatedStateMachine : public UKSModInst_Activated
{
public:
	TMap<struct FName, class UKSPlayerMod_Activated*>  ManagedModAssets;                                          // 0x0478(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FStateMachineModEntry>               ManagedMods;                                               // 0x04C8(0x0010) (Net, ZeroConstructor, Transient, DuplicateTransient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSModInst_Activated*                        CurrentActiveMod;                                          // 0x04D8(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSModInst_Activated*                        LocalActiveMod;                                            // 0x04E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bChargeAll;                                                // 0x04E8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSharedDuration;                                           // 0x04E9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDelayActivation;                                          // 0x04EA(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7FRQ[0x5];                                     // 0x04EB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FStateMachineObjectEntry>            StateStorage;                                              // 0x04F0(0x0010) (Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnStateStorageChangedDel;                                  // 0x0500(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_09HQ[0x18];                                    // 0x0510(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1380);
		return ptr;
	}



	bool TryToSetAsActiveMod(const struct FName& Key);
	void RemoveFromStateStorage(const struct FStateMachineObjectEntry& Entry);
	void OnRep_StateStorage();
	void OnRep_CurrentActiveMod();
	void OnActiveModFailedToActivate(class UKSModInst_Activated* AttemptedMod, Killstreak_EKSAbilityUsageFailureType AbilityFailureType);
	void OnActiveModChargeChanged(class UKSModInst_Activated* ChargingModInstance);
	bool IsUsingSharedDuration();
	bool GetStoredPlayerStates(const struct FName& Key, TArray<class AKSPlayerState*>* OutReferences);
	bool GetStateStorage(const struct FName& Key, TArray<struct FStateMachineObjectEntry>* OutReferences);
	void GetManagedModInstances(TArray<class UKSModInst_Activated*>* OutManagedMods);
	class UKSModInst_Activated* GetCurrentActiveMod();
	void ClearStateStorage(const struct FName& Key);
	void AddToStateStorage(const struct FStateMachineObjectEntry& Entry);
	void AddPlayerStateToStateStorage(const struct FName& Key, class AKSPlayerState* PlayerState);
	void ActivateStateMachine();
};

// Class Killstreak.KSModInst_ActivatedTarget
// 0x0110 (FullSize[0x0588] - InheritedSize[0x0478])
class UKSModInst_ActivatedTarget : public UKSModInst_Activated
{
public:
	class UKSPlayerMod_ActivatedTarget*                ActivateTargetMod;                                         // 0x0478(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSCharacter*                                Target;                                                    // 0x0480(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_II74[0x8];                                     // 0x0488(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDynamicSkinTable*                           TargetAssetDataTableManager;                               // 0x0490(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1MNR[0xF0];                                    // 0x0498(0x00F0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1381);
		return ptr;
	}



	class AKSCharacter* GetCachedTarget();
	void BroadcastTarget(class AKSCharacter* InTarget);
	void AssignTarget(class AKSCharacter** OutTarget);
};

// Class Killstreak.KSModInst_ActivatedViewMode
// 0x0020 (FullSize[0x0498] - InheritedSize[0x0478])
class UKSModInst_ActivatedViewMode : public UKSModInst_Activated
{
public:
	struct FScriptMulticastDelegate                    OnViewStateChange;                                         // 0x0478(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	Killstreak_EModViewModeState                       CurrentState;                                              // 0x0488(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_49CQ[0xF];                                     // 0x0489(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1382);
		return ptr;
	}



};

// Class Killstreak.KSModInst_OnDamageOther
// 0x0018 (FullSize[0x01D0] - InheritedSize[0x01B8])
class UKSModInst_OnDamageOther : public UKSPlayerModInstance
{
public:
	float                                              MinimumDamage;                                             // 0x01B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseActualDamageDone;                                      // 0x01BC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BX2J[0x3];                                     // 0x01BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<Killstreak_EDamageCategory>                 ValidDamageCategories;                                     // 0x01C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1383);
		return ptr;
	}



	void OnMatchingDamageDealt(class AActor* DamagedActor, float Damage, class AActor* DamageCauser);
	void OnInstigatedDamageNotify(class AKSCharacterBase* Damager, const struct FCombatEventInfo& CombatEvent);
	bool DoesDamageMatch(class AKSCharacterBase* Damager, float Damage, class UKSDamageTypeBase* DamageType, class AActor* DamagedActor, class AActor* DamageCauser, const struct FCombatEventInfo& CombatEvent);
};

// Class Killstreak.KSModInst_ApplyDebuffOnDamage
// 0x0018 (FullSize[0x01E8] - InheritedSize[0x01D0])
class UKSModInst_ApplyDebuffOnDamage : public UKSModInst_OnDamageOther
{
public:
	TArray<class UKSPlayerMod*>                        DebuffsToApply;                                            // 0x01D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bGiveDebuffsUniquely;                                      // 0x01E0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PBCC[0x3];                                     // 0x01E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DebuffDuration;                                            // 0x01E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1384);
		return ptr;
	}



};

// Class Killstreak.KSModInst_OnDownOther
// 0x0008 (FullSize[0x01C0] - InheritedSize[0x01B8])
class UKSModInst_OnDownOther : public UKSPlayerModInstance
{
public:
	bool                                               bListenToDowns;                                            // 0x01B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bListenToEliminations;                                     // 0x01B9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bListenToAssists;                                          // 0x01BA(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAffectFriendlies;                                         // 0x01BB(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GU5O[0x4];                                     // 0x01BC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1385);
		return ptr;
	}



	void OnEliminateOther(class AKSCharacter* Other);
	void OnDownOther(class AKSCharacter* Other);
	void OnAssistEliminateOther(class AKSCharacter* Other);
	void EliminationTriggered(class AKSCharacter* Other);
	void DownTriggered(class AKSCharacter* Other);
	void AssistTriggered(class AKSCharacter* Other);
};

// Class Killstreak.KSModInst_ApplyDebuffOnDownOther
// 0x0080 (FullSize[0x0240] - InheritedSize[0x01C0])
class UKSModInst_ApplyDebuffOnDownOther : public UKSModInst_OnDownOther
{
public:
	TArray<class UKSPlayerMod*>                        DebuffsToApply;                                            // 0x01C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bGiveDebuffsUniquely;                                      // 0x01D0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L4O1[0x3];                                     // 0x01D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DebuffDuration;                                            // 0x01D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRemoveDebuffOnRevive;                                     // 0x01D8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1F3A[0x67];                                    // 0x01D9(0x0067) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1386);
		return ptr;
	}



	void OnDebuffsRemovedFromCharacter(class AKSCharacter* Character);
	void OnDebuffsAppliedToCharacter(class AKSCharacter* Character);
};

// Class Killstreak.KSModInst_GiveItemOnActivation
// 0x0020 (FullSize[0x0498] - InheritedSize[0x0478])
class UKSModInst_GiveItemOnActivation : public UKSModInst_Activated
{
public:
	bool                                               bGiveItemOnNewCharacter;                                   // 0x0478(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_J1DN[0x3];                                     // 0x0479(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptDelegate                             AsyncItemGiveDelegate;                                     // 0x047C(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RX8Y[0x4];                                     // 0x048C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UObject*                                     GivenItem;                                                 // 0x0490(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1387);
		return ptr;
	}



	void TryToRemoveItem();
	void TryToGiveItem(int Index);
	void OnRep_GivenItem();
	void OnNewGivenItem();
	void OnItemRemoved();
	int GetOnNewCharacterItemIndex();
	void AsyncItemGiveComplete(class UKSItem* Item, class UObject* GivenObject, const struct FGiveItemParameters& InGiveItemParameters, bool bSuccess);
};

// Class Killstreak.KSModInst_GiveWeaponOnActivation
// 0x0068 (FullSize[0x0500] - InheritedSize[0x0498])
class UKSModInst_GiveWeaponOnActivation : public UKSModInst_GiveItemOnActivation
{
public:
	bool                                               bActivatesOnIdle;                                          // 0x0498(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bActivatesOnFire;                                          // 0x0499(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N3SQ[0xE];                                     // 0x049A(0x000E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bRestrictSwapping;                                         // 0x04A8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSwapToMain;                                               // 0x04A9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bConsiderAsSwapToPrevious;                                 // 0x04AA(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NWHO[0x25];                                    // 0x04AB(0x0025) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bEndActivationOnHolster;                                   // 0x04D0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEndActivationOnEmptyClip;                                 // 0x04D1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEndActivationOnExhausted;                                 // 0x04D2(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bConsumeChargeWhenItemRemoved;                             // 0x04D3(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bConsumeChargeWhenFired;                                   // 0x04D4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bConsumeChargeWhenAmmoConsumed;                            // 0x04D5(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bReplenishesAmmoOnFullyCharged;                            // 0x04D6(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bReplenishesAmmoOnDurationIncreased;                       // 0x04D7(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldBroadcastWeaponHits;                                // 0x04D8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_361Z[0x7];                                     // 0x04D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                SwapFromRetryTimer;                                        // 0x04E0(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SwapFromRetryTime;                                         // 0x04E8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSwappingOff;                                              // 0x04EC(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_G3WQ[0x3];                                     // 0x04ED(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AActor*>                              DeployableActors;                                          // 0x04F0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1388);
		return ptr;
	}



	void WeaponAmmoConsumed(class AKSWeapon* Weapon, int AmmoConsumed);
	bool TryToSwapBackToWeapon();
	void SwapFromRetry();
	void RegisterDeployable(class AActor* DeployableAsActor);
	void ReflectChargeAmmo();
	void PrepareSwapTo(class AKSWeapon* SwapToWeapon);
	void OnWeaponStateChanged(class AKSWeapon* Weapon, Killstreak_EWeaponStateNew OldState, Killstreak_EWeaponStateNew NewState);
	void OnGivenWeaponInstigatedDamage(class AKSCharacterBase* InPawn, const struct FCombatEventInfo& DamageInfo);
	void OnDeployableDestroyed(class AActor* DestroyedDeployableActor);
	void HandleWeaponExhausted(class AKSWeapon* Weapon);
	void GivenWeaponInstigatedDamage(class AKSCharacterBase* InPawn, const struct FCombatEventInfo& DamageInfo);
	bool EndsActivationOnHolster();
	bool EndsActivationOnExhausted();
	bool EndsActivationOnEmptyClip();
	void BroadcastGivenWeaponInstigatedDamage(class AKSCharacterBase* InPawn, const struct FCombatEventInfo& DamageInfo);
};

// Class Killstreak.KSModInst_BuffWeaponOnActivation
// 0x0060 (FullSize[0x0560] - InheritedSize[0x0500])
class UKSModInst_BuffWeaponOnActivation : public UKSModInst_GiveWeaponOnActivation
{
public:
	TArray<class UKSWeaponAsset*>                      AssetsToBuff;                                              // 0x0500(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                                EquipPointToBuff;                                          // 0x0510(0x0008) (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                                EquipPointOfBuff;                                          // 0x0518(0x0008) (Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRequireBaseToActivate;                                    // 0x0520(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSyncAmmo;                                                 // 0x0521(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XICK[0x2];                                     // 0x0522(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AKSWeapon>                    BaseWeapon;                                                // 0x0524(0x0008) (Net, ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UKSWeaponComponent>           BaseWeaponComponent;                                       // 0x052C(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UKSWeaponComponent>           BuffWeaponComponent;                                       // 0x0534(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5WP1[0x24];                                    // 0x053C(0x0024) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1389);
		return ptr;
	}



	void OnRep_BaseWeapon();
	void OnBaseWeaponDestroyed(class AActor* DestroyedActor);
};

// Class Killstreak.KSModInst_CacheAim
// 0x0060 (FullSize[0x04D8] - InheritedSize[0x0478])
class UKSModInst_CacheAim : public UKSModInst_Activated
{
public:
	struct FAimData                                    CachedAim;                                                 // 0x0478(0x0050) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	class UKSWeaponAsset*                              AimReferenceAsset;                                         // 0x04C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AimRange;                                                  // 0x04D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCacheAimOnSetup;                                          // 0x04D4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OGGI[0x3];                                     // 0x04D5(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1390);
		return ptr;
	}



	void OnAimReferenceAssetReady();
};

// Class Killstreak.KSModInst_DamageDealt
// 0x0000 (FullSize[0x01B8] - InheritedSize[0x01B8])
class UKSModInst_DamageDealt : public UKSPlayerModInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1391);
		return ptr;
	}



};

// Class Killstreak.KSModInst_OverTimeEffect
// 0x0018 (FullSize[0x01D0] - InheritedSize[0x01B8])
class UKSModInst_OverTimeEffect : public UKSPlayerModInstance
{
public:
	class UKSTimerComponent*                           EffectTimer;                                               // 0x01B8(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EffectTickPeriod;                                          // 0x01C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                EffectTickCount;                                           // 0x01C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldImmediatelyEffect;                                  // 0x01C8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bResetTickCountOnStackIncrease;                            // 0x01C9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XJT0[0x2];                                     // 0x01CA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                TickCount;                                                 // 0x01CC(0x0004) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1392);
		return ptr;
	}



	void OnRep_EffectTimer();
	float GetEffectTickPeriod();
	void EffectTick();
};

// Class Killstreak.KSModInst_DamageOverTime
// 0x0018 (FullSize[0x01E8] - InheritedSize[0x01D0])
class UKSModInst_DamageOverTime : public UKSModInst_OverTimeEffect
{
public:
	float                                              DamagePerTick;                                             // 0x01D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HIG7[0x4];                                     // 0x01D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      DamageType;                                                // 0x01D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSWeaponAsset*                              RadialDamageWeapon;                                        // 0x01E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1393);
		return ptr;
	}



};

// Class Killstreak.KSModInst_DetectEnemy
// 0x0040 (FullSize[0x01F8] - InheritedSize[0x01B8])
class UKSModInst_DetectEnemy : public UKSPlayerModInstance
{
public:
	struct FScriptMulticastDelegate                    OnDetectEnemy;                                             // 0x01B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      WidgetClass[0x28];                                         // 0x01C8(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	bool                                               bIsDetectingEnemy;                                         // 0x01F0(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BS9C[0x7];                                     // 0x01F1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1394);
		return ptr;
	}



	void OnRep_EnemyDetected();
	bool IsDetectingEnemy();
	void GetWidgetClass();
	void DetectEnemy(bool bDetectEnemy);
};

// Class Killstreak.KSModInst_FireWeaponOnActivation
// 0x0008 (FullSize[0x0508] - InheritedSize[0x0500])
class UKSModInst_FireWeaponOnActivation : public UKSModInst_GiveWeaponOnActivation
{
public:
	unsigned char                                      UnknownData_9AO3[0x8];                                     // 0x0500(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1395);
		return ptr;
	}



	void HandleIdle(class AKSWeapon* Weapon, Killstreak_EWeaponStateNew OldState);
	void HandleCooldown(class AKSWeapon* Weapon, Killstreak_EWeaponStateNew OldState);
	void HandleBuildup(class AKSWeapon* Weapon, Killstreak_EWeaponStateNew OldState);
};

// Class Killstreak.KSModInst_DirectTargetWeapon
// 0x0020 (FullSize[0x0528] - InheritedSize[0x0508])
class UKSModInst_DirectTargetWeapon : public UKSModInst_FireWeaponOnActivation
{
public:
	unsigned char                                      UnknownData_HUL3[0x8];                                     // 0x0508(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AKSWeapon_DirectTarget>       TargetedWeapon;                                            // 0x0510(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnTargetAcquired;                                          // 0x0518(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1396);
		return ptr;
	}



};

// Class Killstreak.KSModInst_GiveBuildOnActivation
// 0x0058 (FullSize[0x0558] - InheritedSize[0x0500])
class UKSModInst_GiveBuildOnActivation : public UKSModInst_GiveWeaponOnActivation
{
public:
	unsigned char                                      UnknownData_NBUO[0x18];                                    // 0x0500(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnBuildSucceededDel;                                       // 0x0518(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Y158[0x18];                                    // 0x0528(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnBuildFailedDel;                                          // 0x0540(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                               bStartFireOnActivation;                                    // 0x0550(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_X3K2[0x1];                                     // 0x0551(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bRefundOnReclaim;                                          // 0x0552(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_J9HU[0x5];                                     // 0x0553(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1397);
		return ptr;
	}



	void BuildSucceeded();
	void BuildSpawned(class AKSBuild* SpawnedBuild);
	void BuildReclaimed(class AKSBuild* Reclaimed);
	void BuildFailed();
};

// Class Killstreak.KSModInst_GiveEquipPoints
// 0x0000 (FullSize[0x01B8] - InheritedSize[0x01B8])
class UKSModInst_GiveEquipPoints : public UKSPlayerModInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1398);
		return ptr;
	}



};

// Class Killstreak.KSModInst_HoldToTarget
// 0x0030 (FullSize[0x04A8] - InheritedSize[0x0478])
class UKSModInst_HoldToTarget : public UKSModInst_Activated
{
public:
	unsigned char                                      UnknownData_QCBU[0x8];                                     // 0x0478(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSTargeterConfig                           TargeterConfig;                                            // 0x0480(0x000C) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_291V[0x4];                                     // 0x048C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnTargetAcquired;                                          // 0x0490(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class AActor*                                      CurrentTarget;                                             // 0x04A0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1399);
		return ptr;
	}



	void OnRep_CurrentTarget();
	bool IsTargetValid(class AActor* Candidate);
};

// Class Killstreak.KSModInst_MainCameraFov
// 0x0000 (FullSize[0x01B8] - InheritedSize[0x01B8])
class UKSModInst_MainCameraFov : public UKSPlayerModInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1400);
		return ptr;
	}



};

// Class Killstreak.KSModInst_MartialArtist
// 0x0028 (FullSize[0x05B0] - InheritedSize[0x0588])
class UKSModInst_MartialArtist : public UKSModInst_ActivatedTarget
{
public:
	Killstreak_EThrowDirection                         TargetThrowDirection;                                      // 0x0588(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CSYR[0x3];                                     // 0x0589(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ChargeTime;                                                // 0x058C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_202J[0x20];                                    // 0x0590(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1401);
		return ptr;
	}



	float GetThrowDistance();
	struct FVector GetThrowDirection(const struct FVector& ToDirection, Killstreak_EThrowDirection ThrowDirection);
	void GetCardinalThrowDirection(Killstreak_EThrowDirection* OutThrowDirection);
	void BroadcastTargetInfo(Killstreak_EThrowDirection Direction, TArray<struct FVector> Path, float PathDistance);
};

// Class Killstreak.KSModInst_MovementAbility
// 0x0008 (FullSize[0x0480] - InheritedSize[0x0478])
class UKSModInst_MovementAbility : public UKSModInst_Activated
{
public:
	float                                              Distance;                                                  // 0x0478(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZA4N[0x4];                                     // 0x047C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1402);
		return ptr;
	}



	float GetDistance();
};

// Class Killstreak.KSModInst_OnAbilityUsed
// 0x0000 (FullSize[0x01B8] - InheritedSize[0x01B8])
class UKSModInst_OnAbilityUsed : public UKSPlayerModInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1403);
		return ptr;
	}



	void Triggered();
	void OnAbilityUsed();
	void AbilityUsed();
};

// Class Killstreak.KSModInst_OnDodgeRoll
// 0x0008 (FullSize[0x01C0] - InheritedSize[0x01B8])
class UKSModInst_OnDodgeRoll : public UKSPlayerModInstance
{
public:
	unsigned char                                      UnknownData_TUSK[0x8];                                     // 0x01B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1404);
		return ptr;
	}



	void Triggered(float RollDuration);
	void OnDodgeRoll(float RollDuration);
};

// Class Killstreak.KSModInst_OnDodgeRollEnd
// 0x0000 (FullSize[0x01B8] - InheritedSize[0x01B8])
class UKSModInst_OnDodgeRollEnd : public UKSPlayerModInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1405);
		return ptr;
	}



	void Triggered();
	void OnDodgeRollEnd();
};

// Class Killstreak.KSModInst_OnDownOrRevive
// 0x0000 (FullSize[0x01B8] - InheritedSize[0x01B8])
class UKSModInst_OnDownOrRevive : public UKSPlayerModInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1406);
		return ptr;
	}



	void OnReviveComplete(class AKSCharacter* Reviver, class AKSCharacter* Revivee);
};

// Class Killstreak.KSModInst_OnEquipmentActive
// 0x0000 (FullSize[0x01B8] - InheritedSize[0x01B8])
class UKSModInst_OnEquipmentActive : public UKSPlayerModInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1407);
		return ptr;
	}



	void OnEquipmentEndActive(class AKSCharacter* Character, class UKSWeaponComponent* WeaponComponent);
	void OnEquipmentBecomeActive(class AKSCharacter* Character, class UKSWeaponComponent* WeaponComponent);
	void EquipmentEndActive(class UKSWeaponComponent* WeaponComponent);
	void EquipmentBecomeActive(class UKSWeaponComponent* WeaponComponent);
};

// Class Killstreak.KSModInst_OnEndActiveReload
// 0x0078 (FullSize[0x0230] - InheritedSize[0x01B8])
class UKSModInst_OnEndActiveReload : public UKSModInst_OnEquipmentActive
{
public:
	struct FScriptMulticastDelegate                    OnReloadStart;                                             // 0x01B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnReloadEnd;                                               // 0x01C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bUseWeaponAssetReloadTime;                                 // 0x01D8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LRBW[0x3];                                     // 0x01D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ReloadTime;                                                // 0x01DC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_81J0[0x50];                                    // 0x01E0(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1408);
		return ptr;
	}



	void ReloadEquipmentAtEquipPoint(const struct FGameplayTag& EquipPoint);
};

// Class Killstreak.KSModInst_OnFireWeaponType
// 0x0010 (FullSize[0x01C8] - InheritedSize[0x01B8])
class UKSModInst_OnFireWeaponType : public UKSPlayerModInstance
{
public:
	TArray<struct FGameplayTag>                        ValidWeaponTypes;                                          // 0x01B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1409);
		return ptr;
	}



	void Triggered();
	void OnFireWeapon(class AKSWeapon* FiredWeapon);
	void FiredValidWeaponType(class AKSWeapon* FiredWeapon);
};

// Class Killstreak.KSModInst_OnGenericEvent
// 0x0000 (FullSize[0x01B8] - InheritedSize[0x01B8])
class UKSModInst_OnGenericEvent : public UKSPlayerModInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1410);
		return ptr;
	}



	void Triggered();
};

// Class Killstreak.KSModInst_OnPickupItem
// 0x0000 (FullSize[0x01B8] - InheritedSize[0x01B8])
class UKSModInst_OnPickupItem : public UKSPlayerModInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1411);
		return ptr;
	}



	void OnItemPickedUp(class AKSCharacter* Character, class AKSItemDrop* ItemDrop, class UKSItem* Item);
	void ItemPickedUp(class AKSCharacter* Character, class AKSItemDrop* ItemDrop, class UKSItem* Item);
};

// Class Killstreak.KSModInst_OnProjectileBounce
// 0x0008 (FullSize[0x01C0] - InheritedSize[0x01B8])
class UKSModInst_OnProjectileBounce : public UKSPlayerModInstance
{
public:
	bool                                               bTrackEnemyProjectile;                                     // 0x01B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTrackFriendlyProjectile;                                  // 0x01B9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTrackSelfProjectile;                                      // 0x01BA(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bListenToBounce;                                           // 0x01BB(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bListenToStop;                                             // 0x01BC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N422[0x3];                                     // 0x01BD(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1412);
		return ptr;
	}



	void OnProjectileStopped(const struct FHitResult& HitResult);
	void OnProjectileBounced(const struct FHitResult& HitResult, const struct FVector& ImpactVelocity);
	void NativeOnProjectileStopped(const struct FHitResult& HitResult);
	void NativeOnProjectileBounced(const struct FHitResult& HitResult, const struct FVector& ImpactVelocity);
};

// Class Killstreak.KSModInst_OnReviveOther
// 0x0000 (FullSize[0x01B8] - InheritedSize[0x01B8])
class UKSModInst_OnReviveOther : public UKSPlayerModInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1413);
		return ptr;
	}



	void Triggered(class AKSPlayerState* Reviver, class AKSPlayerState* Revivee);
	void OnReviveOther(class AKSPlayerState* Reviver, class AKSPlayerState* Revivee);
};

// Class Killstreak.KSModInst_OnShotAt
// 0x0020 (FullSize[0x01D8] - InheritedSize[0x01B8])
class UKSModInst_OnShotAt : public UKSPlayerModInstance
{
public:
	float                                              MinimumDamage;                                             // 0x01B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_V0BD[0x4];                                     // 0x01BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<Killstreak_EDamageCategory>                 ValidDamageCategories;                                     // 0x01C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZKDL[0x8];                                     // 0x01D0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1414);
		return ptr;
	}



	void StopShotAtTimer();
	void StartOrRestartShotAtTimer(float Duration);
	void ShotAtTimerComplete();
	void ReviveCompleted(class AKSCharacter* Reviver, class AKSCharacter* Revivee);
	void OnTakeDamage(class AActor* InActor, float DamageAmount, class UDamageType* DamageTypeCDO, class AController* EventInstigator, class AActor* DamageCauser);
	void OnReviveCompleted(class AKSCharacter* Reviver, class AKSCharacter* Revivee);
	void OnNearMiss(class AKSCharacterBase* NearlyMissedCharacter);
	void NearMiss(class AKSCharacterBase* NearlyMissedCharacter);
	void MatchingDamageTaken(class AActor* InActor, float DamageAmount, class UDamageType* DamageTypeCDO, class AController* EventInstigator, class AActor* DamageCauser);
	bool IsShotAtTimerActive();
	float GetShotAtTimerRemainingTime();
};

// Class Killstreak.KSModInst_OnShotAtAndDodgeRollEnd
// 0x0018 (FullSize[0x01F0] - InheritedSize[0x01D8])
class UKSModInst_OnShotAtAndDodgeRollEnd : public UKSModInst_OnShotAt
{
public:
	Killstreak_EWillToSurviveModState                  WillToSurviveModState;                                     // 0x01D8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XQWM[0x17];                                    // 0x01D9(0x0017) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1415);
		return ptr;
	}



	void TimerComplete(Killstreak_EWillToSurviveTimerType TimerType);
	void StopTimer(Killstreak_EWillToSurviveTimerType TimerType);
	void StartOrRestartTimer(Killstreak_EWillToSurviveTimerType TimerType, float Duration);
	void OnDodgeRollEnd();
	void ModActivatedTimerComplete();
	bool IsTimerActive(Killstreak_EWillToSurviveTimerType TimerType);
	float GetTimerRemainingTime(Killstreak_EWillToSurviveTimerType TimerType);
	struct FTimerHandle GetTimerHandleForType(Killstreak_EWillToSurviveTimerType TimerType);
	struct FTimerHandle GetConstTimerHandleForType(Killstreak_EWillToSurviveTimerType TimerType);
	void CooldownTimerComplete();
};

// Class Killstreak.KSModInst_OnTakeDamage
// 0x0020 (FullSize[0x01D8] - InheritedSize[0x01B8])
class UKSModInst_OnTakeDamage : public UKSPlayerModInstance
{
public:
	class UKSTimerComponent*                           TakeDamageTimer;                                           // 0x01B8(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinimumDamage;                                             // 0x01C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B9UB[0x4];                                     // 0x01C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<Killstreak_EDamageCategory>                 ValidDamageCategories;                                     // 0x01C8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1416);
		return ptr;
	}



	void TakeDamageTimerComplete();
	void StopTakeDamageTimer();
	void StartTakeDamageTimer(float Duration);
	void ReviveCompleted(class AKSCharacter* Reviver, class AKSCharacter* Revivee);
	void OnTakeDamage(class AActor* InActor, float DamageAmount, class UDamageType* DamageTypeCDO, class AController* EventInstigator, class AActor* DamageCauser);
	void OnReviveCompleted(class AKSCharacter* Reviver, class AKSCharacter* Revivee);
	void OnRep_TakeDamageTimer();
	void MatchingDamageTaken(class AActor* InActor, float DamageAmount, class UDamageType* DamageTypeCDO, class AController* EventInstigator, class AActor* DamageCauser);
};

// Class Killstreak.KSModInst_PhysAbilityMovement
// 0x0000 (FullSize[0x01B8] - InheritedSize[0x01B8])
class UKSModInst_PhysAbilityMovement : public UKSPlayerModInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1417);
		return ptr;
	}



};

// Class Killstreak.KSModInst_PickupRange
// 0x0000 (FullSize[0x01B8] - InheritedSize[0x01B8])
class UKSModInst_PickupRange : public UKSPlayerModInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1418);
		return ptr;
	}



};

// Class Killstreak.KSModInst_PilotOnActivation
// 0x0028 (FullSize[0x04A0] - InheritedSize[0x0478])
class UKSModInst_PilotOnActivation : public UKSModInst_Activated
{
public:
	float                                              VehicleDestroyDelay;                                       // 0x0478(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JBBU[0xC];                                     // 0x047C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSVehicleBase*                              SpawnedVehicle;                                            // 0x0488(0x0008) (Net, ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                              DeployableActors;                                          // 0x0490(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1419);
		return ptr;
	}



	void RegisterDeployable(class AActor* DeployableAsActor);
	void OnVehicleDestroyed(class AKSCharacterFoundation* KillerCharacter, class AKSCharacterFoundation* KilledCharacter);
	void OnSpawnedVehicle();
	void OnRep_SpawnedVehicle();
	void OnDeployableDestroyed(class AActor* DestroyedDeployableActor);
	class AKSVehicleBase* GetSpawnedVehicle();
};

// Class Killstreak.KSModInst_PingOnOtherDowned
// 0x0068 (FullSize[0x0220] - InheritedSize[0x01B8])
class UKSModInst_PingOnOtherDowned : public UKSPlayerModInstance
{
public:
	TArray<struct FDownedEnemyPingHandle>              PingHandles;                                               // 0x01B8(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKSRevealInfo                               DownedRevealParameters;                                    // 0x01C8(0x0048) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UKSPlayerMod_PingOnOtherDowned> CastOwningMod;                                             // 0x0210(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AKSPlayerController>          OwningController;                                          // 0x0218(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1420);
		return ptr;
	}



	void PingFromDownedEnemy(class AKSPlayerState* DownedEnemy);
	void OnPlayerDowned(const struct FCombatEventInfo& EventInfo, int XpBonus);
	void OnCharacterPinged(class AKSCharacter* PingedCharacter);
	void BroadcastSpawnPingEmitter(class UParticleSystem* EmitterTemplate, const struct FVector& Location);
	void BroadcastPingedCharacter(class AKSCharacter* PingedCharacter);
};

// Class Killstreak.KSModInst_ProximityComponent
// 0x0050 (FullSize[0x0208] - InheritedSize[0x01B8])
class UKSModInst_ProximityComponent : public UKSPlayerModInstance
{
public:
	bool                                               bOnlyCheckProximityOnServer;                               // 0x01B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ORPX[0x3];                                     // 0x01B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SphereRadius;                                              // 0x01BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKSProximityFilter                          ProximityFilter;                                           // 0x01C0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                               bDebugShowSphere;                                          // 0x01E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FNB1[0x7];                                     // 0x01E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USphereComponent*                            ManagedSphereComponent;                                    // 0x01E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSProximityComponent*                       ManagedProximityComponent;                                 // 0x01F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZBCC[0x10];                                    // 0x01F8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1421);
		return ptr;
	}



	void ProximityActorUpdated(class AActor* Actor, class UPrimitiveComponent* Component, const struct FKSActorProximityInfo& ProximityInfo);
	void ProximityActorRemoved(class AActor* Actor);
	void ProximityActorAdded(class AActor* Actor);
	struct FVector GetProximityTraceRelativeLocation();
};

// Class Killstreak.KSRoyaleSafeZone
// 0x0050 (FullSize[0x0270] - InheritedSize[0x0220])
class AKSRoyaleSafeZone : public AActor
{
public:
	class UBoxComponent*                               ValidityZone;                                              // 0x0220(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSWeaponAsset*                              ZoneDamageAsset;                                           // 0x0228(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              StartingRadius;                                            // 0x0230(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSafeZoneParams                             OldParams;                                                 // 0x0234(0x0010) (Net, Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FSafeZoneParams                             NewParams;                                                 // 0x0244(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              ZoneLerpVelocity;                                          // 0x0254(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ZoneLerpAlpha;                                             // 0x0258(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     CurrentCenter;                                             // 0x025C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentRadius;                                             // 0x0268(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ZoneActive;                                                // 0x026C(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsShrinking;                                               // 0x026D(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QXA1[0x2];                                     // 0x026E(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1649);
		return ptr;
	}



	bool TryToDamage(class AActor* TargetActor, float AttemptedDamage);
	void StartShrink();
	void SetNewZoneParams(float NewRadius, float TimeToChange, class AActor* MustContainActor, float MustContainSafeRadius);
	void OnZoneActivated();
	void OnRep_ZoneActive();
	void OnRep_NewParams();
	void OnCircleUpdate(float NewRadius, const struct FVector& NewLocation);
	bool IsZoneActive();
};

// Class Killstreak.KSRuleBasedPhaseProxy
// 0x0040 (FullSize[0x0068] - InheritedSize[0x0028])
class UKSRuleBasedPhaseProxy : public UKSGamePhaseProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnPhaseCompleted;                                          // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFailedToStart;                                           // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_83YF[0x14];                                    // 0x0048(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       PhaseName;                                                 // 0x005C(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                PhaseId;                                                   // 0x0064(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1650);
		return ptr;
	}



	class UKSRuleBasedPhaseProxy* STATIC_StartRuleBasedPhase(class UObject* WorldContextObject, class UKSPhaseRuleComponent* Rule, float TimeSeconds, const struct FName& PhaseName, int PhaseId);
	void OnCompletedWithLeadingTeam(class AKSTeamState* LeadingTeam);
	void OnCompleted();
};

// Class Killstreak.KSOutOfBoundsZone
// 0x0018 (FullSize[0x0238] - InheritedSize[0x0220])
class AKSOutOfBoundsZone : public AActor
{
public:
	unsigned char                                      UnknownData_1TQE[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TickDamage;                                                // 0x0228(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WarningDuration;                                           // 0x022C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ShouldDisableCollisionAtRoundEnd;                          // 0x0230(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_P4WX[0x7];                                     // 0x0231(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1466);
		return ptr;
	}



	void TurnOnDropBoundary();
	void TurnOffDropBoundary();
	void TurnOffCollision(class AKSGameState* GameState, const struct FRoundResult& RoundResult);
	void OnActorOverlapZoneEnd(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnActorOverlapZoneBegin(class AActor* OverlappedActor, class AActor* OtherActor);
};

// Class Killstreak.KSSafeZone
// 0x0008 (FullSize[0x0240] - InheritedSize[0x0238])
class AKSSafeZone : public AKSOutOfBoundsZone
{
public:
	int                                                SideNum;                                                   // 0x0238(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_443F[0x4];                                     // 0x023C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1651);
		return ptr;
	}



	void UnRevealOverlappedCharacter(class AKSCharacter* Character);
	void RevealOverlappedCharacter(class AKSCharacter* Character);
};

// Class Killstreak.KSSceneComponentPoolStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSSceneComponentPoolStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1652);
		return ptr;
	}



	class UTracerParticleSystemComponent* STATIC_SpawnTracerEmitterWithRotation(class UObject* WorldContextObject, class UParticleSystem* EmitterTemplate, const struct FVector& start, const struct FVector& end, bool DeactivatesOnDestinationReached, float TravelSpeed, const struct FRotator& Rotation);
	class UTracerParticleSystemComponent* STATIC_SpawnTracerEmitter(class UObject* WorldContextObject, class UParticleSystem* EmitterTemplate, const struct FVector& start, const struct FVector& end, bool DeactivatesOnDestinationReached, float TravelSpeed);
	class UTracerStaticMeshComponent* STATIC_SpawnMeshTracerWithRotation(class UObject* WorldContextObject, class UStaticMesh* StaticMesh, const struct FVector& start, const struct FVector& end, class AActor* Instigator, class UMaterialInterface* FriendlyMaterial, class UMaterialInterface* EnemyMaterial, float TravelSpeed, const struct FRotator& Rotation);
	class UTracerStaticMeshComponent* STATIC_SpawnMeshTracer(class UObject* WorldContextObject, class UStaticMesh* StaticMesh, const struct FVector& start, const struct FVector& end, class AActor* Instigator, class UMaterialInterface* FriendlyMaterial, class UMaterialInterface* EnemyMaterial, float TravelSpeed);
	class UAkComponent* STATIC_SpawnAkComponentAtLocation(class UObject* WorldContextObject, class UAkAudioEvent* AkEvent, class UAkAuxBus* EarlyReflectionsBus, const struct FVector& Location, const struct FRotator& Orientation, const struct FString& EventName, const struct FString& EarlyReflectionsBusName, Killstreak_EOcclusionType OcclusionType, bool UseDistance, bool UseDirection);
	bool STATIC_SetSwitchOnNextAkComponentInPool(class UObject* WorldContextObject, const struct FName& SwitchGroup, const struct FName& SwitchState);
	bool STATIC_SetRTPCValueOnNextAkComponentInPool(class UObject* WorldContextObject, const struct FName& RTPC, float Value, int InterpolationTimeMs);
};

// Class Killstreak.KSSeasonalDrop
// 0x0000 (FullSize[0x03A0] - InheritedSize[0x03A0])
class AKSSeasonalDrop : public AKSLootDrop
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1653);
		return ptr;
	}



};

// Class Killstreak.KSSeasonalEventChallengesManager
// 0x0000 (FullSize[0x0210] - InheritedSize[0x0210])
class UKSSeasonalEventChallengesManager : public UKSActivityManagerBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1654);
		return ptr;
	}



};

// Class Killstreak.KSJobEquipmentRuleComponent
// 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
class UKSJobEquipmentRuleComponent : public UKSGameRuleComponent
{
public:
	struct FKSJobEquipmentTypesToGive                  KSJobEquipmentTypesToGive;                                 // 0x00B0(0x000D) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6XFN[0x3];                                     // 0x00BD(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1324);
		return ptr;
	}



};

// Class Killstreak.KSJobItem
// 0x05B0 (FullSize[0x0800] - InheritedSize[0x0250])
class UKSJobItem : public UKSItem
{
public:
	bool                                               IsStarterJob;                                              // 0x0250(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CEP3[0x7];                                     // 0x0251(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      JobDefaultSkin[0x28];                                      // 0x0251(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	int                                                JobSkinBundleLootTableId;                                  // 0x0280(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NRNF[0x4];                                     // 0x0284(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      JobRoleItem[0x28];                                         // 0x0284(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      UniqueItem[0x28];                                          // 0x02B0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      PrimaryWeaponOptionOne[0x28];                              // 0x02D8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      PrimaryWeaponCategoryOptionOne[0x28];                      // 0x0300(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               PrimaryWeaponOptionOneIsDefault;                           // 0x0328(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ITF0[0x7];                                     // 0x0329(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      PrimaryWeaponOptionTwo[0x28];                              // 0x0329(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      PrimaryWeaponCategoryOptionTwo[0x28];                      // 0x0358(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               PrimaryWeaponOptionTwoIsDefault;                           // 0x0380(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G44Y[0x7];                                     // 0x0381(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      SecondaryWeaponOptionOne[0x28];                            // 0x0381(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               SecondaryWeaponOptionOneIsDefault;                         // 0x03B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A7ZT[0x7];                                     // 0x03B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      SecondaryWeaponOptionTwo[0x28];                            // 0x03B1(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               SecondaryWeaponOptionTwoIsDefault;                         // 0x03E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IFXB[0x7];                                     // 0x03E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      MeleeWeapon[0x28];                                         // 0x03E1(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      QuickMeleeWeapon[0x28];                                    // 0x0410(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      Passives[0x10];                                            // 0x0438(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      GadgetOptionOne[0x28];                                     // 0x0448(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               GadgetOptionOneIsDefault;                                  // 0x0470(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KNAC[0x7];                                     // 0x0471(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      GadgetOptionTwo[0x28];                                     // 0x0471(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               GadgetOptionTwoIsDefault;                                  // 0x04A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PE5Q[0x7];                                     // 0x04A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      PerkOptionOne[0x28];                                       // 0x04A1(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               PerkOptionOneIsDefault;                                    // 0x04D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P2IE[0x7];                                     // 0x04D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      PerkOptionTwo[0x28];                                       // 0x04D1(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               PerkOptionTwoIsDefault;                                    // 0x0500(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QOH2[0x7];                                     // 0x0501(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      PerkOptionThree[0x28];                                     // 0x0501(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               PerkOptionThreeIsDefault;                                  // 0x0530(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IORE[0x7];                                     // 0x0531(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      PerkOptionFour[0x28];                                      // 0x0531(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               PerkOptionFourIsDefault;                                   // 0x0560(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_12RZ[0x7];                                     // 0x0561(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      PerkOptionFive[0x28];                                      // 0x0561(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               PerkOptionFiveIsDefault;                                   // 0x0590(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QIBN[0x7];                                     // 0x0591(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      PerkOptionSix[0x28];                                       // 0x0591(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               PerkOptionSixIsDefault;                                    // 0x05C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O9ZA[0x7];                                     // 0x05C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      GambitOptionOne[0x28];                                     // 0x05C1(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               GambitOptionOneIsDefault;                                  // 0x05F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4B3K[0x7];                                     // 0x05F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      GambitOptionTwo[0x28];                                     // 0x05F1(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               GambitOptionTwoIsDefault;                                  // 0x0620(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CJK2[0x7];                                     // 0x0621(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      GambitOptionThree[0x28];                                   // 0x0621(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               GambitOptionThreeIsDefault;                                // 0x0650(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EMSB[0x7];                                     // 0x0651(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      GambitOptionFour[0x28];                                    // 0x0651(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               GambitOptionFourIsDefault;                                 // 0x0680(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NQRI[0x7];                                     // 0x0681(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      GambitOptionFive[0x28];                                    // 0x0681(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               GambitOptionFiveIsDefault;                                 // 0x06B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YKBE[0x7];                                     // 0x06B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      GambitOptionSix[0x28];                                     // 0x06B1(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               GambitOptionSixIsDefault;                                  // 0x06E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O5TU[0x7];                                     // 0x06E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      DefaultEmotes[0x10];                                       // 0x06E1(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      DefaultQuips[0x10];                                        // 0x06F8(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      DefaultCommunications[0x10];                               // 0x0708(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      DefaultSprays[0x10];                                       // 0x0718(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      DefaultWingsuit[0x28];                                     // 0x0728(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	TArray<struct FSoftObjectPath>                     LobbyPropsToPreload;                                       // 0x0750(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      SmallJobIcon[0x28];                                        // 0x0760(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      JobPortrait[0x28];                                         // 0x0788(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      JobDiamondPortrait[0x28];                                  // 0x07B0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      JobSquarePortrait[0x28];                                   // 0x07D8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1325);
		return ptr;
	}



	bool IsValidJobItem(class UKSItem* KSItem);
	bool IsOnFreeRotation();
	void GetSoftSmallJobIcon();
	void GetSoftJobSquarePortrait();
	void GetSoftJobPortrait();
	void GetSoftJobDiamondPortrait();
	class UTexture2D* GetSmallJobIcon();
	bool GetQuickMeleeWeapon();
	bool GetPerks();
	bool GetMeleeWeapon();
	class UKSJobRole* GetJobRole();
	class UKSActivityInstance* GetJobMasteryActivityInstance(class UObject* WorldContextObject);
	bool GetGambits();
	bool GetFirstPassive();
	bool GetDefaultSprays();
	class UKSSkinBundle* GetDefaultSkin();
	bool GetDefaultSecondaryWeapon();
	bool GetDefaultRadialMenuItems(Killstreak_EMercCosmeticSlot CosmeticSlot);
	bool GetDefaultQuips();
	bool GetDefaultPrimaryWeapon();
	bool GetDefaultPerks();
	bool GetDefaultGambits();
	bool GetDefaultGadget();
	bool GetDefaultEmotes();
	bool GetDefaultCommunications();
	bool GetAlternativeSecondaryWeapon();
	bool GetAlternativePrimaryWeapon();
	bool GetAlternativeGadget();
};

// Class Killstreak.JobLoadout
// 0x0058 (FullSize[0x0080] - InheritedSize[0x0028])
class UJobLoadout : public UObject
{
public:
	class UKSJobItem*                                  JobItem;                                                   // 0x0028(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<Killstreak_EJobLoadoutSlot, class UKSItem*>   SlotItems;                                                 // 0x0030(0x0050) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1326);
		return ptr;
	}



	bool ValidateAttachmentForWeapon(class UKSItem* AttachmentToCheck, class UKSItem* Weapon);
	void SetToJobDefaults(class UKSJobItem* InJobItem);
	bool SetSlot(Killstreak_EJobLoadoutSlot JobSlot, class UKSItem* KSItem, bool IgnoreJobItem);
	bool GetSlot(Killstreak_EJobLoadoutSlot JobSlot, class UKSItem** OutKSItem);
	bool GetAsMap(TMap<Killstreak_EJobLoadoutSlot, class UKSItem*>* OutMap);
	TArray<Killstreak_EJobLoadoutSlot> CleanJobLoadoutItems();
};

// Class Killstreak.KSJobSelectionAuthority
// 0x0828 (FullSize[0x0A48] - InheritedSize[0x0220])
class AKSJobSelectionAuthority : public AInfo
{
public:
	unsigned char                                      UnknownData_S70X[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bAllowUnownedJobs;                                         // 0x0230(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Q49M[0x7];                                     // 0x0231(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      AllowUnownedSpecificJobs[0x50];                            // 0x0231(0x0050) UNKNOWN PROPERTY: SetProperty
	class UClass*                                      SelectionRules;                                            // 0x0288(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FJobSelectionChoice>                 Choices;                                                   // 0x0290(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FJobSelectionTaskList                       CompletedJobSelectionTasks;                                // 0x02A0(0x0130) (Transient, Protected, NativeAccessSpecifierProtected)
	struct FJobSelectionTaskList                       ActiveJobSelectionTasks;                                   // 0x03D0(0x0130) (Transient, Protected, NativeAccessSpecifierProtected)
	struct FJobSelectionTaskList                       PendingJobSelectionTasks;                                  // 0x0500(0x0130) (Transient, Protected, NativeAccessSpecifierProtected)
	struct FJobSelectionTaskList                       DelayedJobSelectionTasks;                                  // 0x0630(0x0130) (Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      ParticipatingPlayers[0x50];                                // 0x0760(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      RemainingPlayers[0x50];                                    // 0x07B0(0x0050) UNKNOWN PROPERTY: SetProperty
	TMap<struct FKSPersistentPlayerId, class AKSJobSelector*> ActiveJobSelectors;                                        // 0x0800(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      KnownDisconnectPlayers[0x50];                              // 0x0850(0x0050) UNKNOWN PROPERTY: SetProperty
	TArray<struct FKSPersistentPlayerId>               AvailableProxies;                                          // 0x08A0(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      AIPlayers[0x50];                                           // 0x08B0(0x0050) UNKNOWN PROPERTY: SetProperty
	bool                                               bHasStarted;                                               // 0x0900(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasCompletedInitialSelection;                             // 0x0901(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BJ1A[0x2];                                     // 0x0902(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                TimesStarted;                                              // 0x0904(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPGame_ReplicatedTimerManager               TimerManager;                                              // 0x0908(0x0128) (Transient, Protected, NativeAccessSpecifierProtected)
	class AKSGameMode*                                 GameModeOwner;                                             // 0x0A30(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BS2C[0x10];                                    // 0x0A38(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1327);
		return ptr;
	}



};

// Class Killstreak.KSJobSelectionComponent
// 0x0288 (FullSize[0x0338] - InheritedSize[0x00B0])
class UKSJobSelectionComponent : public UActorComponent
{
public:
	struct FJobSelectionList                           JobSelectionList;                                          // 0x00B0(0x0120) (Net, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FSelectionActivityStatus                    SelectionActivityStatus;                                   // 0x01D0(0x0050) (Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FKSJobSelectionAllowUnownedJobs             AllowUnownedJobsStruct;                                    // 0x0220(0x0020) (Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	Killstreak_EJobUniquenessRule                      EnforcedJobUniqueness;                                     // 0x0240(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L76Q[0x3];                                     // 0x0241(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                JobTableVendorId;                                          // 0x0244(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UJobCollection*                              JobCollection;                                             // 0x0248(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnJobSelectionEntryAdded;                                  // 0x0250(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnJobSelectionEntryChanged;                                // 0x0260(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnJobSelectionInitialized;                                 // 0x0270(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnAllPlayersLockedIn;                                      // 0x0280(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnSelectionActivityStatusChanged;                          // 0x0290(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SJH7[0x60];                                    // 0x02A0(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<int>                                        BannedJobIds;                                              // 0x0300(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ExpectedBanCount;                                          // 0x0310(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H8WD[0x4];                                     // 0x0314(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSTeamState*                                CachedOwner;                                               // 0x0318(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSelectionEnabled;                                         // 0x0320(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_P6T5[0x3];                                     // 0x0321(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                EntryCount;                                                // 0x0324(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N0SK[0x8];                                     // 0x0328(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSAudioManager*                             pAudioManager;                                             // 0x0330(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1328);
		return ptr;
	}



	void OnRep_SelectionActivityStatus();
	void OnRep_EntryCount();
	void OnRep_AllowUnownedJobs();
	void OnPhaseChange(const struct FMatchPhase& NewPhase);
	void NewPlayerStarting(class APlayerController* NewPlayer);
	void NewBotStarting(class AKSAIController* NewBot);
	bool STATIC_JobSelectEntryMatchesPlayerState(const struct FJobSelectionEntry& Entry, class AKSPlayerState* PlayerState);
	bool STATIC_JobSelectEntryMatchesPersistentPlayer(const struct FJobSelectionEntry& Entry, class UKSPersistentPlayerData* PersistentPlayer);
	bool IsReady();
	bool IsPlayerCurrentlySelecting(class AKSPlayerState* InPlayerState);
	void InitializeJobSelectionList();
	TArray<class AKSPlayerState*> GetSortedPlayers();
	struct FSelectionActivityStatus GetSelectionActivityStatusInfo();
	Killstreak_ESelectionActivityState GetSelectionActivityState();
	TArray<struct FJobSelectionEntry> GetJobSelectionEntries();
	Killstreak_ESelectionActivityState FindOpponentSelectionActivityState();
	bool CanPlayerLockInSelection(class AKSPlayerState* InPlayerState);
};

// Class Killstreak.KSJobSelectionManager
// 0x0038 (FullSize[0x00E8] - InheritedSize[0x00B0])
class UKSJobSelectionManager : public UActorComponent
{
public:
	bool                                               bJobManagerReady;                                          // 0x00B0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BOIG[0x7];                                     // 0x00B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnJobSelectionManagerReady;                                // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnJobSelectionAcknowledge;                                 // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class AKSPlayerController*                         CachedOwner;                                               // 0x00D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSJobSelectionComponent*                    CachedSelectionComponent;                                  // 0x00E0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1329);
		return ptr;
	}



	void ServerRequestSelectionState(int ItemId, Killstreak_EJobSelectionState State);
	bool RequestSelectionState(int ItemId, Killstreak_EJobSelectionState State);
	void PlayerTeamSet(class AKSPlayerState* PlayerState);
	void PlayerStateSet(class AKSPlayerState* PlayerState);
	void JobSelectionComponentReady(class UKSJobSelectionComponent* InSelectionComponent);
	bool IsReady();
	class UKSJobSelectionComponent* GetJobSelectionComponent();
	void ClientAcknowledgeStateSelection(int ItemId, bool bSuccess, Killstreak_EJobSelectionState RequestState);
};

// Class Killstreak.KSJobSelectionRules
// 0x0080 (FullSize[0x00A8] - InheritedSize[0x0028])
class UKSJobSelectionRules : public UObject
{
public:
	Killstreak_EJobPickExclusivity                     PickExclusivity;                                           // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EJobSelectProxyRules                    PickProxyRules;                                            // 0x0029(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bProxyAlwaysCompletesPicks;                                // 0x002A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanAbstainFromBan;                                        // 0x002B(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EJobBanEffects                          BanEffects;                                                // 0x002C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EJobSelectProxyRules                    BanProxyRules;                                             // 0x002D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bProxyAlwaysCompletesBans;                                 // 0x002E(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EJobSelectProxyRules                    LockProxyRules;                                            // 0x002F(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bProxyAlwaysCompletesLocks;                                // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EKSBlacklistOrWhitelist                 BlacklistOrWhitelist;                                      // 0x0031(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HJUM[0x6];                                     // 0x0032(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      FilteredJobs[0x10];                                        // 0x0032(0x0010) UNKNOWN PROPERTY: ArrayProperty
	float                                              ReserveTime;                                               // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReselectTime;                                              // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRequireJobOwnership;                                      // 0x0050(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowOnUnavailableJobsOnUI;                                // 0x0051(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SDZE[0x6];                                     // 0x0052(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagQuery                           AIJobSelectionQuery;                                       // 0x0058(0x0048) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UJobCollection*                              JobCollection;                                             // 0x00A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1330);
		return ptr;
	}



	struct FText GetOverallStatusTextAndTimer(class AKSJobSelector* InSelector, struct FPGame_ReplicatedTimerId* OutActiveTimerId, struct FJobSelectionTask* PrimaryTask);
};

// Class Killstreak.KSJobSelectionRules_Casual
// 0x0008 (FullSize[0x00B0] - InheritedSize[0x00A8])
class UKSJobSelectionRules_Casual : public UKSJobSelectionRules
{
public:
	float                                              TimeToPick;                                                // 0x00A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AL7R[0x4];                                     // 0x00AC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1331);
		return ptr;
	}



};

// Class Killstreak.KSJobSelectionRules_Draft
// 0x0038 (FullSize[0x00E0] - InheritedSize[0x00A8])
class UKSJobSelectionRules_Draft : public UKSJobSelectionRules
{
public:
	TArray<struct FJobSelectDraftingTask>              InitialDraftList;                                          // 0x00A8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FJobSelectDraftingTask>              RepeatingDraftList;                                        // 0x00B8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FailSafeTimeToPick;                                        // 0x00C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bImmediatelyLock;                                          // 0x00CC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J8L2[0x3];                                     // 0x00CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TimeToTrade;                                               // 0x00D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTeamNumRepresentSideNum;                                  // 0x00D4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZQG8[0x3];                                     // 0x00D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      AlternateSecondaryRules;                                   // 0x00D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1332);
		return ptr;
	}



};

// Class Killstreak.KSJobSelectionRules_DraftAlt
// 0x0000 (FullSize[0x00B0] - InheritedSize[0x00B0])
class UKSJobSelectionRules_DraftAlt : public UKSJobSelectionRules_Casual
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1333);
		return ptr;
	}



};

// Class Killstreak.KSJobSelector
// 0x07A8 (FullSize[0x09C8] - InheritedSize[0x0220])
class AKSJobSelector : public AInfo
{
public:
	class UClass*                                      SelectionRules;                                            // 0x0220(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJobSelectionTask                           PersonalActiveTask;                                        // 0x0228(0x0048) (Net, RepNotify, NativeAccessSpecifierPublic)
	struct FJobSelectionTask                           LocalPersonalActiveTask;                                   // 0x0270(0x0048) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	bool                                               bLocalPersonalTaskPendingComplete;                         // 0x02B8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZLHV[0x7];                                     // 0x02B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FJobSelectionChoice>                 Choices;                                                   // 0x02C0(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJobSelectionTaskList                       CompletedTasks;                                            // 0x02D0(0x0130) (BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FJobSelectionTaskList                       ActiveTasks;                                               // 0x0400(0x0130) (BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	struct FJobSelectionTaskList                       PendingTasks;                                              // 0x0530(0x0130) (BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	bool                                               bAllPersonalTasksAreComplete;                              // 0x0660(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLocalAllPersonalTasksAreComplete;                         // 0x0661(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSelectionHasEnded;                                        // 0x0662(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BUOM[0x5];                                     // 0x0663(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnRequestSelectSuccessful;                                 // 0x0668(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRequestSelectFailed;                                     // 0x0678(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRequestCompleteSuccessful;                               // 0x0688(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRequestCompleteFailed;                                   // 0x0698(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnJobSelectionChoicesChanged;                              // 0x06A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTasksChanged;                                            // 0x06B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPendingTasksChanged;                                     // 0x06C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTaskCompleted;                                           // 0x06D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPersonalActiveTaskChanged;                               // 0x06E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAllPersonalTasksCompleted;                               // 0x06F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEndJobSelection;                                         // 0x0708(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AKSJobSelectionAuthority>     SelectionAuthority;                                        // 0x0718(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                JobSelectorId;                                             // 0x0720(0x0004) (Net, ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Z9H5[0x4];                                     // 0x0724(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSPersistentPlayerId                       CachedPersistentPlayerId;                                  // 0x0728(0x0010) (Net, Transient, DuplicateTransient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPGame_ReplicatedTimerManagerSlave          TimerManager;                                              // 0x0738(0x0170) (Net, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SWT3[0x10];                                    // 0x08A8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bChoicesAreDirty;                                          // 0x08B8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTasksAreDirty;                                            // 0x08B9(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPendingTasksAreDirty;                                     // 0x08BA(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPersonalTaskIsDirty;                                      // 0x08BB(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllPersonTasksCompleteIsDirty;                            // 0x08BC(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bOwnerIsDirty;                                             // 0x08BD(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EP5I[0x2];                                     // 0x08BE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      BroadcastedTasks[0x50];                                    // 0x08BE(0x0050) UNKNOWN PROPERTY: SetProperty
	TMap<class UKSJobItem*, int>                       JobToChoiceIndexMap;                                       // 0x0910(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WRLG[0x50];                                    // 0x0960(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class APlayerController*                           OwningPlayerController;                                    // 0x09B0(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UKSJobItem>                   PrevLocalSelectedJob;                                      // 0x09B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UKSJobItem>                   PrevLockedJobForLocalPlayer;                               // 0x09C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1334);
		return ptr;
	}



	bool STATIC_TasksEqual(const struct FJobSelectionTask& A, const struct FJobSelectionTask& B);
	void ServerRequestSelect(const struct FJobSelectionTaskId& TaskId, class UKSJobItem* Job);
	void ServerRequestComplete(const struct FJobSelectionTaskId& TaskId, class UKSJobItem* Job);
	Killstreak_ECanCompleteTaskResult RequestSelect(class UKSJobItem* Job);
	Killstreak_ECanCompleteTaskResult RequestCompleteTask(class UKSJobItem* Job);
	void OnRep_PersonalActiveTask();
	void OnRep_Choices();
	void OnRep_AllPersonalTasksAreComplete();
	void OnPlayerOwnerLogout(class AActor* InActor);
	Killstreak_ECanCompleteTaskResult IsValidJobForPersonalActiveTask(class UKSJobItem* Job);
	bool STATIC_IsTaskValid(const struct FJobSelectionTask& InTask);
	bool STATIC_IsTaskIdValid(const struct FJobSelectionTaskId& InTaskId);
	bool STATIC_IsTaskIdsEqual(const struct FJobSelectionTaskId& A, const struct FJobSelectionTaskId& B);
	float GetTimeUntilNextActiveTaskExpires();
	float GetTimeUntilLastActiveTaskExpires();
	PlatformGameFramework_EPGame_ReplicateTimerState GetTimerStateByTimerId(const struct FPGame_ReplicatedTimerId& TimerId);
	PlatformGameFramework_EPGame_ReplicateTimerState GetTimerStateByTaskId(const struct FJobSelectionTaskId& TaskId);
	float GetTimeRemainingByTimerId(const struct FPGame_ReplicatedTimerId& TimerId);
	float GetTimeRemainingByTaskId(const struct FJobSelectionTaskId& TaskId);
	class APlayerController* GetOwningPlayerController();
	TArray<struct FJobSelectionTask> GetCompletedTasksForPlayer(const struct FKSPersistentPlayerId& InPlayerId);
	struct FJobSelectionTask GetActiveTaskForPlayer(const struct FKSPersistentPlayerId& InPlayerId, bool* bPendingComplete);
	struct FJobSelectionChoice FindChoiceByJob(class UKSJobItem* Job);
	void ClientAcknowledgeSelect(const struct FJobSelectionTaskId& TaskId, bool bSuccess);
	void ClientAcknowledgeComplete(const struct FJobSelectionTaskId& TaskId, bool bSuccess);
};

// Class Killstreak.KSJobSelectPreviewActor_InMatch
// 0x0000 (FullSize[0x0428] - InheritedSize[0x0428])
class AKSJobSelectPreviewActor_InMatch : public AKSJobSelectPreviewActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1335);
		return ptr;
	}



};

// Class Killstreak.KSJobSelectPreviewActor_Lobby
// 0x00E8 (FullSize[0x0510] - InheritedSize[0x0428])
class AKSJobSelectPreviewActor_Lobby : public AKSJobSelectPreviewActor
{
public:
	Killstreak_ELobbyCharacterIndex                    CharacterIndex;                                            // 0x0428(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bControlChildCharacterNameplate;                           // 0x0429(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7TPE[0x2];                                     // 0x042A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UKSPlayerInfo>                WeakPlayerInfo;                                            // 0x042C(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPlayerPendingPartyAccept;                                 // 0x0434(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowJobChangeOnPlayEmote;                                // 0x0435(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bStopPlayingEmoteWhileLoadingNewEmote;                     // 0x0436(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2J8C[0x1];                                     // 0x0437(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      FailSafeEmoteJob[0x28];                                    // 0x0437(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UKSEmote*                                    PendingEmote;                                              // 0x0460(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FWJS[0x10];                                    // 0x0468(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSEquipmentId                              PendingEmoteComponentId;                                   // 0x0478(0x0004) (Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WXYX[0x4];                                     // 0x047C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSEmoteCosmeticComponent*                   PendingEmoteComponent;                                     // 0x0480(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      PendingEmoteExpectedJob[0x28];                             // 0x0488(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      ActiveEmoteExpectedJob[0x28];                              // 0x04B0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UKSEmoteCosmeticComponent*                   ActiveEmoteComponent;                                      // 0x04D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4IL6[0x30];                                    // 0x04E0(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1336);
		return ptr;
	}



	void StopActiveEmote();
	bool SetPlayerInfo(class UKSPlayerInfo* InPlayerInfo);
	void ReturnCharacterToIdle();
	bool PlayEmote();
	void OverrideActiveSkin();
	bool IsPlayerPendingPartyAccept();
	class UKSPlayerInfo* GetPlayerInfo();
	Killstreak_ELobbyCharacterIndex GetCharacterIndex();
	void ClearPlayerInfo();
	void ClearPendingEmote();
	void ClearActiveSkinOverride();
};

// Class Killstreak.KSJobSelectPrvwActor_RogueScrn
// 0x0008 (FullSize[0x0518] - InheritedSize[0x0510])
class AKSJobSelectPrvwActor_RogueScrn : public AKSJobSelectPreviewActor_Lobby
{
public:
	class URogueScreenLoadoutComponent*                RogueScreenLoadoutComponent;                               // 0x0510(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1337);
		return ptr;
	}



};

// Class Killstreak.KSJobSelectZone
// 0x0098 (FullSize[0x02B8] - InheritedSize[0x0220])
class AKSJobSelectZone : public AActor
{
public:
	unsigned char                                      UnknownData_HTX1[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InteractTime;                                              // 0x0228(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_T11U[0x4];                                     // 0x022C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      InteractionType;                                           // 0x0230(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	Killstreak_EKSInteractableGroup                    InteractableGroup;                                         // 0x0238(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0XPX[0x3];                                     // 0x0239(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       InteractionMode;                                           // 0x023C(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bCanInteractFromBehind;                                    // 0x0244(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bForceLOS;                                                 // 0x0245(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_APUS[0x2];                                     // 0x0246(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       InteractPromptText;                                        // 0x0248(0x0018) (Edit, NativeAccessSpecifierPrivate)
	unsigned char                                      CurrentZoneUsers[0x50];                                    // 0x0260(0x0050) UNKNOWN PROPERTY: SetProperty
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                 // 0x02B0(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1338);
		return ptr;
	}



};

// Class Killstreak.KSJsonData
// 0x0038 (FullSize[0x0060] - InheritedSize[0x0028])
class UKSJsonData : public UObject
{
public:
	struct FName                                       UniqueId;                                                  // 0x0028(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AssociatedLootId;                                          // 0x0030(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8BA8[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<int>                                        HideIfItemOwned;                                           // 0x0038(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int>                                        ShowIfItemOwned;                                           // 0x0048(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HideIfOwned;                                               // 0x0058(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               showSteam;                                                 // 0x0059(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               showEpic;                                                  // 0x005A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               showPS4;                                                   // 0x005B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               showPS5;                                                   // 0x005C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               showXB1;                                                   // 0x005D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               showXSX;                                                   // 0x005E(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               showNX;                                                    // 0x005F(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1339);
		return ptr;
	}



};

// Class Killstreak.KSJsonDataFactory
// 0x0100 (FullSize[0x0148] - InheritedSize[0x0048])
class UKSJsonDataFactory : public UPUMG_JsonDataFactory
{
public:
	TMap<struct FString, class UTexture2DDynamic*>     mapFilePathToTexture;                                      // 0x0048(0x0050) (NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N9YE[0xB0];                                    // 0x0098(0x00B0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1340);
		return ptr;
	}



	void OnInventoryItemUpdated(const struct FInventoryId& InventoryId);
};

// Class Killstreak.KSKillCam
// 0x01A8 (FullSize[0x01D0] - InheritedSize[0x0028])
class UKSKillCam : public UObject
{
public:
	class UClass*                                      KillCamControllerClass;                                    // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWorld*                                      KillCamWorld;                                              // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPackage*                                    KillCamWorldPackage;                                       // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AKSKillCamController*                        KillCamSpectatorController;                                // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UAkComponent*, float>                   OriginalWorldMutedAudio;                                   // 0x0048(0x0050) (ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BPPN[0x40];                                    // 0x0098(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnKillCamEnabled;                                          // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CR1B[0x18];                                    // 0x00E8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnKillCamViewPawn;                                         // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7AIH[0x18];                                    // 0x0110(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnKillCamViewProjectile;                                   // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_H6MQ[0x18];                                    // 0x0138(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPrepareKillCamPlayback;                                  // 0x0150(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XE3C[0x18];                                    // 0x0160(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnFinishKillCamPlayback;                                   // 0x0178(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MQW5[0x48];                                    // 0x0188(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1341);
		return ptr;
	}



	void KillCamStop();
	void DestroySpectatorController();
};

// Class Killstreak.KSPlayerController
// 0x07E8 (FullSize[0x0E98] - InheritedSize[0x06B0])
class AKSPlayerController : public APGame_PlayerController
{
public:
	unsigned char                                      UnknownData_TCIA[0x8];                                     // 0x06B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ProjectileDebugLifetime;                                   // 0x06B8(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P2RQ[0x4];                                     // 0x06BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnKSPlayerStateReplicatedDel;                              // 0x06C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DJV7[0x38];                                    // 0x06D0(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FDeferredViewTargetChangeInfo>       DeferredViewTargetChangedUpdate;                           // 0x0708(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RSI4[0x8];                                     // 0x0718(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSPlayerState*                              CurrentSpectateTarget;                                     // 0x0720(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AController>                  CurrentSpectateController;                                 // 0x0728(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                       CurrentSpectateViewTarget;                                 // 0x0730(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OL6W[0x40];                                    // 0x0738(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnBeginPlayingState;                                       // 0x0778(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FClientContext                              ClientContext;                                             // 0x0788(0x00C8) (NativeAccessSpecifierPublic)
	struct FClientInputTypeUse                         ClientInputTypeUse;                                        // 0x0850(0x0008) (NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bRecordingFrameRateInfo;                                   // 0x0858(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I3NM[0x3];                                     // 0x0859(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FClientStatistics                           Render;                                                    // 0x085C(0x0018) (Transient, NoDestructor, NativeAccessSpecifierPublic)
	struct FClientStatistics                           Game;                                                      // 0x0874(0x0018) (Transient, NoDestructor, NativeAccessSpecifierPublic)
	struct FClientStatistics                           GPU;                                                       // 0x088C(0x0018) (Transient, NoDestructor, NativeAccessSpecifierPublic)
	struct FClientStatistics                           RHIT;                                                      // 0x08A4(0x0018) (Transient, NoDestructor, NativeAccessSpecifierPublic)
	struct FClientStatistics                           Frame;                                                     // 0x08BC(0x0018) (Transient, NoDestructor, NativeAccessSpecifierPublic)
	struct FClientStatistics                           ResolutionFractionApproximation;                           // 0x08D4(0x0018) (Transient, NoDestructor, NativeAccessSpecifierPublic)
	float                                              FrameRateDataSmoothingFactor;                              // 0x08EC(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FrameRateDataPushCountdown;                                // 0x08F0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DefaultCameraName;                                         // 0x08F4(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bWaitingToViewPawn;                                        // 0x08FC(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1GAZ[0x3];                                     // 0x08FD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastPingCalcTime;                                          // 0x0900(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7ZWE[0x4];                                     // 0x0904(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      HUDClass[0x28];                                            // 0x0904(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	class UKSPlayerShotListener*                       ShotListener;                                              // 0x0930(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnHUDSetup;                                                // 0x0938(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KDH0[0x40];                                    // 0x0948(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCharacterFoundationPossessionChangedDel;                 // 0x0988(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	bool                                               bCachedIsUIRelevant;                                       // 0x0998(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bCachedIsOnlyASpector;                                     // 0x0999(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BTHO[0x6];                                     // 0x099A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPlayerControllerIsUIRelevantDel;                         // 0x09A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JU1X[0x20];                                    // 0x09B0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnViewedPawnChangedDel;                                    // 0x09D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_A9BK[0x18];                                    // 0x09E0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnControllerChangedDel;                                    // 0x09F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnSpectateStateChanged;                                    // 0x0A08(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_L6Z8[0x8];                                     // 0x0A18(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSCharacterBase*                            KSCharacter;                                               // 0x0A20(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsInTouchMode;                                             // 0x0A28(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StartInTouchMode;                                          // 0x0A29(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HL2G[0x2];                                     // 0x0A2A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TouchModeAutoFireRadius;                                   // 0x0A2C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TouchModeAutoFireTickRate;                                 // 0x0A30(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TouchModeClearAdsDelay;                                    // 0x0A34(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bTouchAutoFireNeededAds;                                   // 0x0A38(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LCAZ[0x17];                                    // 0x0A39(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class URenderThreadInputHandler*                   RenderThreadInputHandler;                                  // 0x0A50(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5238[0x8];                                     // 0x0A58(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnTouchModeChanged;                                        // 0x0A60(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 MouseLookSensitivityCurve;                                 // 0x0A70(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FInterpCurveFloat                           LookSensitivityToMaxLookSpeed;                             // 0x0A78(0x0018) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BaseGamepadTurnRateScale;                                  // 0x0A90(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BaseGamepadLookUpRateScale;                                // 0x0A94(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   GamepadRightStickVelocity;                                 // 0x0A98(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    AccumulatedRotationInput;                                  // 0x0AA0(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9RZ1[0x4];                                     // 0x0AAC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector2D                                   GamepadLook;                                               // 0x0AB0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      GamepadLookSpeedManagerClass;                              // 0x0AB8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      JoyConLookSpeedManagerClass;                               // 0x0AC0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UKSGamepadLookSpeedManager*                  GamepadLookSpeedManager;                                   // 0x0AC8(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSGamepadLookSpeedManager*                  JoyConLookSpeedManager;                                    // 0x0AD0(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              InputYawScaleADS;                                          // 0x0AD8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InputPitchScaleADS;                                        // 0x0ADC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InputRollScaleADS;                                         // 0x0AE0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    ThisFrameKickbackRotationCache;                            // 0x0AE4(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bKickbackEnabled;                                          // 0x0AF0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BM5V[0x7];                                     // 0x0AF1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FKickbackPlayback>                   ActiveKickback;                                            // 0x0AF8(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bKickbackRecoveryActive;                                   // 0x0B08(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3OKQ[0x3];                                     // 0x0B09(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              KickbackRecoveryDelayRemaining;                            // 0x0B0C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              KickbackRecoveryAcceleration;                              // 0x0B10(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              KickbackRecoveryTargetRate;                                // 0x0B14(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              KickbackRecoveryRate;                                      // 0x0B18(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxCumulativeKickbackVerticalAngle;                        // 0x0B1C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                                    KickbackRecoveryRotation;                                  // 0x0B20(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FRotator                                    KickbackCancelRotation;                                    // 0x0B2C(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	float                                              KickbackCancelThreshold;                                   // 0x0B38(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5DA8[0x4];                                     // 0x0B3C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bAllowKickbackRecoveryCancel;                              // 0x0B40(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bUseSmartKickbackRecovery;                                 // 0x0B41(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RKMD[0x2];                                     // 0x0B42(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              KickbackRecoveryEndThreshold;                              // 0x0B44(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              KickbackScalingFactorMouse;                                // 0x0B48(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2FZL[0x4];                                     // 0x0B4C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSAimAssistComponent*                       AimAssistComponent;                                        // 0x0B50(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    ViewedPawnTakeDamageDel;                                   // 0x0B58(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    ViewedPawnTakeArmorDamageDel;                              // 0x0B68(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    ViewedPawnInstigateDamageDel;                              // 0x0B78(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    ViewedPawnInstigateDamageNotifyDel;                        // 0x0B88(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OwnedPawnInstigateDamageNotifyDel;                         // 0x0B98(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OwnedPawnInstigateWeaponFireNotifyDel;                     // 0x0BA8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OwnedPawnTakesDamageNotifyDel;                             // 0x0BB8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnOwnedPawnTakeDamageFromInstigatorDel;                    // 0x0BC8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnHUDAnnouncementComponentCreated;                         // 0x0BD8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bCreateHUDAnnouncementComponent;                           // 0x0BE8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YPUL[0x7];                                     // 0x0BE9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSHUDAnnouncementComponent*                 HUDAnnouncementComponent;                                  // 0x0BF0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VJ7I[0x48];                                    // 0x0BF8(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bFirstPawnAcknowledged;                                    // 0x0C40(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFirstCharacterApparelFinished;                            // 0x0C41(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFirstCharacterWeaponsEquipped;                            // 0x0C42(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bKillcamWorldReady;                                        // 0x0C43(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TMXK[0x3C];                                    // 0x0C44(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LastTimePlayedTime;                                        // 0x0C80(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5NDW[0x4];                                     // 0x0C84(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSPingManager*                              PingManager;                                               // 0x0C88(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSRadialMenuManager*                        RadialMenuManager;                                         // 0x0C90(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSJobSelectionManager*                      JobSelectionManager;                                       // 0x0C98(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SO64[0x30];                                    // 0x0CA0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 GyroTargetSpeedCurve;                                      // 0x0CD0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 GyroSensitivityConversionCurve;                            // 0x0CD8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSEquipmentManagerComponent*                EquipmentManagerComponent;                                 // 0x0CE0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ALevelSequenceActor*                         TeamCinematicSequenceActor;                                // 0x0CE8(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsTeamLoadedInLobby;                                      // 0x0CF0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H6Z6[0x7];                                     // 0x0CF1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnGameFubarDel;                                            // 0x0CF8(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRadialMenuPressed;                                       // 0x0D08(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRadialMenuReleased;                                      // 0x0D18(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRadialMenuUsedLastSelection;                             // 0x0D28(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRadialMenuForceClosed;                                   // 0x0D38(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bRadialMenuOpen;                                           // 0x0D48(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KSV5[0x7];                                     // 0x0D49(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnAutoPickupChanged;                                       // 0x0D50(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YUBE[0x10];                                    // 0x0D60(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnNewPollCalled;                                           // 0x0D70(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLocalPlayerHasVoted;                                     // 0x0D80(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPollCompleted;                                           // 0x0D90(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnVoteCountUpdated;                                        // 0x0DA0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPollStateChanged;                                        // 0x0DB0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bLeftChoiceHeldDown;                                       // 0x0DC0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRightChoiceHeldDown;                                      // 0x0DC1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AIQ0[0x3];                                     // 0x0DC2(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bTelemetryFeatureActive;                                   // 0x0DC5(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0VXU[0x2];                                     // 0x0DC6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnTelemetrySettingsChanged;                                // 0x0DC8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_572V[0x6C];                                    // 0x0DD8(0x006C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bUseFallackTeamNum;                                        // 0x0E44(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HW55[0x3];                                     // 0x0E45(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                FallbackTeamNum;                                           // 0x0E48(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_28H7[0x4];                                     // 0x0E4C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSMinimapRendererBase*                      CachedMinimapRenderer;                                     // 0x0E50(0x0008) (BlueprintVisible, ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnUpdatePlayerRevealedUI;                                  // 0x0E58(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUpdateEnemyDetectedUI;                                   // 0x0E68(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_83W1[0x1];                                     // 0x0E78(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Killstreak_EQueueDivertType                        QueueDivertType;                                           // 0x0E79(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EBZZ[0x6];                                     // 0x0E7A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnJobSelectorAddedDel;                                     // 0x0E80(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VNGO[0x8];                                     // 0x0E90(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1342);
		return ptr;
	}



	void ViewedPawnTakeDamage(class AActor* InActor, float DamageAmount, class UDamageType* DamageTypeCDO, class AController* EventInstigator, class AActor* DamageCauser);
	void ViewedPawnTakeArmorDamage(class AActor* InActor, float DamageAmount, class UDamageType* DamageTypeCDO, class AController* EventInstigator, class AActor* DamageCauser);
	void ViewedPawnInstigatedDamageNotify(class AKSCharacterBase* InPawn, const struct FCombatEventInfo& DamageInfo);
	void ViewedPawnInstigatedDamage(class AKSCharacterBase* InPawn, float DamageAmount, class UDamageType* DamageTypeCDO, class AActor* Target, class AActor* DamageCauser);
	void TriggerInputAction(const struct FName& ActionName, const struct FKey& ActionKey, TEnumAsByte<Engine_EInputEvent> InputEvent);
	void ToggleTouch();
	bool ShouldVoteBlockMenu();
	bool ShouldThermalVisionSkipTeammates();
	void SetYawLocked(bool bNewLocked);
	void SetVoteShouldBlockMenu();
	void SetTouchModeClearAdsTimer();
	void SetSkipTeammatesForThermalVision(bool bShouldSkip);
	void SetPitchLocked(bool bNewLocked);
	void SetIsTeamLoadedInLobby(bool bIsLoaded);
	void SetGamepadTurnRateScale(float NewScale);
	void SetGamepadLookUpRateScale(float NewScale);
	void SetForceThermalVision(bool bForceEnable, bool bIsSpectator);
	void SetAutoShoulderSwapEnabled(bool bEnable);
	void SetAutoPickupEnabled(bool bEnable);
	void ServerUpdatePing(float ExactPing);
	void ServerSetQueueDivertType(Killstreak_EQueueDivertType InQueueDivertType);
	void ServerSetIsTeamLoadedInLobby(bool bIsLoaded);
	void ServerSetAutoPickupPreference(bool bEnableAutoPickup);
	void ServerRequest_BroadcastPossessionChanged(class AKSCharacterFoundation* UnpossessedCharacter, class AKSCharacterFoundation* PossessedCharacter);
	void ServerReportQuitFromMenu();
	void ServerPushInputTypeUse(const struct FClientInputTypeUse& PushedClientInputTypeUse);
	void ServerPushFrameRateData(const struct FClientStatistics& PushedRender, const struct FClientStatistics& PushedGame, const struct FClientStatistics& PushedGPU, const struct FClientStatistics& PushedRHI, const struct FClientStatistics& PushedFrame, const struct FClientStatistics& PushedResolutionFractionApproximation);
	void ServerPushClientContext(const struct FClientContext& PushedClientContext);
	void ServerNotifyClientSimpleSimulation(bool UseSimple);
	void ServerLagCompensationVisualization(bool bEnable);
	void ServerChangeSpectateTarget(bool bForward);
	void ServerBouncePing(float Timestamp);
	void Server_RequestEmoteOnCinematicCharacter(class AKSPlayerState* CallingPlayerState, class UKSEmote* Emote);
	void RequestEmoteOnCinematicCharacter(class UKSEmote* Emote);
	void ReportWeaponsEquipped();
	void ReportKillcamWorldReady();
	void ReportApparelApplied();
	void ReportAllReadyConditionsMet();
	void ReevaluateSightMods();
	void ReevaluateFootprints(class AKSCharacter* CheckCharacter);
	void ReevaluateAllRevealDisplays();
	void RadialMenuUseLastSelection(Killstreak_EMercCosmeticSlot ButtonCosmeticSlot);
	void RadialMenuReleased(Killstreak_EMercCosmeticSlot ButtonCosmeticSlot, bool bIsContextualPingHold);
	void RadialMenuPressed(Killstreak_EMercCosmeticSlot ButtonCosmeticSlot, bool bIsContextualPingHold);
	void RadialMenuForceClosed();
	void PlayEmoteOnCinematicCharacter(class AKSPlayerState* CallingPlayerState, class UKSEmote* Emote);
	void OnSpectateViewTargetDestroyed(class AActor* InViewTarget);
	void OnSpectateViewedCharacterKilledTimerElapsed(class AKSCharacterBase* KilledCharacter);
	void OnSpectateViewedCharacterKilled(class AKSCharacterFoundation* KillerCharacter, class AKSCharacterFoundation* KilledCharacter);
	void OnSpectateControllerDestroyed(class AActor* InActor);
	void OnPrimaryPawnDestroyed(class AActor* InPrimaryPawn);
	void OnKillcamWorldReady();
	void OnJobSelectorDestroyed(class AActor* DestroyedActor);
	void OnDelayedPossess(class APawn* InPawn);
	void OnCurrentSpectateTargetDestroyed(class AActor* DestroyedActor);
	void OnCharacterWeaponsEquipped();
	void OnCharacterApparelApplied();
	void LocalStopAimDownSights();
	void LocalStartAimDownSights();
	bool IsViewWithinMinimapBounds();
	bool IsUIRelevantOrSpectator();
	bool IsUIRelevant();
	bool IsThermalVisionForced();
	Killstreak_EPerceivedAlignmentType STATIC_IsTeamNumFriendlyWithLocalPlayerAdvanced(class UObject* WorldContextObject, int TeamNum, int* RelativeTeam);
	Killstreak_EPerceivedAlignmentType STATIC_IsTeamNumFriendlyWithLocalPlayer(class UObject* WorldContextObject, int TeamNum);
	Killstreak_EPerceivedAlignmentType STATIC_IsTeamNumFriendlyWithControllerAdvanced(class APlayerController* InPlayerController, int TeamNum, int* RelativeTeam);
	Killstreak_EPerceivedAlignmentType STATIC_IsTeamNumFriendlyWithController(class APlayerController* InPlayerController, int TeamNum);
	bool IsRadialMenuOpen();
	Killstreak_EPerceivedAlignmentType STATIC_IsPersistentPlayerFriendlyWithLocalPlayerAdvanced(class UObject* WorldContentObject, class UKSPersistentPlayerData* Data, int* RelativeTeam);
	Killstreak_EPerceivedAlignmentType STATIC_IsPersistentPlayerFriendlyWithLocalPlayer(class UObject* WorldContextObject, class UKSPersistentPlayerData* Data);
	Killstreak_EPerceivedAlignmentType STATIC_IsPersistentPlayerFriendlyWithControllerAdvanced(class APlayerController* InPlayerController, class UKSPersistentPlayerData* Data, int* RelativeTeam);
	Killstreak_EPerceivedAlignmentType STATIC_IsPersistentPlayerFriendlyWithController(class APlayerController* InPlayerController, class UKSPersistentPlayerData* Data);
	bool IsPawnDesiredAimDefault();
	bool STATIC_IsOnlyASpectator(class APlayerController* PlayerController);
	Killstreak_EPerceivedAlignmentType STATIC_IsObjectiveFriendlyWithLocalPlayerAdvanced(class AKSObjectiveBase* Objective, int* RelativeTeam);
	Killstreak_EPerceivedAlignmentType STATIC_IsObjectiveFriendlyWithLocalPlayer(class AKSObjectiveBase* Objective);
	Killstreak_EPerceivedAlignmentType STATIC_IsObjectiveFriendlyWithControllerAdvanced(class APlayerController* InPlayerController, class AKSObjectiveBase* Objective, int* RelativeTeam);
	Killstreak_EPerceivedAlignmentType STATIC_IsObjectiveFriendlyWithController(class APlayerController* InPlayerController, class AKSObjectiveBase* Objective);
	bool STATIC_IsLocalPlayerOnlyASpectator(class UObject* WorldContextObject);
	bool IsInShownWorld();
	Killstreak_EPerceivedAlignmentType IsFriendlyWithTeamNumAdvanced(int TeamNum, int* RelativeTeam);
	Killstreak_EPerceivedAlignmentType IsFriendlyWithTeamNum(int TeamNum);
	Killstreak_EPerceivedAlignmentType IsFriendlyWithPersistentPlayerAdvanced(class UKSPersistentPlayerData* Data, int* RelativeTeam);
	Killstreak_EPerceivedAlignmentType IsFriendlyWithPersistentPlayer(class UKSPersistentPlayerData* Data);
	Killstreak_EPerceivedAlignmentType IsFriendlyWithObjectiveAdvanced(class AKSObjectiveBase* Objective, int* RelativeTeam);
	Killstreak_EPerceivedAlignmentType IsFriendlyWithObjective(class AKSObjectiveBase* Objective);
	Killstreak_EPerceivedAlignmentType STATIC_IsFriendlyWithLocalPlayerAdvanced(class AActor* Actor, int* RelativeTeam);
	Killstreak_EPerceivedAlignmentType STATIC_IsFriendlyWithLocalPlayer(class AActor* Actor);
	Killstreak_EPerceivedAlignmentType STATIC_IsFriendlyWithControllerAdvanced(class APlayerController* InPlayerController, class AActor* Actor, int* RelativeTeam);
	Killstreak_EPerceivedAlignmentType STATIC_IsFriendlyWithController(class APlayerController* InPlayerController, class AActor* Actor);
	Killstreak_EPerceivedAlignmentType IsFriendlyWithComponentAdvanced(class USceneComponent* Component, int* RelativeTeam);
	Killstreak_EPerceivedAlignmentType IsFriendlyWithComponent(class USceneComponent* Component);
	Killstreak_EPerceivedAlignmentType IsFriendlyWithAdvanced(class AActor* Actor, int* RelativeTeam);
	Killstreak_EPerceivedAlignmentType IsFriendlyWith(class AActor* Actor);
	Killstreak_EPerceivedAlignmentType STATIC_IsComponentFriendlyWithLocalPlayerAdvanced(class USceneComponent* Component, int* RelativeTeam);
	Killstreak_EPerceivedAlignmentType STATIC_IsComponentFriendlyWithLocalPlayer(class USceneComponent* Component);
	Killstreak_EPerceivedAlignmentType STATIC_IsComponentFriendlyWithControllerAdvanced(class APlayerController* InPlayerController, class USceneComponent* Component, int* RelativeTeam);
	Killstreak_EPerceivedAlignmentType STATIC_IsComponentFriendlyWithController(class APlayerController* InPlayerController, class USceneComponent* Component);
	bool IsAutoShoulderSwapEnabled();
	bool IsAutoPickupEnabled();
	bool HasUIBlockingRightStickLookInput();
	class AKSPlayerState* GetViewedPlayerState();
	int GetValidSpectateTargetCount();
	class APawn* GetUIPawn();
	class AKSCharacter* GetUIKSCharacter();
	struct FTelemetrySettings GetTelemetrySettings();
	class UKSPlayerShotListener* GetShotListener();
	class AKSRevealManager* GetRevealManager();
	class UKSRadialMenuManager* GetRadialMenuManager();
	struct FText GetRadialItemNameByEquipPoint(const struct FGameplayTag& InEquipPoint);
	class AKSCharacterBase* GetPrimaryPawn();
	class UKSPingManager* GetPingManager();
	int GetPing();
	int STATIC_GetPerceivedTeamNumForLocalPlayer(class UObject* WorldContextObject);
	int STATIC_GetPerceivedTeamNumForController(class APlayerController* InPlayerController);
	int GetPerceivedTeamNum();
	class AKSTeamState* STATIC_GetPerceivedLocalTeamForLocalPlayer(class UObject* WorldContextObject);
	class AKSTeamState* STATIC_GetPerceivedLocalTeamForController(class APlayerController* InPlayerController);
	class AKSTeamState* GetPerceivedLocalTeam();
	void GetOutgoingPacketInfo(float* KBPerSecond, int* PacketsPerSecond, float* PacketLossRatio);
	class AKSPlayerState* GetKSPlayerState();
	class UKSJobSelectionManager* GetJobSelectionManager();
	bool GetIsTeamLoadedInLobby();
	bool GetIsPlayerBackfilling();
	void GetIncomingPacketInfo(float* KBPerSecond, int* PacketsPerSecond, float* PacketLossRatio);
	class UKSHUDAnnouncementComponent* GetHUDAnnouncementComponent();
	class UKSGamepadLookSpeedManager* GetGamepadLookSpeedManager();
	float GetFPS();
	class UKSEquipmentManagerComponent* GetEquipmentManagerComponent();
	class UKSAimAssistComponent* GetAimAssistComponent();
	class AKSJobSelector* GetActiveJobSelector();
	void FlushVoteInput();
	void FinalizeAutoPickupPreferenceChange();
	void FillInClientContext();
	void EventViewedPawnTakeDamage(float DamageAmount, class UClass* DamageTypeClass, class AActor* DamageCauser, const struct FVector& DamageOrigin);
	void EventViewedPawnTakeArmorDamage(float DamageAmount, class UClass* DamageTypeClass, class AActor* DamageCauser, const struct FVector& DamageOrigin);
	void EventViewedPawnInstigatedDamageNotify(const struct FCombatEventInfo& DamageInfo);
	void EventViewedPawnInstigatedDamage(float DamageAmount, class UClass* DamageTypeClass, class AActor* Target, class AActor* DamageCauser);
	void EnablePreventFlushPressedKeys();
	void CreateHUDAnnouncementComponent();
	void ControllerChangedForPickupLabeling(class AKSPlayerController* NewController);
	void CompVis(bool bEnable);
	void ClientViewedPawnTakeDamage(float DamageAmount, class UClass* DamageTypeClass, class AActor* DamageCauser, const struct FVector& DamageOrigin, bool bPrimaryPawn);
	void ClientViewedPawnTakeArmorDamage(float DamageAmount, class UClass* DamageTypeClass, class AActor* DamageCauser, const struct FVector& DamageOrigin, bool bPrimaryPawn);
	void ClientViewedPawnInstigatedDamageNotify(const struct FCombatEventInfo& DamageInfo, bool bPrimaryPawn);
	void ClientUpdateActivityProgressCount(int64_t ActivityItemId, int NewProgressCount);
	void ClientSpectateTeam();
	void ClientSignalEndOfMatch();
	void ClientReturnPing(float Timestamp);
	void ClientPlayInstantReplay(float TimeToRewind, float Duration, float DilationStart, float DilationAmount);
	void ClientOnPollStateChanged(bool bIsPaused);
	void ClientOnPollCompleted(const struct FKSPollResults& PollResults);
	void ClientDrawDebugSphere(const struct FVector& Center, float Radius, const struct FColor& Color, float Duration);
	void ClientDrawDebugLine(const struct FVector& start, const struct FVector& end, const struct FColor& Color, float Duration);
	void ClientDrawDebugCapsule(const struct FTransform& Transform, float Radius, float HalfHeight, const struct FColor& Color, float Duration);
	void ClientDrawDebugBox(const struct FTransform& Transform, const struct FVector& Extent, const struct FColor& Color, float Duration);
	void ClientAddSystemMessage_LateJoin(const struct FString& PlayerName);
	void Client_ReevaluateSightMods();
	void Client_ReevaluateRevealDisplayOfActor(class AActor* ActorToCheck);
	void Client_ReevaluateAllRevealDisplays();
	void ClearRotationLocks();
	void ClearActiveInteractableUI();
	bool CanViewedCharacterSeeFootprintsForCharacter(class AKSCharacter* CheckCharacter);
	void CachePostMatchScoreboard(const struct FScoreboardStats& ScoreboardStats);
	void CachePostMatchInfo(const struct FPlayerRewardsSummaryReplicated& RewardsReplicated);
	void BroadcastPossessionChanged(class AKSCharacterFoundation* UnpossessedCharacter, class AKSCharacterFoundation* PossessedCharacter);
	void ApplyKickback(const struct FInterpCurveVector2D& KickbackCurve, float InKickbackRecoveryDelay, float InKickbackRecoveryRate, float InKickbackRecoveryAccel, float InMaxCumulativeKickbackVerticalAngle, float ScalingFactor);
	void AimStateChangedForPickupLabeling(Killstreak_EKSCharacterAimMode AimState);
	void AddTimePlayed();
	bool ActivateRadialItemByEquipPoint(const struct FGameplayTag& InEquipPoint);
};

// Class Killstreak.KSKillCamController
// 0x0070 (FullSize[0x0F08] - InheritedSize[0x0E98])
class AKSKillCamController : public AKSPlayerController
{
public:
	unsigned char                                      UnknownData_SQVR[0x68];                                    // 0x0E98(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSKillCamObjectCamera*                      KillCamObjectCamera;                                       // 0x0F00(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1343);
		return ptr;
	}



};

// Class Killstreak.KSKillCamObjectCamera
// 0x0018 (FullSize[0x0238] - InheritedSize[0x0220])
class AKSKillCamObjectCamera : public AActor
{
public:
	class UKSSpringArmComponent*                       MainCameraBoom;                                            // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                            MainCameraComponent;                                       // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             EmptyComponent;                                            // 0x0230(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1344);
		return ptr;
	}



};

// Class Killstreak.KSKillLeaderTracker
// 0x0048 (FullSize[0x00E8] - InheritedSize[0x00A0])
class UKSKillLeaderTracker : public UKSAccoladeTracker
{
public:
	struct FTrackedPlayers                             CurrentLeader;                                             // 0x00A0(0x0018) (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTrackedPlayers                             TempNewLeader;                                             // 0x00B8(0x0018) (BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	int                                                HighestKillCount;                                          // 0x00D0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3LW5[0x4];                                     // 0x00D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTrackedPlayers>                     TrackedPlayers;                                            // 0x00D8(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1345);
		return ptr;
	}



	void ProcessElimEntry(class AKSPlayerState* InstigatorPlayerState);
	void HandleTrackerAccolade(class AKSPlayerState* Player);
	bool FindPlayerEntry(class AKSPlayerState* InstigatorPlayerState, int* PlayerIndex);
	bool CheckKillLeader();
};

// Class Killstreak.KSLimitDeployablesRuleComponent
// 0x0008 (FullSize[0x00B8] - InheritedSize[0x00B0])
class UKSLimitDeployablesRuleComponent : public UKSGameRuleComponent
{
public:
	uint32_t                                           LimitThreshold;                                            // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLimitPerAsset;                                            // 0x00B4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WZ2W[0x3];                                     // 0x00B5(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1346);
		return ptr;
	}



	void OnDeployed(class AActor* DeployableActor);
};

// Class Killstreak.KSLoadoutBundle
// 0x0060 (FullSize[0x02C0] - InheritedSize[0x0260])
class UKSLoadoutBundle : public UKSItemBundle
{
public:
	unsigned char                                      LoadoutClass[0x28];                                        // 0x0260(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      Gadget[0x28];                                              // 0x0288(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      BundledAbilities[0x10];                                    // 0x02B0(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1347);
		return ptr;
	}



	bool GetWeapons();
	bool GetWeaponItemIds(TArray<int>* OutWeaponItemIds);
	bool GetPerks();
	bool GetPerkItemIds(TArray<int>* OutPerkItemIds);
	bool GetBundlePerks(TArray<class UKSPlayerMod*>* OutPerks);
	bool GetBundleAbilities(TArray<class UKSPlayerMod_Activated*>* OutAbilities);
	bool GetAttachments();
	bool GetAttachmentItemIds(TArray<int>* OutAttachmentItemIds);
	bool GetAbilityItemIds(TArray<int>* OutAbilityItemIds);
	bool GetAbilities();
};

// Class Killstreak.KSLoadoutClass
// 0x00B8 (FullSize[0x0308] - InheritedSize[0x0250])
class UKSLoadoutClass : public UKSItem
{
public:
	unsigned char                                      DynamicPoseImage[0x28];                                    // 0x0250(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	struct FLinearColor                                ThemeColorLight;                                           // 0x0278(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                ThemeColorDark;                                            // 0x0288(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      PerkCategories[0x10];                                      // 0x0298(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      AvailablePerks[0x10];                                      // 0x02A8(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      AvailableAbilities[0x10];                                  // 0x02B8(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      AvailableGadgets[0x10];                                    // 0x02C8(0x0010) UNKNOWN PROPERTY: ArrayProperty
	bool                                               CanUseGlobalGadgets;                                       // 0x02D8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9G67[0x7];                                     // 0x02D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      AvailablePistols[0x10];                                    // 0x02D9(0x0010) UNKNOWN PROPERTY: ArrayProperty
	bool                                               CanUseGlobalPistols;                                       // 0x02F0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_S831[0x7];                                     // 0x02F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      AutoEquippedMods[0x10];                                    // 0x02F1(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1348);
		return ptr;
	}



	class UTexture2D* GetDynamicPoseImage(bool bAllowSyncLoad);
};

// Class Killstreak.KSLoadoutDataFactory
// 0x0000 (FullSize[0x00A8] - InheritedSize[0x00A8])
class UKSLoadoutDataFactory : public UPUMG_LoadoutDataFactory
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1349);
		return ptr;
	}



	void SaveLoadoutByType(Killstreak_EKSLoadoutTypes LoadoutType);
	bool IsAccountItemEquippedInSlot(class UKSItem* AccountItem, Killstreak_EPlayerAccountSlot eSlot);
	class UKSJobItem* STATIC_GetPreferredJob(class UObject* WorldContextObject);
	bool GetLoadoutByType(class UPUMG_Loadout** Loadout, Killstreak_EKSLoadoutTypes LoadoutType, bool bCreateIfNeeded);
	bool GetEquippedCosmeticForWeapon(class UKSWeaponAsset* WeaponItem, class UKSWeaponAttachment** CosmeticItem);
	bool GetEquippedAccountItem(Killstreak_EPlayerAccountSlot eSlot, class UKSItem** EquippedItem);
	bool GetDefaultCosmeticItem(Killstreak_EMercCosmeticSlot eSlot, int SlotPosition, class UKSJobItem* JobItem, class UKSItem** DefaultCosmeticItem, bool SkipGlobal);
	class UKSJobItem* STATIC_GetBestJobToPreviewItem(class UKSItem* InItem, class UObject* WorldContextObject);
	bool EquipCosmeticToWeapon(class UKSWeaponAttachment* CosmeticItem, class UKSWeaponAsset* WeaponItem, bool bGlobal);
	bool EquipAccountItemToSlot(Killstreak_EPlayerAccountSlot eSlot, class UKSItem* Item, bool bSave);
	bool ClearEquippedCosmeticForWeapon(class UKSWeaponAsset* WeaponItem, bool bGlobal);
};

// Class Killstreak.KSLoadoutRuleComponent
// 0x0000 (FullSize[0x00B0] - InheritedSize[0x00B0])
class UKSLoadoutRuleComponent : public UActorComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1350);
		return ptr;
	}



	bool AllowItem(class UKSItem* Item, Killstreak_EJobLoadoutSlot Slot);
};

// Class Killstreak.KSLobbyCharacter
// 0x0198 (FullSize[0x3E10] - InheritedSize[0x3C78])
class AKSLobbyCharacter : public AKSCharacter
{
public:
	unsigned char                                      UnknownData_8E3S[0x8];                                     // 0x3C78(0x0008) Fix Super Size
	unsigned char                                      UnknownData_C916[0x48];                                    // 0x3C80(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       ViewModelName;                                             // 0x3CC8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                ActiveLobbyMontage;                                        // 0x3CD0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableRogueSelectWeaponPose;                              // 0x3CD8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableWalkinCinematicWeaponPose;                          // 0x3CD9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_ELobbyCharacterIndex                    CharacterIndex;                                            // 0x3CDA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AKCW[0x5];                                     // 0x3CDB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponSkeletalMeshComponent*              LobbyWeapon01Component;                                    // 0x3CE0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSWeaponSkeletalMeshComponent*              LobbyWeapon02Component;                                    // 0x3CE8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSWeaponSkeletalMeshComponent*              LobbyProp01Component;                                      // 0x3CF0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSWeaponSkeletalMeshComponent*              LobbyProp02Component;                                      // 0x3CF8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSStaticMeshComponent*                      LobbyPropStatic01Component;                                // 0x3D00(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSStaticMeshComponent*                      LobbyPropStatic02Component;                                // 0x3D08(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FName, struct FLobbySkeletalPropInfo>  SkeletalPropMapping;                                       // 0x3D10(0x0050) (Protected, NativeAccessSpecifierProtected)
	TMap<struct FName, struct FLobbyStaticPropInfo>    StaticPropMapping;                                         // 0x3D60(0x0050) (Protected, NativeAccessSpecifierProtected)
	bool                                               ShouldHideInGame;                                          // 0x3DB0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bWereTexturesStreamedIn;                                   // 0x3DB1(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bIsSet;                                                    // 0x3DB2(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bHideUntilTexturesStream;                                  // 0x3DB3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceEnableClothSim;                                      // 0x3DB4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPrestreamTextures;                                        // 0x3DB5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GHC2[0x2];                                     // 0x3DB6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ForcedLodModel;                                            // 0x3DB8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCustomForcedLodForSwitch;                                 // 0x3DBC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EIKJ[0x3];                                     // 0x3DBD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ForcedLodModelSwitch;                                      // 0x3DC0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GUQE[0x8];                                     // 0x3DC4(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Killstreak_ELobbyCharacterAnimState                CurrentAnimState;                                          // 0x3DCC(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FFN3[0x3];                                     // 0x3DCD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnVisibilityChangedDel;                                    // 0x3DD0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	bool                                               bIsRotatable;                                              // 0x3DE0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AEYF[0x3];                                     // 0x3DE1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     MaxAxisRotation;                                           // 0x3DE4(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              IdleSecondsToResetRotation;                                // 0x3DF0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ResetRotationSpeedRadians;                                 // 0x3DF4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     RotationRatePerAxis;                                       // 0x3DF8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DQ5Z[0xC];                                     // 0x3E04(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1351);
		return ptr;
	}



	void VisibilityChanged(bool IsVisible);
	bool UpdateHiddenInGame();
	void UnsetCharacter();
	void UnbindControllerFromActor();
	void StopLobbyCharacterMontage();
	void StopCurrentEmote();
	void ShowLobbyNameplate();
	void SetUpStaticLobbyProp(const struct FLobbyStaticPropInfo& LobbyStaticPropInfo, class UKSStaticMeshComponent* StaticPropComponent);
	void SetUpSkeletalLobbyProp(const struct FLobbySkeletalPropInfo& LobbyPropInfo, class UKSWeaponSkeletalMeshComponent* SkeletalPropComponent);
	void SetupLobbyCharacter(class UKSPlayerInfo* playerinfo);
	void SetShouldHideInGame(bool ShouldHide);
	void SetLobbyNameplate(class UKSPlayerInfo* playerinfo);
	void SetLobbyCharacterAnimState(Killstreak_ELobbyCharacterAnimState AnimState);
	void SetCharacterSkin(class UKSItem* SkinItem);
	void SetCharacterEmote(class UKSItem* EmoteItem);
	void PlayLobbyCharacterMontage();
	void OnLobbyPresenceStateChange(Killstreak_ELobbyPresenceState LobbyPresenceState);
	bool IsSet();
	bool IsLobbyCharacter();
	void InitializeSkeletalPropAnimation(class UAnimInstance* PropAnimInstance);
	void InitializeLobbyCharacterAnimation();
	void HideLobbyNameplate();
	float GetSkeletalPropMontageStartTime();
	float GetCurrentMontagePosition();
	Killstreak_ELobbyCharacterAnimState GetCurrentAnimState();
	Killstreak_ELobbyCharacterIndex GetCharacterIndex();
	void EmoteCosmeticComponentCreated(class AKSEquipment* Emote);
	void EmoteActionStateChanged(class UKSEquipmentCosmeticComponent* Cosmetic);
	void DeattachStaticLobbyProp(class UKSStaticMeshComponent* StaticPropComponent);
	void DeattachSkeletalLobbyProp(class UKSWeaponSkeletalMeshComponent* SkeletalPropComponent);
	void DeattachAllLobbyProps();
	void ClearAllLobbyPropInfo();
	void BindControllerToActor();
	void BeginRotationReset();
	void AttachAllActiveLobbyProps();
};

// Class Killstreak.KSLobbyCameraActor
// 0x0010 (FullSize[0x0810] - InheritedSize[0x0800])
class AKSLobbyCameraActor : public ACineCameraActor
{
public:
	struct FName                                       CameraTag;                                                 // 0x0800(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CQ2B[0x8];                                     // 0x0808(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1355);
		return ptr;
	}



};

// Class Killstreak.KSLobbyLevelSequenceActor
// 0x0008 (FullSize[0x02B8] - InheritedSize[0x02B0])
class AKSLobbyLevelSequenceActor : public ALevelSequenceActor
{
public:
	struct FName                                       SequenceTag;                                               // 0x02B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1358);
		return ptr;
	}



};

// Class Killstreak.KSLocalPlayer
// 0x0038 (FullSize[0x0298] - InheritedSize[0x0260])
class UKSLocalPlayer : public UPCom_LocalPlayer
{
public:
	struct FScriptMulticastDelegate                    OnLocalViewedPawnChangedDel;                               // 0x0260(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QWUI[0x18];                                    // 0x0270(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSKillCam*                                  KillCam;                                                   // 0x0288(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      KillCamControllerClass;                                    // 0x0290(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1359);
		return ptr;
	}



	bool IsKillCamReplayActive();
	class UWorld* GetRealWorld();
	class UKSKillCam* GetKillCam();
};

// Class Killstreak.KSLocomotionAnimInst
// 0x0000 (FullSize[0x10E8] - InheritedSize[0x10E8])
class UKSLocomotionAnimInst : public UKSCharacterAnimInst
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1360);
		return ptr;
	}



};

// Class Killstreak.KSLongShot
// 0x0008 (FullSize[0x00A8] - InheritedSize[0x00A0])
class UKSLongShot : public UKSAccoladeTracker
{
public:
	float                                              DistanceRequirement;                                       // 0x00A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DI0Z[0x4];                                     // 0x00A4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1361);
		return ptr;
	}



	void HandleTrackerAccolade(class AKSPlayerState* PlayerState);
};

// Class Killstreak.KSLootSitePowerUp
// 0x0010 (FullSize[0x0358] - InheritedSize[0x0348])
class AKSLootSitePowerUp : public AKSLootSiteBase
{
public:
	TArray<struct FLootSiteDropInfo>                   PossibleLoot;                                              // 0x0348(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1362);
		return ptr;
	}



};

// Class Killstreak.KSMapDifficultyManager
// 0x0170 (FullSize[0x0390] - InheritedSize[0x0220])
class AKSMapDifficultyManager : public AActor
{
public:
	bool                                               AppliesToNPEMatches;                                       // 0x0220(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LVFT[0x7];                                     // 0x0221(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UKSBTDifficulty*>                     Difficulties;                                              // 0x0228(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<int, int>                                     InitialTeamDifficulties;                                   // 0x0238(0x0050) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	int                                                MinDifficultyWhenDefeated;                                 // 0x0288(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SYYD[0x4];                                     // 0x028C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              ApplicableGameModes;                                       // 0x0290(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                      WinLossRatioAdjustEasier;                                  // 0x02A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                      WinLossRatioAdjustHarder;                                  // 0x02B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               AllowAdjustmentAtStartOfRound;                             // 0x02C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               AllowAdjustmentForDeaths;                                  // 0x02C1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AB3M[0x2];                                     // 0x02C2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                DeathsPerAdjustmentCalculation;                            // 0x02C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               AllowAdjustmentForTeamDeaths;                              // 0x02C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6WJG[0x3];                                     // 0x02C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                TeamDeathsPerAdjustmentCalculation;                        // 0x02CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               AllowAdjustmentForObjectivesClaimed;                       // 0x02D0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LKG0[0x3];                                     // 0x02D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ObjectivesPerAdjustmentCalculation;                        // 0x02D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               AllowAdjustmentForTimeElapsed;                             // 0x02D8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7MYO[0x3];                                     // 0x02D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SecondsPerAdjustmentCalculation;                           // 0x02DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                      KillDeathRatioAdjustEasier;                                // 0x02E0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                      KillDeathRatioAdjustHarder;                                // 0x02F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                      RoundWinPercentAdjustEasier;                               // 0x0300(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                      RoundWinPercentAdjustHarder;                               // 0x0310(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BW5P[0x70];                                    // 0x0320(0x0070) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1363);
		return ptr;
	}



	void HandleTeamCreated(class AKSTeamState* TeamState);
	void HandleRoundStart(const struct FRoundInitState& RoundState);
	void HandleRoundSetup(const struct FRoundInitState& RoundState);
	void HandlePhaseChange(const struct FMatchPhase& PreviousPhase, const struct FMatchPhase& NewPhase);
	void HandleObjectiveClaimed();
	void HandleCharacterOnTeamKilled(class AKSTeamState* TeamState);
};

// Class Killstreak.KSPrimaryAssetLabel
// 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
class UKSPrimaryAssetLabel : public UPrimaryAssetLabel
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1365);
		return ptr;
	}



};

// Class Killstreak.KSMapLabel
// 0x00C0 (FullSize[0x0128] - InheritedSize[0x0068])
class UKSMapLabel : public UKSPrimaryAssetLabel
{
public:
	unsigned char                                      Map[0x28];                                                 // 0x0068(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      MiniMapTexture[0x28];                                      // 0x0090(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      LoadingScreenImage[0x28];                                  // 0x00B8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	struct FText                                       MapDisplayName;                                            // 0x00E0(0x0018) (Edit, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	struct FText                                       MapRegion;                                                 // 0x00F8(0x0018) (Edit, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	struct FText                                       MapDescription;                                            // 0x0110(0x0018) (Edit, AssetRegistrySearchable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1366);
		return ptr;
	}



};

// Class Killstreak.KSMasteryMiscReward
// 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
class UKSMasteryMiscReward : public UPrimaryDataAsset
{
public:
	struct FText                                       Name;                                                      // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       Description;                                               // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      SoftIcon[0x28];                                            // 0x0060(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	struct FGameplayTag                                RarityTag;                                                 // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       ItemTypeText;                                              // 0x0090(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	Killstreak_EWeaponMasteryRewardPreviewType         RewardPreviewType;                                         // 0x00A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_USXC[0x7];                                     // 0x00A9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1367);
		return ptr;
	}



};

// Class Killstreak.KSModInst_RevealAreaToTeam
// 0x0050 (FullSize[0x0558] - InheritedSize[0x0508])
class UKSModInst_RevealAreaToTeam : public UKSModInst_FireWeaponOnActivation
{
public:
	bool                                               bAppliesScrambleEffectToEnemies;                           // 0x0508(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_82JU[0x7];                                     // 0x0509(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSRevealInfo                               RevealAreaRevealParameters;                                // 0x0510(0x0048) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1422);
		return ptr;
	}



};

// Class Killstreak.KSModInst_RevealOnMinimap
// 0x0030 (FullSize[0x01E8] - InheritedSize[0x01B8])
class UKSModInst_RevealOnMinimap : public UKSPlayerModInstance
{
public:
	unsigned char                                      MinimapDisplayWidget[0x28];                                // 0x01B8(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	bool                                               bRevealOnFullMap;                                          // 0x01E0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_II0U[0x7];                                     // 0x01E1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1423);
		return ptr;
	}



	bool IsValidReveal(class AKSPlayerController* LocalPlayer);
};

// Class Killstreak.KSModInst_RevealSelf
// 0x0000 (FullSize[0x01B8] - InheritedSize[0x01B8])
class UKSModInst_RevealSelf : public UKSPlayerModInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1424);
		return ptr;
	}



};

// Class Killstreak.KSModInst_ReviveDrone
// 0x0048 (FullSize[0x0570] - InheritedSize[0x0528])
class UKSModInst_ReviveDrone : public UKSModInst_DirectTargetWeapon
{
public:
	struct FScriptMulticastDelegate                    OnReviveDroneAbilityStateChanged;                          // 0x0528(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	Killstreak_EKSReviveDroneAbilityState              KSReviveDroneAbilityState;                                 // 0x0538(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ODH4[0x7];                                     // 0x0539(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                ResetToAvailabilityTimerHandle;                            // 0x0540(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              TimeToResetAvailability;                                   // 0x0548(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AKSAgent_RevivalDrone>        CurrentDrone;                                              // 0x054C(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CVT3[0x4];                                     // 0x0554(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnReviveDroneSetTarget;                                    // 0x0558(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AKSCharacter>                 DroneTargetCharacter;                                      // 0x0568(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1425);
		return ptr;
	}



	void SetDroneTarget(class AKSCharacter* TargetCharacter);
	void ResetToAvailability();
	void ResetTargetCharacter();
	void OnReviveDroneEvent(Killstreak_EKSReviveDroneEvent KSReviveDroneEvent);
	void OnRep_ReviveDroneAbilityState();
	void OnRep_ReviveDrone();
	void OnDroneTargetRevive();
	void OnDroneTargetDied();
	void OnDroneSpawned(class AKSAgent_RevivalDrone* KSAgentRevivalDrone);
	void OnDroneReviveComplete();
	void OnDroneReviveBegin();
	void OnDroneHealthUpdate(float Health, float MaxHealth);
	void OnDroneDestroyed();
	void OnDroneAbort();
	float GetReviveProgress();
	Killstreak_EKSReviveDroneAbilityState GetReviveDroneAbilityState();
	class AKSCharacter* GetDroneTarget();
	void BroadcastReviveDroneEvent(Killstreak_EKSReviveDroneEvent KSReviveDroneEvent);
};

// Class Killstreak.KSModInst_ReviveSelfOnActivation
// 0x0038 (FullSize[0x04B0] - InheritedSize[0x0478])
class UKSModInst_ReviveSelfOnActivation : public UKSModInst_Activated
{
public:
	bool                                               bUsesCustomDuration;                                       // 0x0478(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7S6H[0x3];                                     // 0x0479(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CustomReviveTime;                                          // 0x047C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanUseWhileUp;                                            // 0x0480(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bReviveDuringSetup;                                        // 0x0481(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HRB1[0x2];                                     // 0x0482(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              UpAbilitySetupDuration;                                    // 0x0484(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              UpAbilityDuration;                                         // 0x0488(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              UpAbilityRecoveryDuration;                                 // 0x048C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKSActionRestrictor                         UpAbilityRecoveryActionRestrictor;                         // 0x0490(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UKSPlayerMod*>                        UpBuffsGivenOnActivation;                                  // 0x0498(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_E92H[0x8];                                     // 0x04A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1426);
		return ptr;
	}



};

// Class Killstreak.KSModInst_ReviveTarget
// 0x0018 (FullSize[0x0490] - InheritedSize[0x0478])
class UKSModInst_ReviveTarget : public UKSModInst_Activated
{
public:
	float                                              MaxDistance;                                               // 0x0478(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       OverrideReviveeMontageRowName;                             // 0x047C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_URVX[0xC];                                     // 0x0484(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1427);
		return ptr;
	}



	void TargetReviveInterrupted(class AKSCharacter* Reviver, class AKSCharacter* Revivee);
	void TargetReviveCompleted(class AKSCharacter* Reviver, class AKSCharacter* Revivee);
	void TargetKilled();
	class AKSCharacter* GetTargetCharacter();
};

// Class Killstreak.KSModInst_StartingEquipment
// 0x0000 (FullSize[0x01B8] - InheritedSize[0x01B8])
class UKSModInst_StartingEquipment : public UKSPlayerModInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1428);
		return ptr;
	}



	void GiveEquipment();
};

// Class Killstreak.KSModInst_WeaponSkinOverride
// 0x0130 (FullSize[0x02E8] - InheritedSize[0x01B8])
class UKSModInst_WeaponSkinOverride : public UKSPlayerModInstance
{
public:
	TMap<struct FGameplayTag, struct FDataTableInfo>   WeaponTypeSkinTables;                                      // 0x01B8(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FDataTableInfo                              DefaultWeaponSkinTable;                                    // 0x0208(0x0058) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9PUD[0x20];                                    // 0x0260(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FGameplayTag, class UMultiSkinObject*> WeaponTypeSkinObjects;                                     // 0x0280(0x0050) (Transient, DuplicateTransient, Protected, NativeAccessSpecifierProtected)
	class UMultiSkinObject*                            DefaultWeaponSkinObject;                                   // 0x02D0(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class UKSWeaponComponent>>   AppliedWeaponComponents;                                   // 0x02D8(0x0010) (ExportObject, ZeroConstructor, Transient, DuplicateTransient, ContainsInstancedReference, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1429);
		return ptr;
	}



	void OnActiveWeaponChanged(class AKSCharacter* Character);
};

// Class Killstreak.KSModZone
// 0x0040 (FullSize[0x0260] - InheritedSize[0x0220])
class AKSModZone : public AActor
{
public:
	unsigned char                                      UnknownData_JR01[0x20];                                    // 0x0220(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FKSModZoneModInfo>                   EnterModZoneInfos;                                         // 0x0240(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FKSModZoneModInfo>                   ExitModZoneInfos;                                          // 0x0250(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1430);
		return ptr;
	}



	void OnCharacterPossessedOutsideZone(class AController* Controller);
	void OnCharacterPossessedInsideZone(class AController* Controller);
};

// Class Killstreak.KSMultiStateTargetingModule
// 0x0018 (FullSize[0x0140] - InheritedSize[0x0128])
class UKSMultiStateTargetingModule : public UKSWeaponTargetingModule
{
public:
	TArray<struct FKSTargetingModuleInfo>              TargetingModuleInfos;                                      // 0x0128(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B0FS[0x8];                                     // 0x0138(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1433);
		return ptr;
	}



};

// Class Killstreak.KSMVPDeterminant
// 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
class UKSMVPDeterminant : public UDataAsset
{
public:
	TArray<Killstreak_EPlayerStatType>                 TopStats;                                                  // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<Killstreak_EPlayerStatType, float>            StatToWeightMap;                                           // 0x0040(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1434);
		return ptr;
	}



	TArray<class UKSPersistentPlayerData*> GetOrderedPersistentPlayerDatasForMVPPoints(TArray<class UKSPersistentPlayerData*> UnorderedPersistentPlayerDatas);
	bool ComputeMVPPointsForPersistentPlayerData(class UKSPersistentPlayerData* PersistentPlayerData, int* OutMVPPoints);
};

// Class Killstreak.KSNamedLocation
// 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
class AKSNamedLocation : public AActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1435);
		return ptr;
	}



};

// Class Killstreak.KSNamedObject
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSNamedObject : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1436);
		return ptr;
	}



	struct FText GetKSName();
};

// Class Killstreak.KSNavAgentInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSNavAgentInterface : public UNavAgentInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1438);
		return ptr;
	}



};

// Class Killstreak.KSNavArea
// 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
class UKSNavArea : public UNavArea
{
public:
	Killstreak_EKSNavAreaType                          NavAreaType;                                               // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L41Q[0x7];                                     // 0x0049(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1442);
		return ptr;
	}



};

// Class Killstreak.KSNavigationQueryFilter
// 0x0028 (FullSize[0x0070] - InheritedSize[0x0048])
class UKSNavigationQueryFilter : public UNavigationQueryFilter
{
public:
	class UClass*                                      DefaultFilter;                                             // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      NoJumpFilter;                                              // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      NoZiplineFilter;                                           // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      NoJumpNoZiplineFilter;                                     // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint32_t                                           MaxSearchNodes;                                            // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KP3L[0x4];                                     // 0x006C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1444);
		return ptr;
	}



};

// Class Killstreak.KSNavLinkProxy
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class AKSNavLinkProxy : public ANavLinkProxy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1446);
		return ptr;
	}



};

// Class Killstreak.KSNavModifierComponent
// 0x0010 (FullSize[0x0150] - InheritedSize[0x0140])
class UKSNavModifierComponent : public UNavModifierComponent
{
public:
	struct FVector                                     ComponentBoundsOffset;                                     // 0x0140(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R49I[0x4];                                     // 0x014C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1449);
		return ptr;
	}



	void UpdateNavigationMesh();
	void UpdateCachedBounds();
	void SetAreaClassAndCacheBounds(class UClass* NewAreaClass);
};

// Class Killstreak.KSNavModifierVolume
// 0x0000 (FullSize[0x0268] - InheritedSize[0x0268])
class AKSNavModifierVolume : public ANavModifierVolume
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1451);
		return ptr;
	}



};

// Class Killstreak.KSNearMissComponent
// 0x0000 (FullSize[0x0130] - InheritedSize[0x0130])
class UKSNearMissComponent : public UKSFXCurveComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1452);
		return ptr;
	}



};

// Class Killstreak.KSNeutralBombSpawner
// 0x0038 (FullSize[0x0380] - InheritedSize[0x0348])
class AKSNeutralBombSpawner : public AKSLootSiteBase
{
public:
	struct FLootSiteDropInfo                           BombInfo;                                                  // 0x0348(0x0030) (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               bInitialSpawn;                                             // 0x0378(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRespawn;                                                  // 0x0379(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0RDE[0x6];                                     // 0x037A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1453);
		return ptr;
	}



};

// Class Killstreak.KSNeutralBombZone
// 0x0048 (FullSize[0x0470] - InheritedSize[0x0428])
class AKSNeutralBombZone : public AKSDropOffZone
{
public:
	int                                                BombZoneGroup;                                             // 0x0428(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1BM4[0x4];                                     // 0x042C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnBombZoneActive;                                          // 0x0430(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        BombZone;                                                  // 0x0440(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       CameraName;                                                // 0x0448(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraTransitionInTime;                                    // 0x0450(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraTransitionOutTime;                                   // 0x0454(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bForceCameraShoulder;                                      // 0x0458(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_ECameraShoulder                         CameraShoulder;                                            // 0x0459(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FHFR[0x2];                                     // 0x045A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CameraMaxRotation;                                         // 0x045C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               CameraRotationLockout;                                     // 0x0460(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLockPitch;                                                // 0x0461(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLockYaw;                                                  // 0x0462(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCameraShake;                                              // 0x0463(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OMKS[0x4];                                     // 0x0464(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      CameraShake;                                               // 0x0468(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1454);
		return ptr;
	}



	bool DoesLocalPlayerHaveBomb();
};

// Class Killstreak.KSStaticMeshComponent
// 0x0018 (FullSize[0x0500] - InheritedSize[0x04E8])
class UKSStaticMeshComponent : public UStaticMeshComponent
{
public:
	unsigned char                                      UnknownData_8KEQ[0x8];                                     // 0x04E8(0x0008) Fix Super Size
	unsigned char                                      UnknownData_P2HL[0x10];                                    // 0x04F0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1455);
		return ptr;
	}



};

// Class Killstreak.KSNoCollisionStaticMeshComponent
// 0x0000 (FullSize[0x0500] - InheritedSize[0x0500])
class UKSNoCollisionStaticMeshComponent : public UKSStaticMeshComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1456);
		return ptr;
	}



};

// Class Killstreak.KSNoFlyZoneTracker
// 0x0058 (FullSize[0x00F8] - InheritedSize[0x00A0])
class UKSNoFlyZoneTracker : public UKSAccoladeTracker
{
public:
	int                                                QuantityDowns;                                             // 0x00A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KH7M[0x4];                                     // 0x00A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class AKSPlayerState*, int>                   PlayerDowns;                                               // 0x00A8(0x0050) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1457);
		return ptr;
	}



	void UpdatePlayerTrackers(class AKSPlayerState* InstigatorPlayerState);
	void HandleTrackerAccolade(class AKSPlayerState* Player);
};

// Class Killstreak.KSNPETrackManager
// 0x0000 (FullSize[0x0210] - InheritedSize[0x0210])
class UKSNPETrackManager : public UKSActivityManagerBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1458);
		return ptr;
	}



};

// Class Killstreak.KSNudgeComponent
// 0x0028 (FullSize[0x00D8] - InheritedSize[0x00B0])
class UKSNudgeComponent : public UActorComponent
{
public:
	TArray<class UClass*>                              NudgeClassFilters;                                         // 0x00B0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NudgeSpeed;                                                // 0x00C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxNudgeDistance;                                          // 0x00C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class AActor>>               CachedNudgingActors;                                       // 0x00C8(0x0010) (ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1459);
		return ptr;
	}



	void GetNudgingActors(TArray<TWeakObjectPtr<class AActor>>* NudgingActors);
	struct FVector GetNudgeVectorWithActors(TArray<TWeakObjectPtr<class AActor>> NudgingActors);
	struct FVector GetNudgeVector();
};

// Class Killstreak.KSObjectHelper
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSObjectHelper : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1460);
		return ptr;
	}



};

// Class Killstreak.KSObjective
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSObjective : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1461);
		return ptr;
	}



	void UnbindFromObjectiveTimerTick(const struct FScriptDelegate& Callback);
	void UnbindFromObjectiveTimerComplete(const struct FScriptDelegate& Callback);
	void UnbindFromObjectiveTimerActive(const struct FScriptDelegate& Callback);
	void UnbindFromObjectiveStateChanged(const struct FScriptDelegate& Callback);
	void StopObjectiveTimer();
	void StartObjectiveTimer(float InTime);
	void SetObjectiveStates_Internal(const struct FKSObjectiveState& ObjectiveState, const struct FKSObjectiveState& PreviousObjectiveState);
	void SetObjectiveState_Internal(const struct FKSObjectiveState& ObjectiveState);
	void SetObjectiveState(const struct FKSObjectiveState& ObjectiveState);
	void SetObjectiveCaptureInfo(const struct FKSObjectiveCaptureInfo& ObjectiveCaptureInfo);
	void OnObjectiveTimerTickInternal(float Time);
	void OnObjectiveTimerCompleteInternal();
	void OnObjectiveTimerActiveInternal(bool Active);
	struct FKSObjectiveState GetPreviousObjectiveState();
	class UKSTimerComponent* GetObjectiveTimer();
	struct FKSObjectiveState GetObjectiveState();
	int GetObjectiveId();
	struct FKSObjectiveCaptureInfo GetObjectiveCaptureInfo();
	struct FText GetDisplayName();
	struct FString GetDisplayLabel();
	float GetCaptureProgress();
	void ClearObjectiveCaptureInfo();
	void BindToObjectiveTimerTick(const struct FScriptDelegate& Callback);
	void BindToObjectiveTimerComplete(const struct FScriptDelegate& Callback);
	void BindToObjectiveTimerActive(const struct FScriptDelegate& Callback);
	void BindToObjectiveStateChanged(const struct FScriptDelegate& Callback);
};

// Class Killstreak.KSOutOfBoundsManager
// 0x0090 (FullSize[0x0140] - InheritedSize[0x00B0])
class UKSOutOfBoundsManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData_4VFB[0x14];                                    // 0x00B0(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              OutOfBoundsWarningTime;                                    // 0x00C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OutOfBoundsTickDamageTime;                                 // 0x00C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OutOfBoundsTickDamage;                                     // 0x00CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeSpentGroundedAllowedBeforeSave;                        // 0x00D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2GL8[0x4];                                     // 0x00D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      OutOfBoundsDamageType;                                     // 0x00D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowSaving;                                              // 0x00E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LHVX[0x7];                                     // 0x00E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               AnnouncerLineOnSaved;                                      // 0x00E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               AnnouncerLineOnEntered;                                    // 0x00F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CharacterOverlaps;                                         // 0x00F8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YGVZ[0x4];                                     // 0x00FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                CharacterWarningTimer;                                     // 0x0100(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                                CharacterDamageTickTimer;                                  // 0x0108(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                VehicleOverlaps;                                           // 0x0110(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N2FE[0x4];                                     // 0x0114(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                VehicleWarningTimer;                                       // 0x0118(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                                VehicleDamageTickTimer;                                    // 0x0120(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrimitiveComponent*                         OverlapCheckComponent;                                     // 0x0128(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                                TimeSpentGroundedTimerHandle;                              // 0x0130(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DefaultRecoveryUseTime;                                    // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IM13[0x4];                                     // 0x013C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1462);
		return ptr;
	}



	void TickDamage();
	void OnOutOfBoundsWarningExpired();
	void OnCharacterOutOfWorld(class AKSCharacter* Character);
	void OnActorOverlapZoneEnd(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnActorOverlapZoneBegin(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnActorOverlapVolumeEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnActorOverlapVolumeBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ExpireTimeSpentGroundedTimer();
};

// Class Killstreak.KSOutOfBoundsManager_RoundGame
// 0x0020 (FullSize[0x0160] - InheritedSize[0x0140])
class UKSOutOfBoundsManager_RoundGame : public UKSOutOfBoundsManager
{
public:
	float                                              SecondsIntoRoundToFreeze;                                  // 0x0140(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UX1D[0x14];                                    // 0x0144(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSPlayerMod*                                FrozenCharacterModAsset;                                   // 0x0158(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1463);
		return ptr;
	}



	void OnRoundStarted(const struct FRoundInitState& RoundState);
	void OnFreezeEnd();
};

// Class Killstreak.KSOutOfBoundsRecoveryPoint
// 0x0010 (FullSize[0x0258] - InheritedSize[0x0248])
class AKSOutOfBoundsRecoveryPoint : public ANavigationObjectBase
{
public:
	int                                                SideNum;                                                   // 0x0248(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_K4GC[0xC];                                     // 0x024C(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1465);
		return ptr;
	}



};

// Class Killstreak.KSOutOfBoundsVolume
// 0x0008 (FullSize[0x0260] - InheritedSize[0x0258])
class AKSOutOfBoundsVolume : public AVolume
{
public:
	float                                              TickDamage;                                                // 0x0258(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WarningDuration;                                           // 0x025C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1467);
		return ptr;
	}



	void TurnOnCollision();
	void TurnOffCollision(class AKSGameState* GameState, const struct FRoundResult& RoundResult);
	void OnActorOverlapVolumeEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnActorOverlapVolumeBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};

// Class Killstreak.KSParticleModuleLocationSkelVertSurface
// 0x0000 (FullSize[0x0090] - InheritedSize[0x0090])
class UKSParticleModuleLocationSkelVertSurface : public UParticleModuleLocationSkelVertSurface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1471);
		return ptr;
	}



};

// Class Killstreak.KSPathFollowingComponent
// 0x0000 (FullSize[0x0298] - InheritedSize[0x0298])
class UKSPathFollowingComponent : public UCrowdFollowingComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1474);
		return ptr;
	}



};

// Class Killstreak.KSPawnAction_Crouch
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UKSPawnAction_Crouch : public UKSPawnActionBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1478);
		return ptr;
	}



};

// Class Killstreak.KSPawnAction_DodgeRoll
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UKSPawnAction_DodgeRoll : public UKSPawnActionBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1479);
		return ptr;
	}



};

// Class Killstreak.KSPawnAction_FreeFall
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UKSPawnAction_FreeFall : public UKSPawnActionBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1480);
		return ptr;
	}



};

// Class Killstreak.KSPawnAction_Jump
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UKSPawnAction_Jump : public UKSPawnActionBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1481);
		return ptr;
	}



};

// Class Killstreak.KSPawnAction_QuickMelee
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UKSPawnAction_QuickMelee : public UKSPawnActionBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1482);
		return ptr;
	}



};

// Class Killstreak.KSPawnAction_Reload
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UKSPawnAction_Reload : public UKSPawnActionBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1483);
		return ptr;
	}



};

// Class Killstreak.KSPawnAction_StartADS
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UKSPawnAction_StartADS : public UKSPawnActionBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1484);
		return ptr;
	}



};

// Class Killstreak.KSPawnAction_StartAimAlternate
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UKSPawnAction_StartAimAlternate : public UKSPawnActionBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1485);
		return ptr;
	}



};

// Class Killstreak.KSPawnAction_StartFire
// 0x0010 (FullSize[0x00B0] - InheritedSize[0x00A0])
class UKSPawnAction_StartFire : public UKSPawnActionBase
{
public:
	struct FGameplayTag                                EquipPoint;                                                // 0x00A0(0x0008) (Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bInfiniteAmmo;                                             // 0x00A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1N30[0x3];                                     // 0x00A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                PersistentAmmoCount;                                       // 0x00AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1486);
		return ptr;
	}



};

// Class Killstreak.KSPawnAction_StartSprint
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UKSPawnAction_StartSprint : public UKSPawnActionBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1487);
		return ptr;
	}



};

// Class Killstreak.KSPawnAction_StopADS
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UKSPawnAction_StopADS : public UKSPawnActionBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1488);
		return ptr;
	}



};

// Class Killstreak.KSPayBackTracker
// 0x0010 (FullSize[0x00B0] - InheritedSize[0x00A0])
class UKSPayBackTracker : public UKSAccoladeTracker
{
public:
	TArray<struct FTrackPlayerElim>                    PlayerElimTracker;                                         // 0x00A0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1494);
		return ptr;
	}



	bool IsVictimStored(int VictimPlayerId, struct FTrackPlayerElim* PlayerTracker, int* TrackerIndex);
	void HandleTrackerAccolade(class AKSPlayerState* PlayerState);
	bool CheckLastInstigator(int VictimId, int CurrentInstigatorId, struct FTrackPlayerElim* PlayerTracker, int* TrackerIndex);
};

// Class Killstreak.KSPerformanceCaptureCamera
// 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
class AKSPerformanceCaptureCamera : public AActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1495);
		return ptr;
	}



	void GetNextCamera();
};

// Class Killstreak.KSPersistentDataReplicator
// 0x0230 (FullSize[0x0450] - InheritedSize[0x0220])
class AKSPersistentDataReplicator : public AInfo
{
public:
	struct FAccountJobStatReplicator                   StatsReplicator;                                           // 0x0220(0x0230) (Net, Transient, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1496);
		return ptr;
	}



	int RequestJobMasteryExperience(const struct FKSPersistentPlayerId& InPlayerId, class UKSJobItem* InJob);
	int GetJobMastery(const struct FKSPersistentPlayerId& InPlayerId, class UKSJobItem* InJob);
};

// Class Killstreak.KSPersistentPlayerData
// 0x0170 (FullSize[0x0198] - InheritedSize[0x0028])
class UKSPersistentPlayerData : public UObject
{
public:
	bool                                               bIsBoundToMinPlayerData;                                   // 0x0028(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NRNU[0x7];                                     // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSPlayerState*                              PlayerState;                                               // 0x0030(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_05X3[0x10];                                    // 0x0038(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSPersistentPlayerId                       ID;                                                        // 0x0048(0x0010) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                TeamNum;                                                   // 0x0058(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TRML[0x4];                                     // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     PlayerName;                                                // 0x0060(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnMinimumPlayerDataUpdatedDel;                             // 0x0070(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N7DV[0x18];                                    // 0x0080(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPlayerDataTeamChangedDel;                                // 0x0098(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_D52F[0x18];                                    // 0x00A8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bAbandoned;                                                // 0x00C0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NBE9[0x7];                                     // 0x00C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPersistentPlayerDataAbandonedDel;                        // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_55YS[0x18];                                    // 0x00D8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                CachedEliminations;                                        // 0x00F0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                CachedDowns;                                               // 0x00F4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                CachedAssists;                                             // 0x00F8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                CachedDeaths;                                              // 0x00FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                CachedRevives;                                             // 0x0100(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                CachedMoney;                                               // 0x0104(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                CachedTotalCashEarned;                                     // 0x0108(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NKO2[0x4];                                     // 0x010C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UKSItem*, class UKSItem*>               SkinMap;                                                   // 0x0110(0x0050) (Transient, NativeAccessSpecifierPrivate)
	class UKSJobItem*                                  ActiveJob;                                                 // 0x0160(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NGHJ[0x18];                                    // 0x0168(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnActiveJobMasteryXpChanged;                               // 0x0180(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int                                                ActiveJobMasteryXp;                                        // 0x0190(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                ActiveJobMasteryLevel;                                     // 0x0194(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1497);
		return ptr;
	}



	bool IsAbandoned();
	bool HasATeam();
	int GetTotalCashEarned();
	int GetTeamNum();
	int GetRevives();
	class AKSPlayerState* GetPlayerState();
	struct FString GetPlayerName();
	int64_t GetPlayerId();
	int GetMoney();
	int GetJobMasteryLevel();
	class UKSJobItem* GetJob();
	int GetEliminations();
	int GetDowns();
	int GetDeaths();
	int GetAssists();
	void BoundPlayerStateDestroyed(class AActor* InActor);
};

// Class Killstreak.KSPhaseRuleComponent
// 0x0028 (FullSize[0x00D8] - InheritedSize[0x00B0])
class UKSPhaseRuleComponent : public UKSGameRuleComponent
{
public:
	struct FScriptMulticastDelegate                    PhaseCompletedDel;                                         // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              ScoringScalar;                                             // 0x00C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LastInitiatedPhaseTime;                                    // 0x00C4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRejectPhaseTimerExpiredForPostRound;                      // 0x00C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseInitialSpawnPoints;                                    // 0x00C9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C7I9[0x2];                                     // 0x00CA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       LastPhaseName;                                             // 0x00CC(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPhaseActive;                                              // 0x00D4(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UZN1[0x3];                                     // 0x00D5(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1498);
		return ptr;
	}



	void SetTeamType(class AKSTeamState* Team, Killstreak_EExtractionTeamType TeamType);
	void SetTeamIntraScoreGoal(class AKSTeamState* Team, int Value);
	void SetTeamIntraScore(class AKSTeamState* Team, int Value);
	void SetGameModePhaseTime(float TimeSeconds, bool bCallTimerHasExpiredIfZero);
	void SetGameModePhaseNameAndTimer(const struct FName& NewPhaseName, int NewPhaseId, float InTimerDuration, bool bCallTimerHasExpiredIfZero);
	void SetGameModePhaseName(const struct FName& NewPhaseName, int NewPhaseId);
	void ResetTicketsForTeam(class AKSTeamState* Team, bool bToZero);
	void PhaseTimerExpired(const struct FName& PhaseName);
	void OnPhaseTimerExpired(const struct FName& PhaseName);
	void OnPhaseStarted(const struct FName& PhaseName, int PhaseId, float TimeSeconds);
	void OnObjectiveSpawned();
	void OnObjectiveReset();
	void OnObjectiveHeld();
	void OnObjectiveExploded();
	void OnObjectiveDropped();
	void OnObjectiveDisarming();
	void OnObjectiveDisarmed();
	void OnObjectiveDeactivated();
	void OnObjectiveContested();
	void OnObjectiveArming();
	void OnObjectiveArmed();
	void OnGameObjectiveStateChanged();
	bool IsPhaseActive();
	void HandleTeamSidesFlipped();
	void HandlePhaseStarted();
	void HandlePhaseInterrupted();
	void GivePointsToTeam(class AKSTeamState* Team, int Points);
	bool GiveIntraPointsToTeam(class AKSTeamState* Team, int Points, bool bUseScoreScalar);
	class AKSGameState_Modular* GetGameStateModular();
	float GetGameModeRemainingPhaseTime();
	class AKSGameMode_Modular* GetGameModeModular();
	struct FName GetCurrentGamePhase();
	void CompletePhase(class AKSTeamState* LeadingTeam);
	void ChangeTicketsForTeam(class AKSTeamState* Team, int Count);
};

// Class Killstreak.KSPhysicsAssetUtilities
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSPhysicsAssetUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1499);
		return ptr;
	}



	bool STATIC_RemovePhysicsAsset(class USkeletalMeshComponent* Mesh, class UPhysicsAsset* PhysicsAsset);
	bool STATIC_AppendPhysicsAsset(class USkeletalMeshComponent* Mesh, class UPhysicsAsset* PhysicsAsset, const struct FName& CollisionProfileName, TArray<int>* OutNewBodyIndices, bool SimulatePhysics);
};

// Class Killstreak.KSPingBeaconBase
// 0x0018 (FullSize[0x0238] - InheritedSize[0x0220])
class AKSPingBeaconBase : public AActor
{
public:
	class UDataTable*                                  ContextualPingTypesDT;                                     // 0x0220(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSPlayerState*                              PlayerOwner;                                               // 0x0228(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DIV7[0x8];                                     // 0x0230(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1500);
		return ptr;
	}



	void SetupBeaconDisplay();
	void PingRemoved(int PingId, class AKSPlayerState* OwningPlayer);
	struct FLinearColor GetPingColorForBeacon();
	bool FindRowByType(Killstreak_EPingType PingType, struct FContextualPingTypesRow* ContextualPingRow);
};

// Class Killstreak.KSPingManager
// 0x0480 (FullSize[0x0530] - InheritedSize[0x00B0])
class UKSPingManager : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnPingFailureDel;                                          // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPingAdded;                                               // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPingRemoved;                                             // 0x00D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPingChanged;                                             // 0x00E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSentVoiceLineOnly;                                       // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSelfPingAdded;                                           // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSelfPingRemoved;                                         // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSelfPingChanged;                                         // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FPingInfoChangeList                         ReplicatedPings;                                           // 0x0130(0x0120) (Net, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FPingInfo>                           LocallyPredictedPings;                                     // 0x0250(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<Killstreak_EPingType, float>                  PingLifetimes;                                             // 0x0260(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_EPingType, class UClass*>          PingBeaconTypes;                                           // 0x02B0(0x0050) (Edit, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<Killstreak_EPingType, int>                    MaxPingsForType;                                           // 0x0300(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<Killstreak_EPingType, struct FVector_NetQuantize> PingIconOffsets;                                           // 0x0350(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                               bDisplaySelfPingsOnNameplate;                              // 0x03A0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWorldSelfPingsFollowPlayer;                               // 0x03A1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O1LY[0x4E];                                    // 0x03A2(0x004E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxPingDistance;                                           // 0x03F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CachedHoveredActorResetTime;                               // 0x03F4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AKSPingBeaconBase*>                   ActiveBeacons;                                             // 0x03F8(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowPingRemoval;                                         // 0x0408(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FCC6[0x7];                                     // 0x0409(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<Killstreak_EPingType, class UAkAudioEvent*>   PingAudioCues;                                             // 0x0410(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GZ80[0x8];                                     // 0x0460(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSGameState_RoundGame*                      CachedRoundState;                                          // 0x0468(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AKSPlayerController*                         CachedOwner;                                               // 0x0470(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AKSTeamState*                                CachedTeam;                                                // 0x0478(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6OAD[0x28];                                    // 0x0480(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AActor>                       CachedHoveredActor;                                        // 0x04A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KH4N[0x8];                                     // 0x04B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      MinimapDisplayWidget[0x28];                                // 0x04B0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      FullmapDisplayWidget[0x28];                                // 0x04E0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      OverlayDisplayWidget[0x28];                                // 0x0508(0x0028) UNKNOWN PROPERTY: SoftClassProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1501);
		return ptr;
	}



	void UpdateCachedHoveredActor(class AActor* NewCachedHoveredActor);
	void ShowOutline(class AActor* OutlinedActor);
	void ServerSendVoiceLineOnly(Killstreak_EPingMessage PingMessage);
	void ServerRemovePing(int PingId, class AKSPlayerState* PingingPlayer);
	void ServerPingRequest(const struct FPingInfo& PingInfo);
	void ServerChangePing(int PingId, class AKSPlayerState* PingingPlayer, class AKSPlayerState* AcknowledgingPlayer);
	void ResetCachedHoveredActor();
	void RemovePing(int PingId, class AKSPlayerState* PingingPlayer);
	bool RemoveInternalPingInfo(int NewPingId, class AKSPlayerState* NewCreatingPlayer);
	bool RemoveHoveredPing(int PingId, class AKSPlayerState* PingingPlayer);
	void OnPingExpired(const struct FPingInfo& ExpiringPing);
	bool IsThrottled();
	bool IsSelfPing(Killstreak_EPingType PingType);
	bool IsInvisiblePingType(Killstreak_EPingType PingType);
	void HideOutline(class AActor* OutlinedActor);
	TArray<Killstreak_EPingType> GetPingTypesToCheck(Killstreak_EPingType PingType);
	float GetPingLifetimes(Killstreak_EPingType PingType);
	bool GetPingInfoByIdAndPlayer(int PingId, class AKSPlayerState* PingingPlayer, struct FPingInfo* OutPingInfo);
	int GetPingIdForDisplayId(int DisplayId, class AKSPlayerState* CreatingPlayer);
	int GetDisplayIdForPingId(int PingId, class AKSPlayerState* CreatingPlayer);
	void GameRoundOver(class AKSGameState* GameState, const struct FRoundResult& RoundResult);
	bool DoesWorldSelfPingFollowPlayer();
	void ClientPingRejected(Killstreak_EPingFailedType Reason, int PingId);
	void ClearPingsOfType(Killstreak_EPingType PingType);
	void ClearAllPingsForPlayer();
	bool CheckIfFriendlyCharacter(class AActor* ActorToCheck, class AKSCharacter* PlayerCharacter);
	bool CheckIfEnemyCharacter(class AActor* ActorToCheck, class AKSCharacter* PlayerCharacter);
	bool CheckIfDeployable(class AActor* ActorToCheck, class AKSCharacter* PlayerCharacter, bool bMustBeEnemyDeployable);
	void ChangePing(int PingId, class AKSPlayerState* PingingPlayer, class AKSPlayerState* AcknowledgingPlayer);
	void AttemptRemovePing(int PingId, class AKSPlayerState* PingingPlayer);
	void AttemptPing2D(const struct FVector2D& WorldLocation2D);
	void AttemptManualPing(Killstreak_EPingType PingType, Killstreak_EPingMessage PingMessage, class AActor* PingedActor, bool bRemoveOtherPingsOfType);
	void AttemptContextualPing(bool DoubleClick);
	void AttemptCommunicationPing(Killstreak_EPingType PingType, Killstreak_EPingMessage PingMessage);
	void AddPing(const struct FPingInfo& PingInfo);
	void AddInternalPingInfo(int NewPingId, int NewDisplayId, class AKSPlayerState* NewCreatingPlayer);
	void AddHoveredPing(int PingId, class AKSPlayerState* PingingPlayer);
};

// Class Killstreak.KSPlayerActivityInstanceContainer
// 0x0058 (FullSize[0x0080] - InheritedSize[0x0028])
class UKSPlayerActivityInstanceContainer : public UObject
{
public:
	unsigned char                                      UnknownData_2C03[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FInventoryId, class UKSActivityInstance*> ActivityInstances;                                         // 0x0030(0x0050) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1502);
		return ptr;
	}



};

// Class Killstreak.KSPlayerCameraManager
// 0x0030 (FullSize[0x27D0] - InheritedSize[0x27A0])
class AKSPlayerCameraManager : public APlayerCameraManager
{
public:
	unsigned char                                      UnknownData_3DJP[0x28];                                    // 0x27A0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ThermalScopePPCount;                                       // 0x27C8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7NKE[0x4];                                     // 0x27CC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1504);
		return ptr;
	}



};

// Class Killstreak.KSPlayerChallengesManager
// 0x0070 (FullSize[0x0280] - InheritedSize[0x0210])
class UKSPlayerChallengesManager : public UKSActivityManagerBase
{
public:
	unsigned char                                      UnknownData_L22F[0x8];                                     // 0x0210(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPlayerChallengesReady;                                   // 0x0218(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerChallengesChanged;                                 // 0x0228(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerDailyChallengeTimerChanged;                        // 0x0238(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               ChallengesReady;                                           // 0x0248(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q90Y[0x7];                                     // 0x0249(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    TestPlayerChallengeComplete;                               // 0x0250(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UJU3[0x10];                                    // 0x0260(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnLoginRewardClaimed;                                      // 0x0270(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1505);
		return ptr;
	}



	bool SaveSeenChallenges(TArray<class UKSActivityInstance*> SeenChallenges);
	void RequestNewChallenge();
	void OnDailyChallengeTimerRefresh(const struct FInventoryId& InventoryTypeId);
	void OnChallengeProgressUpdated(const struct FInventoryTypeId& InventoryTypeId);
	bool GetUnseenChallenges(TArray<class UKSActivityInstance*>* OutActivityInstances, bool UnlockedOnly);
	int GetSecondsTillNewDailyChallenge();
	TMap<int, class UKSActivityInstance*> GetNewDailyChallengesRelativeTo(TArray<class UKSActivityInstance*> PriorList);
};

// Class Killstreak.KSPlayerInfo
// 0x0020 (FullSize[0x00A0] - InheritedSize[0x0080])
class UKSPlayerInfo : public UPUMG_PlayerInfo
{
public:
	struct FScriptMulticastDelegate                    OnPlayerStatusChanged;                                     // 0x0080(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_901T[0x10];                                    // 0x0090(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1506);
		return ptr;
	}



	void ViewExternalProfile();
	void ToggleDND();
	bool ShouldShowViewGamercardForPlayer();
	bool ShouldShowViewExternalProfile();
	bool ShouldShowInviteToPartyForPlayer();
	bool ShouldShowCrossplayIconForPlayer();
	bool IsSuggestedFriend();
	bool IsSamePortalAsLocalPlayer();
	bool IsRoCoFriend();
	bool IsRequestingFriend();
	bool IsPlayingThisGame();
	bool IsPendingFriend();
	bool IsOnline();
	bool IsMuted();
	bool IsInVoiceChannel();
	bool IsInQueue();
	bool IsInMatch();
	bool IsInLocalParty();
	bool IsInLobby();
	bool IsFriend();
	bool IsDND();
	bool InviteToParty(struct FText* OutErrorText);
	bool HasPortalRelationship();
	bool HasPortalInfoForClientPortal();
	bool HasHRRelationship();
	bool HasDeserter();
	struct FText GetStatusMessage();
	struct FText GetRichPresenceText();
	int GetRankedLevelProgress(int QueueId);
	int GetRankedLevel(int QueueId);
	int GetQuantityForItem(int ItemId);
	Killstreak_EKSPlayerInputType GetPlayerSelectedInputType();
	bool GetPlayersDisplayedSkin(class UKSItem** SkinItem);
	Killstreak_EKSPlatformType GetPlayerPlatformType();
	Killstreak_EKSPlayerOnlineStatus GetPlayerOnlineStatus(bool bAllowPartyStatus, bool bAllowFriendRequestStatus);
	int GetPlayerLevel();
	TArray<struct FPlayerAlias> GetPlayerAliases();
	bool GetEquippedAccountItem(Killstreak_EPlayerAccountSlot eSlot, class UKSItem** EquippedItem);
	int GetDurationForItem(int ItemId);
	int GetDeserterPenaltySeconds();
	bool CanBeSpectated();
	bool CanBeChallenged();
};

// Class Killstreak.KSPlayerInputDefault
// 0x0050 (FullSize[0x0078] - InheritedSize[0x0028])
class UKSPlayerInputDefault : public UObject
{
public:
	TArray<struct FSettingConfigPair>                  SettingsConfig;                                            // 0x0028(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FKSInputActionNameTypePair>          KSInputActionNameTypePairs;                                // 0x0038(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FKSInputActionTiedNames>             KSInputActionTiedNames;                                    // 0x0048(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FKSCustomInputActionKey>             CustomInputActionKeys;                                     // 0x0058(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FKSCustomInputAxisKey>               CustomInputAxisKeys;                                       // 0x0068(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1507);
		return ptr;
	}



};

// Class Killstreak.KSPlayerInput
// 0x0310 (FullSize[0x1640] - InheritedSize[0x1330])
class UKSPlayerInput : public UPGame_PlayerInput
{
public:
	TMap<struct FName, struct FString>                 SavedSettingsConfig;                                       // 0x1330(0x0050) (Config, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LMEN[0xF4];                                    // 0x1380(0x00F4) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector2D                                   GamepadLookAcceleration;                                   // 0x1474(0x0008) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinMouseSenseScaling;                                      // 0x147C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxMouseSenseScaling;                                      // 0x1480(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TouchLookSensitivityADS;                                   // 0x1484(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZXTJ[0x8];                                     // 0x1488(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnKeyMappingsUpdated;                                      // 0x1490(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<struct FName, struct FKSCustomInputActionKeyMappings> KSCustomActionKeyMappings;                                 // 0x14A0(0x0050) (Config, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IF4W[0x50];                                    // 0x14F0(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, struct FKSCustomInputAxisKeyMappings> KSCustomAxisKeyMappings;                                   // 0x1540(0x0050) (Config, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RPPS[0x50];                                    // 0x1590(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      KSLeftAnalogStickFilterClass;                              // 0x15E0(0x0008) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      KSRightAnalogStickFilterClass;                             // 0x15E8(0x0008) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSAnalogStickFilter*                        LeftAnalogStickFilter;                                     // 0x15F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9D6Z[0x10];                                    // 0x15F8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSAnalogStickFilter*                        RightAnalogStickFilter;                                    // 0x1608(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_G2J6[0x10];                                    // 0x1610(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSoftObjectPath                             TouchRegionDeltaAxisAssistMultiplierCurvePath;             // 0x1620(0x0018) (ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 TouchRegionDeltaAxisAssistMultiplierCurve;                 // 0x1638(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1508);
		return ptr;
	}



	bool DoesInputTypeSupportChords(Killstreak_EKSInputType InputType);
};

// Class Killstreak.KSPlayerInventoryHelper
// 0x00A0 (FullSize[0x01B8] - InheritedSize[0x0118])
class UKSPlayerInventoryHelper : public UPUMG_PlayerInventoryHelper
{
public:
	TMap<struct FInventoryId, struct FScriptMulticastDelegate> DynamicCallbacksPerInventoryId;                            // 0x0118(0x0050) (ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<struct FInventoryTypeId, struct FScriptMulticastDelegate> DynamicCallbacksPerInventoryTypeId;                        // 0x0168(0x0050) (ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1509);
		return ptr;
	}



	void RemoveAllItemUpdatedCallbacks(const struct FScriptDelegate& Callback);
	void RemoveAllItemTypeUpdatedCallbacks(const struct FScriptDelegate& Callback);
	int GetCountByType(int ItemTypeId, int ItemSubTypeId, class AKSPlayerController* Player);
	int GetCount(int64_t ItemId, class AKSPlayerController* Player);
	struct FDateTime GetAcquiredTime(int64_t ItemId, class AKSPlayerController* Player);
	void AddItemUpdatedCallback(const struct FScriptDelegate& Callback, int64_t ItemId, class AKSPlayerController* Player);
	void AddItemTypeUpdatedCallback(const struct FScriptDelegate& Callback, int ItemTypeId, int ItemSubTypeId, class AKSPlayerController* Player);
};

// Class Killstreak.KSPlayerJoinRuleComponent
// 0x00A0 (FullSize[0x0150] - InheritedSize[0x00B0])
class UKSPlayerJoinRuleComponent : public UKSGameRuleComponent
{
public:
	unsigned char                                      UnknownData_UO4S[0xA0];                                    // 0x00B0(0x00A0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1510);
		return ptr;
	}



	void ProcessNextTaskForPlayer(class APlayerController* Player);
	bool PlayerHasJoinTasks(class APlayerController* Player);
	void OnAllTasksCompleteForPlayer(class APlayerController* Player);
	void GetJoinTasksForPlayer(class APlayerController* Player, TArray<class UKSPlayerJoinTask*>* OutTasksForPlayer);
};

// Class Killstreak.KSPlayerJoinRuleComponent_Simple
// 0x0000 (FullSize[0x0150] - InheritedSize[0x0150])
class UKSPlayerJoinRuleComponent_Simple : public UKSPlayerJoinRuleComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1511);
		return ptr;
	}



};

// Class Killstreak.KSPlayerJoinTask
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UKSPlayerJoinTask : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnPlayerJoinTaskComplete;                                  // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1512);
		return ptr;
	}



	bool BeginTask(class APlayerController* Player);
};

// Class Killstreak.KSPlayerJoinTask_JobSelect
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UKSPlayerJoinTask_JobSelect : public UKSPlayerJoinTask
{
public:
	unsigned char                                      UnknownData_A692[0x8];                                     // 0x0038(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1513);
		return ptr;
	}



};

// Class Killstreak.KSPlayerJoinTask_Shop
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UKSPlayerJoinTask_Shop : public UKSPlayerJoinTask
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1514);
		return ptr;
	}



	void HandleShopClosed(class AKSPlayerShop* PlayerShop);
};

// Class Killstreak.KSPlayerMod
// 0x00E0 (FullSize[0x0330] - InheritedSize[0x0250])
class UKSPlayerMod : public UKSItem
{
public:
	bool                                               bIsPerk;                                                   // 0x0250(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanBePickup;                                              // 0x0251(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Z6H2[0x6];                                     // 0x0252(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      FunctionalClass[0x28];                                     // 0x0252(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	bool                                               bIsInstanceReplicated;                                     // 0x0280(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TFOO[0x3];                                     // 0x0281(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ModUnlockTier;                                             // 0x0284(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EModInterferenceType                    AttachmentInteraction;                                     // 0x0288(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSingleInstanceStack;                                      // 0x0289(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bStacksPerInstigator;                                      // 0x028A(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRemoveAllInstances;                                       // 0x028B(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxStackCount;                                             // 0x028C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCapInstanceCount;                                         // 0x0290(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EPlayerModType                          ModType;                                                   // 0x0291(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldAssist;                                             // 0x0292(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CDF3[0x5];                                     // 0x0293(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       EffectCategories;                                          // 0x0298(0x0020) (Edit, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FName>                               TriggerEvents;                                             // 0x02B8(0x0010) (Edit, ZeroConstructor, Config, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FName, int>                            AnimEventPriorityMap;                                      // 0x02C8(0x0050) (Edit, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      RemovesFromLoadout[0x10];                                  // 0x0318(0x0010) UNKNOWN PROPERTY: ArrayProperty
	bool                                               bLerpModifiers;                                            // 0x0328(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldLagCompensateEffects;                               // 0x0329(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanActivateOnZipline;                                     // 0x032A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Y2BX[0x5];                                     // 0x032B(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1515);
		return ptr;
	}



	bool ShouldRemoveAllInstances();
	bool ShouldLerpModifiers();
	bool ShouldLagCompensateEffects();
	bool IsSingleInstanceStack();
	bool IsPerk();
	bool IsModTemporary();
	bool IsInstanceReplicated();
	TArray<struct FName> GetTriggerEvents();
	bool GetPerkCategory(class UPerkCategory** FoundPerkCategory);
	int GetModUnlockTier();
	Killstreak_EPlayerModType GetModType();
	Killstreak_EModInterferenceType GetModInteraction();
	int GetMaxStackCount();
	void GetFunctionalClass();
	struct FGameplayTagContainer GetEffectCategories();
};

// Class Killstreak.KSPlayerMod_Accuracy
// 0x0008 (FullSize[0x0338] - InheritedSize[0x0330])
class UKSPlayerMod_Accuracy : public UKSPlayerMod
{
public:
	float                                              BaseAccuracyMultiplier;                                    // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_A4NM[0x4];                                     // 0x0334(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1516);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_ActionRestrictor
// 0x0010 (FullSize[0x0340] - InheritedSize[0x0330])
class UKSPlayerMod_ActionRestrictor : public UKSPlayerMod
{
public:
	bool                                               bRestrictSprint;                                           // 0x0330(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bRestrictDodgeRoll;                                        // 0x0331(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bRestrictMantleAndVault;                                   // 0x0332(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bRestrictQuickMelee;                                       // 0x0333(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bRestrictGadgetUse;                                        // 0x0334(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bRestrictInteracting;                                      // 0x0335(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bRestrictJumping;                                          // 0x0336(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bRestrictCrouching;                                        // 0x0337(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bRestrictEmotesAndSprays;                                  // 0x0338(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S049[0x7];                                     // 0x0339(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1517);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_Activated
// 0x0068 (FullSize[0x0398] - InheritedSize[0x0330])
class UKSPlayerMod_Activated : public UKSPlayerMod
{
public:
	bool                                               bIsCharacterAbility;                                       // 0x0330(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JAND[0x3];                                     // 0x0331(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                RequiredCharge;                                            // 0x0334(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaximumCharge;                                             // 0x0338(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                DefaultCharge;                                             // 0x033C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRemoveIfExhausted;                                        // 0x0340(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_STDA[0x3];                                     // 0x0341(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RefundFactor;                                              // 0x0344(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasLockout;                                               // 0x0348(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TF5A[0x3];                                     // 0x0349(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LockoutTime;                                               // 0x034C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFullChargeOnRoundStart;                                   // 0x0350(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFullChargeOnReceipt;                                      // 0x0351(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanActivateBeforeRoundStart;                              // 0x0352(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIgnoreNoFireZone;                                         // 0x0353(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIgnoreWeaponFireCheck;                                    // 0x0354(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEndOnDown;                                                // 0x0355(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEndOnDeath;                                               // 0x0356(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SBYR[0x1];                                     // 0x0357(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      BuffsGivenOnActivation[0x10];                              // 0x0357(0x0010) UNKNOWN PROPERTY: ArrayProperty
	bool                                               bKeepsTeamAliveIfUsable;                                   // 0x0368(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bKeepsTeamAliveIfActive;                                   // 0x0369(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SYFW[0x2];                                     // 0x036A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AbilitySetupDuration;                                      // 0x036C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSetupLagCompensation;                                     // 0x0370(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4QVK[0x3];                                     // 0x0371(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AbilityDuration;                                           // 0x0374(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCapBonusDuration;                                         // 0x0378(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VJ8H[0x3];                                     // 0x0379(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AbilityEndWarningTime;                                     // 0x037C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AbilityRecoveryDuration;                                   // 0x0380(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSelectableNormally;                                       // 0x0384(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSelectableWhileDowned;                                    // 0x0385(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SII4[0x2];                                     // 0x0386(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ChargePerSecond;                                           // 0x0388(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ChargePerHundredPoints;                                    // 0x038C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      CameraShake;                                               // 0x0390(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1518);
		return ptr;
	}



	bool ShouldRemoveIfExhausted();
	bool ShouldCapBonusDuration();
	int GetRequiredCharge();
	float GetRefundFactor();
	int GetMaximumCharge();
	int GetDefaultCharge();
	void GetBuffs();
	float GetAbilitySetupDuration();
	float GetAbilityRecoveryDuration();
	float GetAbilityEndWarningTime();
	float GetAbilityDuration();
};

// Class Killstreak.KSPlayerMod_ActivatedTarget
// 0x0010 (FullSize[0x03A8] - InheritedSize[0x0398])
class UKSPlayerMod_ActivatedTarget : public UKSPlayerMod_Activated
{
public:
	unsigned char                                      TargetBuffsGivenOnActivation[0x10];                        // 0x0398(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1519);
		return ptr;
	}



	void GetTargetBuffs();
};

// Class Killstreak.KSPlayerMod_ActivationConfig
// 0x0000 (FullSize[0x0398] - InheritedSize[0x0398])
class UKSPlayerMod_ActivationConfig : public UKSPlayerMod_Activated
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1520);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_AdjustCashRewards
// 0x0008 (FullSize[0x0338] - InheritedSize[0x0330])
class UKSPlayerMod_AdjustCashRewards : public UKSPlayerMod
{
public:
	int                                                BonusCashPerDown;                                          // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FBHD[0x4];                                     // 0x0334(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1521);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_AdsMoveSpeed
// 0x0008 (FullSize[0x0338] - InheritedSize[0x0330])
class UKSPlayerMod_AdsMoveSpeed : public UKSPlayerMod
{
public:
	float                                              AdsMoveSpeedMultiplier;                                    // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_W928[0x4];                                     // 0x0334(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1522);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_Aim
// 0x0008 (FullSize[0x0338] - InheritedSize[0x0330])
class UKSPlayerMod_Aim : public UKSPlayerMod
{
public:
	bool                                               AimLocked;                                                 // 0x0330(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               CrosshairHidden;                                           // 0x0331(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B51Y[0x2];                                     // 0x0332(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SensitivityMultiplier;                                     // 0x0334(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1523);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_AngleConfig
// 0x0010 (FullSize[0x0340] - InheritedSize[0x0330])
class UKSPlayerMod_AngleConfig : public UKSPlayerMod
{
public:
	float                                              AngleThreshold;                                            // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseDistance;                                              // 0x0334(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SDV1[0x3];                                     // 0x0335(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DistanceThreshold;                                         // 0x0338(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YVBH[0x4];                                     // 0x033C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1524);
		return ptr;
	}



	bool CheckDistanceAndAngleFromEnemies(class AKSCharacter* InCharacter, bool* bInLOS, bool bWithinDistance, bool bWithinAngle, bool bCheckLOS, bool bIgnoreDeadEnemies);
	bool CheckDistanceAndAngle(class UObject* WorldContextObject, TArray<class AActor*> IgnoredActors, const struct FVector& start, const struct FVector& end, const struct FVector& DirectionToCheck, bool* bInLOS, bool bWithinDistance, bool bWithinAngle, bool bCheckLOS);
	bool CheckAngle(const struct FVector& Direction1, const struct FVector& Direction2, bool bWithinAngle);
};

// Class Killstreak.KSPlayerMod_ApplyModOnEvent
// 0x0018 (FullSize[0x0348] - InheritedSize[0x0330])
class UKSPlayerMod_ApplyModOnEvent : public UKSPlayerMod
{
public:
	float                                              ModDuration;                                               // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_E117[0x4];                                     // 0x0334(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      ModsToGiveOnEvent[0x10];                                   // 0x0334(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1525);
		return ptr;
	}



	void RemoveModInstances(class AKSPlayerState* ModOwner, TArray<class UKSPlayerModInstance*> ModInstancesToRemove);
	float GetModDuration();
	TArray<class UKSPlayerModInstance*> ApplyMod(class AKSPlayerState* ModOwner);
};

// Class Killstreak.KSPlayerMod_Blind
// 0x0008 (FullSize[0x0338] - InheritedSize[0x0330])
class UKSPlayerMod_Blind : public UKSPlayerMod
{
public:
	bool                                               IsBlind;                                                   // 0x0330(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LKWD[0x7];                                     // 0x0331(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1526);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_Charge
// 0x0010 (FullSize[0x0340] - InheritedSize[0x0330])
class UKSPlayerMod_Charge : public UKSPlayerMod
{
public:
	bool                                               bIsMultiplier;                                             // 0x0330(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CTUQ[0x3];                                     // 0x0331(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ChargeMultiplier;                                          // 0x0334(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsDiscount;                                               // 0x0338(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TDRU[0x3];                                     // 0x0339(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ChargeDiscount;                                            // 0x033C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1527);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_DamageDealt
// 0x0010 (FullSize[0x0340] - InheritedSize[0x0330])
class UKSPlayerMod_DamageDealt : public UKSPlayerMod
{
public:
	float                                              DamageDealtMultiplier;                                     // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SlowedDamageDealtMultiplier;                               // 0x0334(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DeployableDamageDealtMultiplier;                           // 0x0338(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_G8V4[0x4];                                     // 0x033C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1528);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_DamageTaken
// 0x00D0 (FullSize[0x0400] - InheritedSize[0x0330])
class UKSPlayerMod_DamageTaken : public UKSPlayerMod
{
public:
	TArray<Killstreak_EDamageCategory>                 AffectedDamageCategories;                                  // 0x0330(0x0010) (Edit, ZeroConstructor, Config, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<Killstreak_EHitLocationType>                AffectedHitLocations;                                      // 0x0340(0x0010) (Edit, ZeroConstructor, Config, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DamageTakenMultiplier;                                     // 0x0350(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2FB5[0x4];                                     // 0x0354(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      DamageTakenParticle[0x28];                                 // 0x0354(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               ReducesAgentsDamageTaken;                                  // 0x0380(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ImmuneToNonDamageEffects;                                  // 0x0381(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               NotifyDamageReduction;                                     // 0x0382(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5AHS[0x5];                                     // 0x0383(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      HitBodyAudioEvent[0x28];                                   // 0x0383(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      HitHeadAudioEvent[0x28];                                   // 0x03B0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      HitByAudioEvent[0x28];                                     // 0x03D8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1529);
		return ptr;
	}



	TArray<Killstreak_EDamageCategory> GetAffectedDamageCategories();
};

// Class Killstreak.KSPlayerMod_DodgeRollDamageTaken
// 0x0000 (FullSize[0x0400] - InheritedSize[0x0400])
class UKSPlayerMod_DodgeRollDamageTaken : public UKSPlayerMod_DamageTaken
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1530);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_DodgeRollLockout
// 0x0008 (FullSize[0x0338] - InheritedSize[0x0330])
class UKSPlayerMod_DodgeRollLockout : public UKSPlayerMod
{
public:
	float                                              LockoutTimeMultiplier;                                     // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5SL8[0x4];                                     // 0x0334(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1531);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_DownedHack
// 0x0000 (FullSize[0x0330] - InheritedSize[0x0330])
class UKSPlayerMod_DownedHack : public UKSPlayerMod
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1532);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_DownedRoll
// 0x0010 (FullSize[0x0340] - InheritedSize[0x0330])
class UKSPlayerMod_DownedRoll : public UKSPlayerMod
{
public:
	float                                              CooldownMultiplier;                                        // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DistanceMultiplier;                                        // 0x0334(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpeedMultiplier;                                           // 0x0338(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AdditionalDownedHealth;                                    // 0x033C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1533);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_EffectImmunity
// 0x0000 (FullSize[0x0330] - InheritedSize[0x0330])
class UKSPlayerMod_EffectImmunity : public UKSPlayerMod
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1534);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_FullSpeedADS
// 0x0008 (FullSize[0x0338] - InheritedSize[0x0330])
class UKSPlayerMod_FullSpeedADS : public UKSPlayerMod
{
public:
	float                                              FullSpeedAlpha;                                            // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1LEV[0x4];                                     // 0x0334(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1535);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_Gadget
// 0x0010 (FullSize[0x0340] - InheritedSize[0x0330])
class UKSPlayerMod_Gadget : public UKSPlayerMod
{
public:
	float                                              GadgetThrowSpeedMutliplier;                                // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              GadgetInnerRadiusMultiplier;                               // 0x0334(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              GadgetOuterRadiusMutliplier;                               // 0x0338(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              GadgetFXSizeMultiplier;                                    // 0x033C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1536);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_GiveEquipPoints
// 0x0020 (FullSize[0x0350] - InheritedSize[0x0330])
class UKSPlayerMod_GiveEquipPoints : public UKSPlayerMod
{
public:
	struct FGameplayTagContainer                       EquipPointsToGive;                                         // 0x0330(0x0020) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1537);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_GiveItemOnActivation
// 0x0038 (FullSize[0x03D0] - InheritedSize[0x0398])
class UKSPlayerMod_GiveItemOnActivation : public UKSPlayerMod_Activated
{
public:
	unsigned char                                      GivenItem[0x28];                                           // 0x0398(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      GivenItems[0x10];                                          // 0x03C0(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1538);
		return ptr;
	}



	void GetGivenItem(int Index);
};

// Class Killstreak.KSPlayerMod_GiveItemOnEvent
// 0x0028 (FullSize[0x0358] - InheritedSize[0x0330])
class UKSPlayerMod_GiveItemOnEvent : public UKSPlayerMod
{
public:
	unsigned char                                      ItemToGive[0x28];                                          // 0x0330(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1539);
		return ptr;
	}



	void GiveItem(class AKSCharacter* ModOwner, const struct FScriptDelegate& GivenToEvent);
	void GetItemToGive();
};

// Class Killstreak.KSPlayerMod_GiveWeaponConfig
// 0x0010 (FullSize[0x03E0] - InheritedSize[0x03D0])
class UKSPlayerMod_GiveWeaponConfig : public UKSPlayerMod_GiveItemOnActivation
{
public:
	float                                              Radius;                                                    // 0x03D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanActivateInAir;                                         // 0x03D4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_33B0[0x3];                                     // 0x03D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ReclaimCharge;                                             // 0x03D8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                AllowedActiveDeployableCount;                              // 0x03DC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1540);
		return ptr;
	}



	float GetReclaimCharge();
	float GetRadius();
	int GetAllowedActiveDeployableCount();
	bool CanActivateInAir();
};

// Class Killstreak.KSPlayerMod_GlobalMoveSpeed
// 0x0028 (FullSize[0x0358] - InheritedSize[0x0330])
class UKSPlayerMod_GlobalMoveSpeed : public UKSPlayerMod
{
public:
	float                                              GlobalMoveSpeedMultiplier;                                 // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSprintOverride;                                           // 0x0334(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NCR3[0x3];                                     // 0x0335(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GlobalSprintSpeedMultiplier;                               // 0x0338(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDodgeRollOverride;                                        // 0x033C(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PE1D[0x3];                                     // 0x033D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GlobalDodgeRollSpeedMultiplier;                            // 0x0340(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCrouchOverride;                                           // 0x0344(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KB4Z[0x3];                                     // 0x0345(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GlobalCrouchSpeedMultiplier;                               // 0x0348(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               CanSprintWhenAffected;                                     // 0x034C(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               CanDodgeRollWhenAffected;                                  // 0x034D(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LGQV[0x2];                                     // 0x034E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LerpGoal;                                                  // 0x0350(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PDHZ[0x4];                                     // 0x0354(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1541);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_Hacking
// 0x0008 (FullSize[0x0338] - InheritedSize[0x0330])
class UKSPlayerMod_Hacking : public UKSPlayerMod
{
public:
	float                                              HackSpeedMultiplier;                                       // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DehackSpeedMultiplier;                                     // 0x0334(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1542);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_HardLandAvoid
// 0x0008 (FullSize[0x0338] - InheritedSize[0x0330])
class UKSPlayerMod_HardLandAvoid : public UKSPlayerMod
{
public:
	bool                                               AllowBunnyHopping;                                         // 0x0330(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VZVL[0x7];                                     // 0x0331(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1543);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_HealOnEvent
// 0x0020 (FullSize[0x0350] - InheritedSize[0x0330])
class UKSPlayerMod_HealOnEvent : public UKSPlayerMod
{
public:
	bool                                               bHealUpTo;                                                 // 0x0330(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHealAsPercentage;                                         // 0x0331(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OOGR[0x2];                                     // 0x0332(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HealthPercentage;                                          // 0x0334(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HealthAmount;                                              // 0x0338(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HealDelay;                                                 // 0x033C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HealPeriod;                                                // 0x0340(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                HealTickCount;                                             // 0x0344(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFirstTickImmediately;                                     // 0x0348(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YS7S[0x7];                                     // 0x0349(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1544);
		return ptr;
	}



	bool GetHealUpTo();
	int GetHealTickCount();
	float GetHealthPercentage();
	float GetHealthAmount();
	float GetHealPeriod();
	float GetHealDelay();
	bool GetHealAsPercentage();
	bool GetFirstTickImmediately();
	void ApplyOverheal(class AKSCharacter* CharacterToHeal, class AKSCharacter* Healer);
	void ApplyHeal(class AKSCharacter* CharacterToHeal, class AKSCharacter* Healer);
};

// Class Killstreak.KSPlayerMod_HealthRegeneration
// 0x0018 (FullSize[0x0348] - InheritedSize[0x0330])
class UKSPlayerMod_HealthRegeneration : public UKSPlayerMod
{
public:
	float                                              HealthRegenerationPerSecondAdded;                          // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                Priority_HealthRegenerationPerSecondAdded;                 // 0x0334(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HealthRegenerationDelayAdded;                              // 0x0338(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                Priority_HealthRegenerationDelayAdded;                     // 0x033C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ShouldAllowHealthRegen;                                    // 0x0340(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FTM8[0x3];                                     // 0x0341(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                Priority_ShouldAllowHealthRegen;                           // 0x0344(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1545);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_HideFromTeam
// 0x0008 (FullSize[0x0338] - InheritedSize[0x0330])
class UKSPlayerMod_HideFromTeam : public UKSPlayerMod
{
public:
	bool                                               bHideFriendlyStencil;                                      // 0x0330(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bNoFriendlyDrone;                                          // 0x0331(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_593P[0x6];                                     // 0x0332(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1546);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_HideTarget
// 0x0000 (FullSize[0x0330] - InheritedSize[0x0330])
class UKSPlayerMod_HideTarget : public UKSPlayerMod
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1547);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_HipfireSprint
// 0x0008 (FullSize[0x0338] - InheritedSize[0x0330])
class UKSPlayerMod_HipfireSprint : public UKSPlayerMod
{
public:
	bool                                               bCanHipfireSprint;                                         // 0x0330(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanReloadSprint;                                          // 0x0331(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XCW7[0x6];                                     // 0x0332(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1548);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_InfiniteAmmo
// 0x0000 (FullSize[0x0330] - InheritedSize[0x0330])
class UKSPlayerMod_InfiniteAmmo : public UKSPlayerMod
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1549);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_InteractDamageTaken
// 0x0000 (FullSize[0x0400] - InheritedSize[0x0400])
class UKSPlayerMod_InteractDamageTaken : public UKSPlayerMod_DamageTaken
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1550);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_KeepTeamAlive
// 0x0000 (FullSize[0x0330] - InheritedSize[0x0330])
class UKSPlayerMod_KeepTeamAlive : public UKSPlayerMod
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1551);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_MainCameraFov
// 0x0038 (FullSize[0x0368] - InheritedSize[0x0330])
class UKSPlayerMod_MainCameraFov : public UKSPlayerMod
{
public:
	float                                              FieldOfViewOverride;                                       // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SprintFovOverride;                                         // 0x0334(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CameraBoomLengthBonus;                                     // 0x0338(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SprintCameraBoomLengthBonus;                               // 0x033C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      SprintCameraShakeOverride[0x28];                           // 0x0340(0x0028) UNKNOWN PROPERTY: SoftClassProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1552);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_MedPackSpeed
// 0x0008 (FullSize[0x0338] - InheritedSize[0x0330])
class UKSPlayerMod_MedPackSpeed : public UKSPlayerMod
{
public:
	float                                              MedPackSpeedMultiplier;                                    // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5KNN[0x4];                                     // 0x0334(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1553);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_MedPackWhileMoving
// 0x0000 (FullSize[0x0330] - InheritedSize[0x0330])
class UKSPlayerMod_MedPackWhileMoving : public UKSPlayerMod
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1554);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_MeleeAttackSpeed
// 0x0008 (FullSize[0x0338] - InheritedSize[0x0330])
class UKSPlayerMod_MeleeAttackSpeed : public UKSPlayerMod
{
public:
	float                                              MeleeAttackSpeedMultiplier;                                // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KQ19[0x4];                                     // 0x0334(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1555);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_MeleeMoveSpeed
// 0x0008 (FullSize[0x0338] - InheritedSize[0x0330])
class UKSPlayerMod_MeleeMoveSpeed : public UKSPlayerMod
{
public:
	float                                              MeleeMoveSpeedMultiplier;                                  // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6VR1[0x4];                                     // 0x0334(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1556);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_Omniscience
// 0x0008 (FullSize[0x0338] - InheritedSize[0x0330])
class UKSPlayerMod_Omniscience : public UKSPlayerMod
{
public:
	float                                              MinimapZoomModifier;                                       // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YSIO[0x4];                                     // 0x0334(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1557);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_OnDownOtherEvent
// 0x00B0 (FullSize[0x03E0] - InheritedSize[0x0330])
class UKSPlayerMod_OnDownOtherEvent : public UKSPlayerMod
{
public:
	unsigned char                                      MeleeChargeBonusModePairs[0x50];                           // 0x0330(0x0050) UNKNOWN PROPERTY: MapProperty
	int                                                MeleeChargeBonusDefault;                                   // 0x0380(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B9LU[0x4];                                     // 0x0384(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      HeadshotChargeBonusModePairs[0x50];                        // 0x0384(0x0050) UNKNOWN PROPERTY: MapProperty
	int                                                HeadshotChargeBonusDefault;                                // 0x03D8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KVNE[0x4];                                     // 0x03DC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1558);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_PickupRange
// 0x0010 (FullSize[0x0340] - InheritedSize[0x0330])
class UKSPlayerMod_PickupRange : public UKSPlayerMod
{
public:
	float                                              PickupRadius;                                              // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PickupCylinderRadius;                                      // 0x0334(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               CompleteRadiusOverride;                                    // 0x0338(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6JL8[0x7];                                     // 0x0339(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1559);
		return ptr;
	}



	float GetPickupRadius();
};

// Class Killstreak.KSPlayerMod_PilotOnActivation
// 0x0020 (FullSize[0x03B8] - InheritedSize[0x0398])
class UKSPlayerMod_PilotOnActivation : public UKSPlayerMod_Activated
{
public:
	class UClass*                                      Vehicle;                                                   // 0x0398(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxHealth;                                                 // 0x03A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     SpawnPositionOffset;                                       // 0x03A4(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanActivateInAir;                                         // 0x03B0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_07QX[0x7];                                     // 0x03B1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1560);
		return ptr;
	}



	class UClass* GetVehicleClass();
	struct FVector GetSpawnPositionOffset();
	float GetMaxHealth();
	bool CanActivateInAir();
};

// Class Killstreak.KSPlayerMod_PingOnOtherDowned
// 0x0048 (FullSize[0x0378] - InheritedSize[0x0330])
class UKSPlayerMod_PingOnOtherDowned : public UKSPlayerMod
{
public:
	int                                                NumberOfPings;                                             // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumberOfEnemiesToPing;                                     // 0x0334(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldPingDownedPlayer;                                    // 0x0338(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BXW6[0x3];                                     // 0x0339(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SecondsToRevealPingedEnemies;                              // 0x033C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PingPeriod;                                                // 0x0340(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PingRadius;                                                // 0x0344(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               PingAllEnemyTeams;                                         // 0x0348(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               BroadcastPingToAllies;                                     // 0x0349(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DelayPingPastDownImmune;                                   // 0x034A(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8TO0[0x5];                                     // 0x034B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      EmitterTemplate[0x28];                                     // 0x034B(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1561);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_ProjectileDamage
// 0x0008 (FullSize[0x0338] - InheritedSize[0x0330])
class UKSPlayerMod_ProjectileDamage : public UKSPlayerMod
{
public:
	float                                              BounceDamageMultiplier;                                    // 0x0330(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OEBM[0x4];                                     // 0x0334(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1562);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_ReloadAndRetrieve
// 0x0008 (FullSize[0x0338] - InheritedSize[0x0330])
class UKSPlayerMod_ReloadAndRetrieve : public UKSPlayerMod
{
public:
	float                                              RetrieveTimeMultiplier;                                    // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReloadTimeMultiplier;                                      // 0x0334(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1563);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_ReloadTime
// 0x0008 (FullSize[0x0338] - InheritedSize[0x0330])
class UKSPlayerMod_ReloadTime : public UKSPlayerMod
{
public:
	float                                              ReloadTimeMultiplier;                                      // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7GZQ[0x4];                                     // 0x0334(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1564);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_RetrieveTime
// 0x0008 (FullSize[0x0338] - InheritedSize[0x0330])
class UKSPlayerMod_RetrieveTime : public UKSPlayerMod
{
public:
	float                                              RetrieveTimeMultiplier;                                    // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4TLB[0x4];                                     // 0x0334(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1565);
		return ptr;
	}



};

// Class Killstreak.KSPawnAction_SwapWeapon
// 0x0008 (FullSize[0x00A8] - InheritedSize[0x00A0])
class UKSPawnAction_SwapWeapon : public UKSPawnActionBase
{
public:
	struct FGameplayTag                                EquipPoint;                                                // 0x00A0(0x0008) (Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1491);
		return ptr;
	}



};

// Class Killstreak.KSPawnAction_Uncrouch
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UKSPawnAction_Uncrouch : public UKSPawnActionBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1492);
		return ptr;
	}



};

// Class Killstreak.KSPawnCommonInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSPawnCommonInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1493);
		return ptr;
	}



	bool PrepareForNextRound(class AActor** ActorToDestroy);
};

// Class Killstreak.KSPlayerMod_RevealTarget
// 0x0048 (FullSize[0x0378] - InheritedSize[0x0330])
class UKSPlayerMod_RevealTarget : public UKSPlayerMod
{
public:
	struct FKSRevealInfo                               RevealParameters;                                          // 0x0330(0x0048) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1566);
		return ptr;
	}



	struct FKSRevealInfo GetRevealParameters();
};

// Class Killstreak.KSPlayerMod_Revive
// 0x0030 (FullSize[0x0360] - InheritedSize[0x0330])
class UKSPlayerMod_Revive : public UKSPlayerMod
{
public:
	float                                              ReviveTimeMultiplier;                                      // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasTextOverride;                                          // 0x0334(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZCX4[0x3];                                     // 0x0335(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       ReviveText;                                                // 0x0338(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FName                                       ReviveInteractionMode;                                     // 0x0350(0x0008) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HealChargeMultiplier;                                      // 0x0358(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0DEV[0x4];                                     // 0x035C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1567);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_ReviverDamageTaken
// 0x0008 (FullSize[0x0408] - InheritedSize[0x0400])
class UKSPlayerMod_ReviverDamageTaken : public UKSPlayerMod_DamageTaken
{
public:
	bool                                               bCountRemoteRevives;                                       // 0x0400(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VXP2[0x7];                                     // 0x0401(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1568);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_ShowTeamHovers
// 0x0010 (FullSize[0x0340] - InheritedSize[0x0330])
class UKSPlayerMod_ShowTeamHovers : public UKSPlayerMod
{
public:
	bool                                               ShowTeamHovers;                                            // 0x0330(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6N9K[0x3];                                     // 0x0331(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                Priority_ShowTeamHovers;                                   // 0x0334(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HoverCharacterLingerExtraTime;                             // 0x0338(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                Priority_HoverCharacterLingerExtraTime;                    // 0x033C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1569);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_Sight
// 0x0008 (FullSize[0x0338] - InheritedSize[0x0330])
class UKSPlayerMod_Sight : public UKSPlayerMod
{
public:
	bool                                               SeeFootprints;                                             // 0x0330(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_T9P4[0x7];                                     // 0x0331(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1570);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_SprintSpeed
// 0x0008 (FullSize[0x0338] - InheritedSize[0x0330])
class UKSPlayerMod_SprintSpeed : public UKSPlayerMod
{
public:
	float                                              SprintSpeedMultiplier;                                     // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_A9QI[0x4];                                     // 0x0334(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1571);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_StartingEquipment
// 0x0028 (FullSize[0x0358] - InheritedSize[0x0330])
class UKSPlayerMod_StartingEquipment : public UKSPlayerMod
{
public:
	unsigned char                                      EquipmentAsset[0x28];                                      // 0x0330(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1572);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_StartEquipNoFlinch
// 0x0000 (FullSize[0x0358] - InheritedSize[0x0358])
class UKSPlayerMod_StartEquipNoFlinch : public UKSPlayerMod_StartingEquipment
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1573);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_Undetectable
// 0x0010 (FullSize[0x0340] - InheritedSize[0x0330])
class UKSPlayerMod_Undetectable : public UKSPlayerMod
{
public:
	bool                                               HiddenFromReveals;                                         // 0x0330(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               HiddenOnRadar;                                             // 0x0331(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               HiddenFromRemoteExplosives;                                // 0x0332(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               HiddenFromThermal;                                         // 0x0333(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               HiddenFromShotDetection;                                   // 0x0334(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               HideFootprints;                                            // 0x0335(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               Camouflaged;                                               // 0x0336(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               AffectsRevealTime;                                         // 0x0337(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RevealTimeMultiplier;                                      // 0x0338(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6BA4[0x4];                                     // 0x033C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1574);
		return ptr;
	}



};

// Class Killstreak.KSPlayerMod_VaultHeight
// 0x0010 (FullSize[0x0340] - InheritedSize[0x0330])
class UKSPlayerMod_VaultHeight : public UKSPlayerMod
{
public:
	float                                              VaultHeight;                                               // 0x0330(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       VaultName;                                                 // 0x0334(0x0008) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_930N[0x4];                                     // 0x033C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1575);
		return ptr;
	}



};

// Class Killstreak.KSPlayerModInst_Omniscience
// 0x0008 (FullSize[0x01C0] - InheritedSize[0x01B8])
class UKSPlayerModInst_Omniscience : public UKSPlayerModInstance
{
public:
	bool                                               bHandleEnemiesOnly;                                        // 0x01B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2DR4[0x7];                                     // 0x01B9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1576);
		return ptr;
	}



	void OnNewOtherCharacter(class AKSCharacterBase* InCharacter);
	void HandleNewOtherCharacter(class AKSCharacterBase* InCharacter);
};

// Class Killstreak.KSPlayerModInst_WeaponAttachment
// 0x0048 (FullSize[0x0200] - InheritedSize[0x01B8])
class UKSPlayerModInst_WeaponAttachment : public UKSPlayerModInstance
{
public:
	TArray<class UKSWeaponAttachment*>                 AttachmentsToGive;                                         // 0x01B8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<Killstreak_EItemSourceType>                 ItemSourcesThatAllowAttachmentGiving;                      // 0x01C8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<Killstreak_EItemSourceType>                 ItemSourcesThatForbidAttachmentGiving;                     // 0x01D8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAttachmentsPersistOnDrop;                                 // 0x01E8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5GNH[0x7];                                     // 0x01E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class UKSWeaponAttachmentInstance>> GivenAttachmentInstances;                                  // 0x01F0(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1577);
		return ptr;
	}



	void WeaponAddedToOwnerInventory(class AKSWeapon* NewWeapon, const struct FGiveItemParameters& InGiveItemParameters);
	void OnAttachmentRemoved(class AKSWeapon* Weapon, class UKSWeaponAttachmentInstance* RemovedInstance);
	void OnAttachmentGivenSuccess(class UKSItem* ItemToGive, class UKSWeaponAttachmentInstance* GivenAttachment, const struct FGiveItemParameters& InGiveItemParameters);
	void OnAttachmentGiven(class UKSItem* ItemToGive, class UObject* GivenObject, const struct FGiveItemParameters& InGiveItemParameters, bool bSuccess);
};

// Class Killstreak.KSPlayerModManager
// 0x0038 (FullSize[0x0258] - InheritedSize[0x0220])
class AKSPlayerModManager : public AInfo
{
public:
	bool                                               bOnlyChargeModsWhenAlive;                                  // 0x0220(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_URF7[0x7];                                     // 0x0221(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSPlayerState*                              PlayerStateOwner;                                          // 0x0228(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SHQO[0x18];                                    // 0x0230(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UKSPlayerModInstance*>                ActiveMods;                                                // 0x0248(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1578);
		return ptr;
	}



	void SetPlayerStateOwner(class AKSPlayerState* NewPlayerState);
	bool RemoveModsOfSource(Killstreak_EKSModSource ModSource);
	bool RemoveModInstance(class UKSPlayerModInstance* ModInst, bool bRemoveAll);
	bool RemoveMod(class UKSPlayerMod* Mod, bool RemoveAll);
	void RemoveAndDestroyPlayerModManager();
	bool HasModOfSource(class UKSPlayerMod* TestPlayerMod, Killstreak_EKSModSource TestSource);
	bool HasModAny(TArray<class UKSPlayerMod*> TestPlayerMods);
	bool HasMod(class UKSPlayerMod* TestPlayerMod);
	bool HasHideTarget();
	bool GiveModInstance(class UKSPlayerMod* Mod, class AKSPlayerState* ModInstigator, class UKSPlayerModInstance** Instance, bool Unique, Killstreak_EKSModSource ModSource, class AKSCharacterFoundation* ModRecipient);
	bool GiveMod(class UKSPlayerMod* Mod, class AKSPlayerState* ModInstigator, bool Unique, Killstreak_EKSModSource ModSource);
	class AKSPlayerState* GetPlayerStateOwner();
	bool GetModInstancesOfType(Killstreak_EPlayerModType Type, TArray<class UKSPlayerModInstance*>* OutMods);
	bool GetModInstances(TArray<class UKSPlayerModInstance*>* OutMods);
	bool GetGameModeMods(TArray<class UKSModInst_Activated*>* OutMods, bool bIncludeChildMods);
	bool GetActivatableMods(TArray<class UKSModInst_Activated*>* OutMods, bool bIncludeChildMods);
	bool AnyActivatableModsActive();
	void AddPerSecondCharge();
	bool ActivatableModAtIndexActive(int AbilityIndex);
	bool ActivatableGameModeModAtIndexActive(int AbilityIndex);
};

// Class Killstreak.KSPlayerShopConfigurator
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSPlayerShopConfigurator : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1579);
		return ptr;
	}



};

// Class Killstreak.KSWidgetInfoActor
// 0x0028 (FullSize[0x0248] - InheritedSize[0x0220])
class AKSWidgetInfoActor : public AInfo
{
public:
	TArray<struct FKSWidgetInfoParams>                 WidgetParamsToCreate;                                      // 0x0220(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSPlayerController*                         PlayerForWidget;                                           // 0x0230(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5R62[0x10];                                    // 0x0238(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1580);
		return ptr;
	}



	void OnHUDSetup();
};

// Class Killstreak.KSPlayerShop
// 0x05B0 (FullSize[0x07F8] - InheritedSize[0x0248])
class AKSPlayerShop : public AKSWidgetInfoActor
{
public:
	unsigned char                                      UnknownData_MP2O[0x10];                                    // 0x0248(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSPlayerState*                              PlayerState;                                               // 0x0258(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnPurchaseAcknowledged;                                    // 0x0260(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRefundAcknowledged;                                      // 0x0270(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnShopManifestChanged;                                     // 0x0280(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnShopOfferingsChanged;                                    // 0x0290(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnShopItemChanged;                                         // 0x02A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnShopItemPurchased;                                       // 0x02B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnShopItemRefunded;                                        // 0x02C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnShopItemActive;                                          // 0x02D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnShopItemInactive;                                        // 0x02E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnShopOpened;                                              // 0x02F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnShopClosed;                                              // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                               bWeaponMasterySwapEnabled;                                 // 0x0310(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PO3Z[0x3];                                     // 0x0311(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CashPerKSPoint;                                            // 0x0314(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDelayApplyPurchases;                                      // 0x0318(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_C3Z0[0x17];                                    // 0x0319(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FShopManifest                               ShopManifestMap;                                           // 0x0330(0x0120) (Net, NativeAccessSpecifierPublic)
	class UObject*                                     ConfiguratorObject;                                        // 0x0450(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UU2F[0x2D0];                                   // 0x0458(0x02D0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                NextTransactionId;                                         // 0x0728(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WH0I[0xC];                                     // 0x072C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bShopOpen;                                                 // 0x0738(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_08LD[0x1];                                     // 0x0739(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bShopInitialized;                                          // 0x073A(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayersCanAccessShopWhileDead;                            // 0x073B(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           MinimumUndoableTransactionId;                              // 0x073C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSPlayerShopHistoryComponent*               PlayerShopHistoryComponent;                                // 0x0740(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAvailable;                                                // 0x0748(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_A4CH[0x7];                                     // 0x0749(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnShopAvailabilityChanged;                                 // 0x0750(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnShopOptionsChanged;                                      // 0x0760(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FShopOptions                                ShopOptions;                                               // 0x0770(0x0006) (Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8BWD[0x2];                                     // 0x0776(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FPrimaryOffering>                    PrimaryOneOfferings;                                       // 0x0778(0x0010) (Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FPrimaryOffering>                    PrimaryTwoOfferings;                                       // 0x0788(0x0010) (Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSWeaponCategoryAsset*                      PistolWeaponCategory;                                      // 0x0798(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FPrimaryOffering>                    PistolOfferings;                                           // 0x07A0(0x0010) (Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSWeaponCategoryAsset*                      MeleeWeaponCategory;                                       // 0x07B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FPrimaryOffering>                    MeleeOfferings;                                            // 0x07B8(0x0010) (Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSWeaponCategoryAsset*                      GadgetWeaponCategory;                                      // 0x07C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FPrimaryOffering>                    GadgetOneOfferings;                                        // 0x07D0(0x0010) (Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FPrimaryOffering>                    GadgetTwoOfferings;                                        // 0x07E0(0x0010) (Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YTB1[0x1];                                     // 0x07F0(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bDisableShopOnClose;                                       // 0x07F1(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DNP0[0x6];                                     // 0x07F2(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1581);
		return ptr;
	}



	void Undo();
	void TryToSetItemActive(Killstreak_EShopItemType ShopItemType, bool bActive);
	void TryToPurchaseItem(Killstreak_EShopItemType ShopItemType);
	void TryToChangeOfferingForType(Killstreak_EShopItemType ShopItemType, class UKSItem* Item);
	void ToggleShop();
	bool STATIC_ShopItem_Equals(const struct FShopItem& A, const struct FShopItem& B);
	bool ShopHasWeaponMasterySwap();
	void ServerTryToOpenShop();
	void ServerTryToCloseShop();
	void ServerAttemptRefund(const struct FPlayerShopTransaction& InRefundTransactionInfo, const struct FPlayerShopTransaction& InPurchaseTransactionInfo);
	void ServerAttemptPurchase(const struct FPlayerShopTransaction& InTransactionInfo);
	void ServerAttemptChangeOfferingForType(Killstreak_EShopItemType ShopItemType, class UKSItem* Item);
	void ServerAttemptActivate(const struct FPlayerShopTransaction& InTransactionInfo, bool bActivate);
	void ResetManifest();
	void OpenShop();
	void OnRep_ShopOptions();
	void OnRep_ShopOpen();
	void OnRep_PrimaryTwoOfferings();
	void OnRep_PrimaryOneOfferings();
	void OnRep_ConfiguratorObject();
	void OnRep_bAvailable();
	void OnPlayerSpawned(class AKSPlayerState* InPlayerState, class AKSCharacterBase* Character);
	void OnPlayerScoreChanged(const struct FKSScoreChangeEvent& ScoreEvent);
	void OnPlayerKilled(const struct FCombatEventInfo& EventInfo);
	void OnPlayerJobChanged();
	void OnOwnerDestroyed(class AActor* DestroyedActor);
	void OnAFKTimerRefreshed(class AKSPlayerController* InPlayerController);
	void NotifyShopItemRefunded(const struct FShopItem& ShopItem);
	void NotifyShopItemPurchased(const struct FShopItem& ShopItem);
	void NotifyShopItemInactive(const struct FShopItem& ShopItem);
	void NotifyShopItemChanged(const struct FShopItem& ShopItem);
	void NotifyShopItemActive(const struct FShopItem& ShopItem);
	struct FShopItem MakeShopItem(class UKSItem* Item);
	bool IsShopOpen();
	void InitializeShopItems();
	void HandlePlayerStateJobChanged();
	Killstreak_EShopItemType GetTypeOfFavoriteItem();
	struct FShopOptions GetShopOptions();
	bool GetShopItemByType(Killstreak_EShopItemType ShopItemType, struct FShopItem* Item);
	bool GetShopAvailability();
	TArray<Killstreak_EShopItemType> GetRestrictionsForType(Killstreak_EShopItemType ShopItemType);
	int GetPriceOfItem(class UKSItem* InItem, bool bIsUpgrade);
	TArray<Killstreak_EShopItemType> GetPrerequisitesForType(Killstreak_EShopItemType ShopItemType);
	void ForceSetItemIndex(Killstreak_EShopItemType ShopItemType, int CurrentIndex);
	void ForceSetItemActive(Killstreak_EShopItemType ShopItemType, bool bActive);
	void EnableShopForPlayer(class AKSPlayerState* InPlayerState);
	void DisableShopForPlayer(class AKSPlayerState* InPlayerState);
	void CreateShopManifest();
	void CloseShop();
	void ClientRefundAcknowledge(const struct FPlayerShopTransaction& InRefundTransactionInfo, const struct FPlayerShopTransaction& InPurchaseTransactionInfo, bool bSuccess);
	void ClientPurchaseAcknowledge(const struct FPlayerShopTransaction& InTransactionInfo, bool bSuccess);
	void ClientOpenShop();
	void ClientCloseShop();
	bool CanRefundItemNow(Killstreak_EShopItemType ShopItemType);
	bool CanPurchaseItemNow(Killstreak_EShopItemType ShopItemType);
	bool CanPlayersAccessShopWhileDead();
	bool CanChangeShopOfferingForType(Killstreak_EShopItemType ShopItemType, class UKSItem* Item);
	bool CanAffordItemNow(Killstreak_EShopItemType ShopItemType);
	void ApplyTransactions();
};

// Class Killstreak.KSPlayerShop_Job
// 0x0020 (FullSize[0x0818] - InheritedSize[0x07F8])
class AKSPlayerShop_Job : public AKSPlayerShop
{
public:
	unsigned char                                      UnknownData_50KZ[0x20];                                    // 0x07F8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1582);
		return ptr;
	}



};

// Class Killstreak.KSPlayerShop_Custom
// 0x0000 (FullSize[0x07F8] - InheritedSize[0x07F8])
class AKSPlayerShop_Custom : public AKSPlayerShop
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1583);
		return ptr;
	}



};

// Class Killstreak.KSPlayerShopHistoryComponent
// 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
class UKSPlayerShopHistoryComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_GNRN[0x10];                                    // 0x00B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1584);
		return ptr;
	}



	void ClearTransactionHistory();
};

// Class Killstreak.KSPlayerShopZone
// 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
class AKSPlayerShopZone : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnZoneEntered;                                             // 0x0220(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnZoneLeft;                                                // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1585);
		return ptr;
	}



	void ZoneLeftByPlayer(class AKSPlayerState* PlayerState);
	void ZoneEnteredByPlayer(class AKSPlayerState* PlayerState);
	void OnPlayerStateDestroyed(class AActor* DestroyedPlayerState);
};

// Class Killstreak.KSPlayerShotListener
// 0x00A0 (FullSize[0x0150] - InheritedSize[0x00B0])
class UKSPlayerShotListener : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    MinimapShotNofify;                                         // 0x00B0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QU1A[0x58];                                    // 0x00C0(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             EnemyShotPingWidgetPools;                                  // 0x0118(0x0010) (Edit, ZeroConstructor, Config, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      OverlayDisplayWidget[0x28];                                // 0x0128(0x0028) UNKNOWN PROPERTY: SoftClassProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1586);
		return ptr;
	}



	void OnKSGameStateDestroyed(class AActor* Actor);
	void ClientRecieveShotInfo(const struct FKSClientShotInfo& ShotInfo);
	void Authority_ProcessShotInfo(const struct FKSGlobalShotInfo& ShotInfo);
};

// Class Killstreak.KSPlayerStart
// 0x0080 (FullSize[0x02D0] - InheritedSize[0x0250])
class AKSPlayerStart : public APlayerStart
{
public:
	unsigned char                                      UnknownData_GNTX[0x10];                                    // 0x0250(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bInitialSpawnPoint;                                        // 0x0260(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRespawnPoint;                                             // 0x0261(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VXFB[0x2];                                     // 0x0262(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SideNum;                                                   // 0x0264(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bBotOnly;                                                  // 0x0268(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPlayerOnly;                                               // 0x0269(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_ECharacterBehaviorState                 InitialBehaviorState;                                      // 0x026A(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseInitialBehaviorOverride;                               // 0x026B(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_ECharacterBehaviorState                 InitialBehaviorStateOverride;                              // 0x026C(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LPHV[0x3];                                     // 0x026D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UKSItem*>                             InventoryToGive;                                           // 0x0270(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKSItem*>                             InitialSpawnInventoryToGive;                               // 0x0280(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKSItem*>                             RespawnInventoryToGive;                                    // 0x0290(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKSPlayerMod*>                        ModsToGive;                                                // 0x02A0(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKSPlayerMod*>                        InitialSpawnModsToGive;                                    // 0x02B0(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKSPlayerMod*>                        RespawnModsToGive;                                         // 0x02C0(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1588);
		return ptr;
	}



	void SetSideNum(int InSideNum);
	void Init(class AKSCharacter* Character, class AController* Controller);
	int GetSideNum();
	void CharacterLoadoutRestored(class AKSCharacter* Character);
};

// Class Killstreak.KSPlayerStart_Extraction
// 0x0000 (FullSize[0x02D0] - InheritedSize[0x02D0])
class AKSPlayerStart_Extraction : public AKSPlayerStart
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1589);
		return ptr;
	}



};

// Class Killstreak.KSPlayerState
// 0x08C8 (FullSize[0x0BE8] - InheritedSize[0x0320])
class AKSPlayerState : public APGame_PlayerState
{
public:
	unsigned char                                      UnknownData_ALR9[0x8];                                     // 0x0320(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsDemoRecording;                                          // 0x0328(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OPZI[0x7];                                     // 0x0329(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCharacterOwnerChangedDel;                                // 0x0330(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBackupCharacterOwnerChangedDel;                          // 0x0340(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFriendlyFireInflicted;                                   // 0x0350(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              TrackedFriendlyFireDamage;                                 // 0x0360(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bReverseFriendlyFireEnabled;                               // 0x0364(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L7Z2[0x3];                                     // 0x0365(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PredictionFudge;                                           // 0x0368(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxPredictionPing;                                         // 0x036C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTrackedActorBegin;                                       // 0x0370(0x0010) (ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTrackedActorEnd;                                         // 0x0380(0x0010) (ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	Killstreak_EIsPlayer                               PlayerType;                                                // 0x0390(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7L60[0x7];                                     // 0x0391(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSTeamState*                                r_Team;                                                    // 0x0398(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QSH3[0x8];                                     // 0x03A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                BackupTeamNum;                                             // 0x03A8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasServerTravelled;                                       // 0x03AC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BMGN[0x3];                                     // 0x03AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnKSPlayerStateTeamChangedDel;                             // 0x03B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CTYH[0x18];                                    // 0x03C0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnKSPlayerStateNameChangedDel;                             // 0x03D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QEJM[0x18];                                    // 0x03E8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AKSCharacterBase>             CharacterOwner;                                            // 0x0400(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AKSCharacterBase>             BackupCharacterOwner;                                      // 0x0408(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_50TF[0x30];                                    // 0x0410(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Killstreak_EEliminationState                       EliminatedState;                                           // 0x0440(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ED5K[0x7];                                     // 0x0441(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPlayerEliminated;                                        // 0x0448(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnPlayerInPlay;                                            // 0x0458(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnPlayerLeftPlay;                                          // 0x0468(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                               bDowned;                                                   // 0x0478(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9FYT[0x7];                                     // 0x0479(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPlayerDownedChangedDel;                                  // 0x0480(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     LastKnownLocation;                                         // 0x0490(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                LocalSideNum;                                              // 0x049C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bUIRelevant;                                               // 0x04A0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bMarkedUIIrrelevant;                                       // 0x04A1(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_H8AY[0x6];                                     // 0x04A2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSerializedMctsNetId                        r_ReplicatedNetId;                                         // 0x04A8(0x0008) (Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3E6N[0x18];                                    // 0x04B0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnRespawnTicketsChanged;                                   // 0x04C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int                                                RespawnTickets;                                            // 0x04D8(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsPendingRepossession;                                    // 0x04DC(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B3CX[0x3];                                     // 0x04DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSTimerComponent*                           RespawnTimer;                                              // 0x04E0(0x0008) (Edit, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSTimerComponent*                           DisallowGiveUpTimer;                                       // 0x04E8(0x0008) (Edit, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRespawnTimerTick;                                        // 0x04F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRespawnTimerActive;                                      // 0x0500(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRespawnTimerComplete;                                    // 0x0510(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnDisallowGiveUpTimerTick;                                 // 0x0520(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnDisallowGiveUpTimerActive;                               // 0x0530(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnDisallowGiveUpTimerComplete;                             // 0x0540(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnScoreChanged;                                            // 0x0550(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMultiDownAchievedDel;                                    // 0x0560(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnMultiDownAchievedWithDataDel;                            // 0x0570(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_I7LH[0x4];                                     // 0x0580(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                Kills;                                                     // 0x0584(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                deaths;                                                    // 0x0588(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                Assists;                                                   // 0x058C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                downs;                                                     // 0x0590(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                DownSpree;                                                 // 0x0594(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                Revives;                                                   // 0x0598(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                eliminations;                                              // 0x059C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                Headshots;                                                 // 0x05A0(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                Hacks;                                                     // 0x05A4(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                Dehacks;                                                   // 0x05A8(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MitigatedDamageDealt;                                      // 0x05AC(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MitigatedDamageReceived;                                   // 0x05B0(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                RawDamageDealt;                                            // 0x05B4(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                RawDamageReceived;                                         // 0x05B8(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                RoundsPlayed;                                              // 0x05BC(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                TimeAlive;                                                 // 0x05C0(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                timePlayed;                                                // 0x05C4(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9U88[0x18];                                    // 0x05C8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnUIRelevantPlayerStateChangedDel;                         // 0x05E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FKSScoreChangeList                          ScoreChangeList;                                           // 0x05F0(0x0090) (Net, Protected, NativeAccessSpecifierProtected)
	class UKSPlayerMatchStats*                         PreviewRecordedStats;                                      // 0x0680(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                Money;                                                     // 0x0688(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LastMoney;                                                 // 0x068C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnMoneyEarned;                                             // 0x0690(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnMoneyChanged;                                            // 0x06A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                               bMoneyGivesCharge;                                         // 0x06B0(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B9J2[0x3];                                     // 0x06B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                cash;                                                      // 0x06B4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                LastCash;                                                  // 0x06B8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasReceivedStartingCash;                                  // 0x06BC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H34F[0x3];                                     // 0x06BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                TotalCashEarned;                                           // 0x06C0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                LastCashEarned;                                            // 0x06C4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnCashChanged;                                             // 0x06C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnCashEarnedChanged;                                       // 0x06D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnCashChangeEvent;                                         // 0x06E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FKSCashChangeList                           CashChangeList;                                            // 0x06F8(0x0090) (Net, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnItemPickedUpBySelf;                                      // 0x0788(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnItemPickedUpByTeam;                                      // 0x0798(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                               bShouldRestoreInventory;                                   // 0x07A8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SBER[0x17];                                    // 0x07A9(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSPlayerStateAssistant*                     PlayerStateAssistant;                                      // 0x07C0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKSPlayerMod*>                        ModsToRestoreOnReactivated;                                // 0x07C8(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerModCharge;                                         // 0x07D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerModActivationChange;                               // 0x07E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnModAddedDel;                                             // 0x07F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FHMO[0x18];                                    // 0x0808(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnModRemovedDel;                                           // 0x0820(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZTKD[0x18];                                    // 0x0830(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UKSSpecialty*>                        Specialties;                                               // 0x0848(0x0010) (Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnJobChanged;                                              // 0x0858(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UKSJobItem*                                  JobItem;                                                   // 0x0868(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                JobMasteryXpLevel;                                         // 0x0870(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DPJI[0x4];                                     // 0x0874(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnJobLoadFinishedDel;                                      // 0x0878(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RV36[0x18];                                    // 0x0888(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnJobMasteryXpLevelChanged;                                // 0x08A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EKLB[0x8];                                     // 0x08B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSSkinBundle*                               SkinItem;                                                  // 0x08B8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnSkinChanged;                                             // 0x08C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UKSLoadoutClass*                             LoadoutClass;                                              // 0x08D0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AKSItemDrop*>                         ItemsDroppedOnDeath;                                       // 0x08D8(0x0010) (Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EZJO[0x18];                                    // 0x08E8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSCharacterGender                          Gender;                                                    // 0x0900(0x0002) (Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	struct FKSCharacterGender                          LocalGender;                                               // 0x0902(0x0002) (Transient, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0H3X[0x4];                                     // 0x0904(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       SkinTagContainer;                                          // 0x0908(0x0020) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_W4IT[0x18];                                    // 0x0928(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bStale;                                                    // 0x0940(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y5K4[0x7];                                     // 0x0941(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             AllyWidgetPoolName;                                        // 0x0948(0x0010) (Edit, ZeroConstructor, Config, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnShopItemPurchased;                                       // 0x0958(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnShopItemRefunded;                                        // 0x0968(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnShopItemActive;                                          // 0x0978(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnShopItemInactive;                                        // 0x0988(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPersistentPlayerDataChanged;                             // 0x0998(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I166[0x20];                                    // 0x09A8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bPollInProgress;                                           // 0x09C8(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bHasVoted;                                                 // 0x09C9(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RTY3[0x6];                                     // 0x09CA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      CurrentPollType;                                           // 0x09D0(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FKSPollData                                 CachedPollData;                                            // 0x09D8(0x0010) (Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                               bCachedLocallyViewed;                                      // 0x09E8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SY8L[0x7];                                     // 0x09E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCharacterLocalViewChange;                                // 0x09F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class AActor>>               StimulatingObjects;                                        // 0x0A00(0x0010) (ZeroConstructor, Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AKSRevealManager*                            RevealManager;                                             // 0x0A10(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnElusiveTriggered;                                        // 0x0A18(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnQuickAndQuietTriggered;                                  // 0x0A28(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDangerCloseReviveOther;                                  // 0x0A38(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMedDroneReviveOther;                                     // 0x0A48(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTearGasDisorientOther;                                   // 0x0A58(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAPSDestroyedProjectile;                                  // 0x0A68(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEnemyEquipmentWasEMPDisabled;                            // 0x0A78(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerHitByEMP;                                          // 0x0A88(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMeleeWeaponThrown;                                       // 0x0A98(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnObjectiveInteractionCompleted;                           // 0x0AA8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWeaponReloaded;                                          // 0x0AB8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWeaponFiredPreDamage;                                    // 0x0AC8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWeaponFiredPostDamage;                                   // 0x0AD8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bBackfill;                                                 // 0x0AE8(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZT4Q[0x3];                                     // 0x0AE9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SavedHumanPlayerId;                                        // 0x0AEC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FString, float>                        ActionTimestampMap;                                        // 0x0AF0(0x0050) (NativeAccessSpecifierPrivate)
	TMap<int64_t, float>                               LastDamagedByPlayerTimestampMap;                           // 0x0B40(0x0050) (NativeAccessSpecifierPrivate)
	TMap<int, int>                                     CachedItemValueMap;                                        // 0x0B90(0x0050) (NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AKSVehicleBase>               VehicleOwner;                                              // 0x0BE0(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1590);
		return ptr;
	}



	void UpdatePollVotes(const struct FKSPollData& NewPollData);
	void TryToBroadCastUIRelevantInfoHasChanged();
	bool SpendCash(int cost);
	void SpawnedDropDestroyed(class AActor* Drop);
	void SetTimestampForAction(const struct FString& ActionString);
	void SetRevealManager(class AKSRevealManager* NewRevealManager);
	void SetPlayerStateAssistant(class AKSPlayerStateAssistant* InPlayerStateAssistant);
	void SetMoney(int NewAmount);
	void SetGiveUpEnabled(bool bAllowed);
	void SetDamageTimestamp(int64_t MctsNetId);
	void SetCash(int NewAmount, const struct FText& Reason);
	void SetCachedValueForItemId(int ItemId, int Value);
	void ServerPlayerProposePoll(class UClass* PollType);
	void ServerPlayerCastVote(bool bVoteInFavor);
	void RespawnTimerTick(float Seconds);
	void RespawnTimerComplete();
	void RespawnTimerActive(bool bActive);
	void ResetElimination();
	bool RemoveModsOfSource(Killstreak_EKSModSource ModSource);
	bool RemoveModInstance(class UKSPlayerModInstance* ModInst, bool bRemoveAll);
	bool RemoveMod(class UKSPlayerMod* Mod, bool RemoveAll, class AKSCharacterFoundation* ModRecipient);
	void RebindRestoreMods();
	void PollEnded(const struct FKSPollResults& PollResults);
	bool PlayerProposePoll(class UClass* PollType);
	void PlayerCastVote(bool bVoteInFavor);
	void OnTeamUpdated();
	void OnSideNumUpdated();
	void OnReverseFriendlyFireEnabled();
	void OnRep_TotalCashEarned();
	void OnRep_Specialties();
	void OnRep_SkinItem();
	void OnRep_RespawnTimer();
	void OnRep_RespawnTickets();
	void OnRep_PlayerType();
	void OnRep_Money();
	void OnRep_MctsNetId();
	void OnRep_LoadoutClass();
	void OnRep_JobMasteryXpLevel();
	void OnRep_JobItem();
	void OnRep_HasVoted();
	void OnRep_Gender();
	void OnRep_Eliminated();
	void OnRep_Downed();
	void OnRep_DisallowGiveUpTimer();
	void OnRep_CurrentPollType();
	void OnRep_Cash();
	void OnRep_CachedPollData();
	void OnJobMasteryInventoryUpdated(const struct FInventoryId& InventoryId);
	void OnDeathDrop(class UKSItem* InItem, class AKSItemDrop* InDrop);
	void NotifyWeaponReloaded();
	void NotifyWeaponFiredPreDamage();
	void NotifyWeaponFiredPostDamage();
	void NotifyTearGasDisorientOther();
	void NotifyScoreChange(const struct FKSScoreChangeEvent& Event);
	void NotifyQuickAndQuietTriggered();
	void NotifyPlayerHitByEMP(const struct FCombatEventInfo& DamageInfo);
	void NotifyObjectiveInteractionCompleted();
	void NotifyMeleeWeaponThrown();
	void NotifyMedDroneReviveOther();
	void NotifyEnemyEquipmentWasEMPDisabled();
	void NotifyElusiveTriggered();
	void NotifyDangerCloseReviveOther();
	void NotifyCashChange(const struct FKSScoreChangeEvent& Event);
	void NotifyAPSDestroyedProjectile();
	void LoadoutSetSkin();
	void LeavePlay();
	bool IsWaitingForGiveUp();
	bool IsUIRelevant();
	bool IsReverseFriendlyFireEnabled();
	bool IsRespawning();
	bool IsPollInProgress();
	bool IsPlayer();
	bool IsInPlay();
	bool IsInParty();
	bool IsIndependentHuman();
	bool IsIndependentBot();
	bool IsEliminated();
	bool IsDowned();
	bool IsCharacterLocallyViewed();
	bool IsBackfilling();
	bool IsBackfilledHuman();
	bool IsBackfilledBot();
	bool IsActorStimulatingPlayer(class AActor* Actor);
	bool HasRole(Killstreak_ECharacterRole RoleToCheck);
	bool HasModAny(TArray<class UKSPlayerMod*> TestPlayerMods);
	bool HasMod(class UKSPlayerMod* TestPlayerMod);
	bool HasHideTarget();
	bool GiveModInstance(class UKSPlayerMod* Mod, class AKSPlayerState* ModInstigator, class UKSPlayerModInstance** Instance, bool Unique, class AKSCharacterFoundation* ModRecipient);
	bool GiveMod(class UKSPlayerMod* Mod, class AKSPlayerState* ModInstigator, bool Unique, Killstreak_EKSModSource ModSource);
	class AKSVehicleBase* GetVehicleOwner();
	int GetTotalCashEarned();
	float GetTimeUntilGiveUpAllowed();
	bool GetTimestampForAction(const struct FString& ActionString, float* Timestamp);
	int GetStatValue(Killstreak_EPlayerStatType Stat);
	bool GetSpecialties(TArray<class UKSSpecialty*>* OutSpecialties);
	class UKSSkinBundle* GetSkinItem();
	int GetScore();
	int GetRevives();
	class AKSRevealManager* GetRevealManager();
	int GetRespawnTickets();
	float GetRemainingRespawnTime();
	class AKSPlayerStateAssistant* GetPlayerStateAssistant();
	class AKSPlayerModManager* GetPlayerModManagerByRecipient(class AKSCharacterFoundation* ModRecipient);
	class AKSPlayerModManager* GetPlayerModManager();
	class UPUMG_PlayerInfo* GetPlayerInfo(class APUMG_HUD* HUD);
	int GetPlayerId();
	class UKSPersistentPlayerData* GetPersistentPlayerData();
	int GetPartySize();
	bool GetModInstancesOfType(Killstreak_EPlayerModType Type, TArray<class UKSPlayerModInstance*>* OutMods);
	bool GetModInstances(TArray<class UKSPlayerModInstance*>* OutMods);
	float GetMMR();
	int64_t GetMctsPlayerId();
	bool GetLoadoutClass(class UKSLoadoutClass** OutLoadoutClass);
	bool GetLastTimePlayerDamagedMe(int64_t MctsNetId, float* Timestamp);
	int GetKills();
	int GetJobMasteryLevel();
	class UKSJobItem* GetJob();
	TArray<class AKSItemDrop*> GetItemsDroppedOnDeath();
	bool GetIsPendingRepossession();
	int GetInventoryItemQuantity(int ItemId);
	float GetInitialRespawnTime();
	int GetHeadshots();
	int GetHacks();
	bool GetGameModeMods(TArray<class UKSModInst_Activated*>* OutMods, bool bIncludeChildMods);
	int GetEliminations();
	Killstreak_EEliminationState GetEliminatedState();
	int GetDownSpree();
	int GetDowns();
	float GetDistanceSprinted();
	int GetDehacks();
	int GetDeaths();
	float GetCurrentTimePlayed();
	int GetCurrentRankedLevel();
	int GetCurrentCash();
	class AKSCharacterBase* GetCharacterOwner();
	int GetCachedValueForItemId(int ItemId);
	TMap<struct FString, float> GetBonusProgressionMultiplierFromEvents(const struct FString& Key);
	TMap<struct FString, float> GetBonusProgressionMultiplierFromBoosters(const struct FString& Key);
	float GetBonusProgressionMultiplier(const struct FString& Key);
	class AKSCharacterBase* GetBestCharacterOwner();
	class AKSCharacterBase* GetBackupCharacterOwner();
	int GetAssists();
	bool GetActivatableMods(TArray<class UKSModInst_Activated*>* OutMods, bool bIncludeChildMods);
	void FriendlyFirePenalty(bool IsKilled, class AKSPlayerState* Victim);
	void EnterPlay(bool bSkipResetEliminatedOrDownedTest, bool bSpendTicket);
	void EliminatePlayer();
	void EarnCash(int Earnings, bool bShareWithTeam, const struct FText& Reason, bool bBonus);
	void DisallowGiveUpTimerTick(float Seconds);
	void DisallowGiveUpTimerComplete();
	void DisallowGiveUpTimerActive(bool bActive);
	void ClientPollProposalFailed();
	void ClientNotifyFriendlyFireDamageApplied(float Amount);
	void ClientNotifyExceededReverseFriendlyFireThreshold();
	void ClearDamageTimestamps();
	void ClaimLootItem(int LootItemId, int Quantity);
	void ChangeMoney(int Delta, const struct FText& Reason, bool bBonus);
	void AssignModsToRestoreOnReactivation(TArray<class UKSPlayerMod*> InModsToRestoreOnReactivated);
	bool AnyActivatableModsActive();
	void AddScore(int InScore);
	void AddRevive(int Count);
	void AddKill(int Count);
	void AddHeadshot(int Count);
	void AddHack(int Count);
	void AddElimination(int Count);
	void AddDown(int Count);
	void AddDehack(int Count);
	void AddDeath(int Count);
	void AddAssist(int Count);
	bool ActivatableModAtIndexActive(int AbilityIndex);
	bool ActivatableGameModeModAtIndexActive(int AbilityIndex);
};

// Class Killstreak.KSPlayerState_Control
// 0x0000 (FullSize[0x0BE8] - InheritedSize[0x0BE8])
class AKSPlayerState_Control : public AKSPlayerState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1591);
		return ptr;
	}



};

// Class Killstreak.KSPlayerStateAssistant
// 0x0028 (FullSize[0x0248] - InheritedSize[0x0220])
class AKSPlayerStateAssistant : public AInfo
{
public:
	class UKSResourceManagerComponent*                 ResourceManagerComponent;                                  // 0x0220(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKSPersistentPlayerId                       LastOwnerPlayerId;                                         // 0x0228(0x0010) (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSPlayerState*                              PlayerStateOwner;                                          // 0x0238(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSPlayerModManager*                         PlayerModManager;                                          // 0x0240(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1592);
		return ptr;
	}



	void SetPlayerStateOwner(class AKSPlayerState* NewPlayerState);
	void SetPlayerModManager(class AKSPlayerModManager* InPlayerModManager);
	void RemoveAndDestroyPlayerStateAssistant();
	class UKSResourceManagerComponent* GetResourceManagerComponent();
	class AKSPlayerState* GetPlayerStateOwner();
	class AKSPlayerModManager* GetPlayerModManager();
	struct FKSPersistentPlayerId GetLastOwnerPlayerId();
};

// Class Killstreak.KSPlayerStatsManager
// 0x0000 (FullSize[0x0210] - InheritedSize[0x0210])
class UKSPlayerStatsManager : public UKSActivityManagerBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1593);
		return ptr;
	}



};

// Class Killstreak.KSPointOfInterest
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSPointOfInterest : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1595);
		return ptr;
	}



	void StagePOI();
	void EnablePOI();
	void DisablePOI();
};

// Class Killstreak.KSPOIBlueprintFunctionLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSPOIBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1596);
		return ptr;
	}



	void STATIC_SortPointsOfInterestByID(bool ShouldSortDescending);
	int STATIC_GetPointOfInterestFavoredSide();
	void STATIC_GetAllPointsOfInterest(class UObject* WorldContextObject);
	void STATIC_ChooseRandomPointOfInterest();
};

// Class Killstreak.KSPollBase
// 0x00B8 (FullSize[0x00E0] - InheritedSize[0x0028])
class UKSPollBase : public UObject
{
public:
	Killstreak_EPollAudience                           PollAudience;                                              // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2N3E[0x7];                                     // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       PollTitle;                                                 // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       PollSuccessfulMessage;                                     // 0x0048(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       PollUnsuccessfulMessage;                                   // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       AffirmativeOption;                                         // 0x0078(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       NegativeOption;                                            // 0x0090(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       AffirmativeOptionVoteCastMessage;                          // 0x00A8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       NegativeOptionVoteCastMessage;                             // 0x00C0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              PollLengthInSeconds;                                       // 0x00D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3MZY[0x4];                                     // 0x00DC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1597);
		return ptr;
	}



	void OnPollStarted(class AKSGameState* GameState, int TeamNum);
	void OnPollPassed(class AKSGameState* GameState, int TeamNum);
	void OnPollFailed(class AKSGameState* GameState, int TeamNum);
	int GetNumberOfVotesToEnd(int VoterCount, bool bIsFullTeam);
	bool CanPlayerProposeThisPoll(class AKSPlayerState* Player);
	bool CanGameProposeThisPoll(class AKSGameState* GameState);
};

// Class Killstreak.KSPowerUp
// 0x0038 (FullSize[0x0258] - InheritedSize[0x0220])
class AKSPowerUp : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnPowerUpPickedUp;                                         // 0x0220(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UBoxComponent*                               CollisionBox;                                              // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                            OverlapSphere;                                             // 0x0238(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSProximityComponent*                       ProximityComponent;                                        // 0x0240(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                OwningTeam;                                                // 0x0248(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDestroyOnProximity;                                       // 0x024C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IGYC[0x3];                                     // 0x024D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DestroyDelay;                                              // 0x0250(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_I4CI[0x4];                                     // 0x0254(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1598);
		return ptr;
	}



	void SetTeamNum(int NewTeam);
	void OnRep_OwningTeam();
	void OnProximityUpdatedNative(class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FKSActorProximityInfo& ProximityInfo);
	void OnProximityOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FKSActorProximityInfo& ProximityInfo);
	void OnPickedUp(class AActor* PickingUpActor);
	void HandleTeamUpdate(int NewTeam);
	bool CheckOverlapRelevance(class AActor* OverlappingActor);
	bool CheckNetRelevance(class AActor* Viewer);
	void BroadcastPickedUp(class AActor* PickingUpActor);
};

// Class Killstreak.KSPowerUp_Reequip
// 0x0050 (FullSize[0x02A8] - InheritedSize[0x0258])
class AKSPowerUp_Reequip : public AKSPowerUp
{
public:
	struct FGameplayTagQuery                           ReequipWeaponTypesQuery;                                   // 0x0258(0x0048) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                               bDropLeftovers;                                            // 0x02A0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_41EX[0x7];                                     // 0x02A1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1599);
		return ptr;
	}



};

// Class Killstreak.KSPowerUpDrop
// 0x0000 (FullSize[0x0380] - InheritedSize[0x0380])
class AKSPowerUpDrop : public AKSItemDrop
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1600);
		return ptr;
	}



};

// Class Killstreak.KSProjectile
// 0x06C0 (FullSize[0x0920] - InheritedSize[0x0260])
class AKSProjectile : public AKSLagCompensatedActor
{
public:
	unsigned char                                      UnknownData_7D1Q[0x78];                                    // 0x0260(0x0078) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSEquipmentContainer                       EquipmentContainer;                                        // 0x02D8(0x0228) (Net, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UKSWeaponComponent*                          WeaponComponent;                                           // 0x0500(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKSEquipmentId                              WeaponComponentEquipmentId;                                // 0x0508(0x0004) (Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZX5C[0x4];                                     // 0x050C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponAsset*                              CachedWeaponAsset;                                         // 0x0510(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EProjectileWeaponComponentType          WeaponComponentType;                                       // 0x0518(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PPDJ[0x7];                                     // 0x0519(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               ApparelObjectsToListenTo;                                  // 0x0520(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       SkinTagContainer;                                          // 0x0530(0x0020) (Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IJEQ[0x18];                                    // 0x0550(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HorizontalThrowSpeed;                                      // 0x0568(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSpeed;                                                  // 0x056C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bModifyInitialSpeedWithPitch;                              // 0x0570(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDeadOrDownedDrop;                                         // 0x0571(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanBeIntercepted;                                         // 0x0572(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FVZU[0x5];                                     // 0x0573(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             CollisionComponent0;                                       // 0x0578(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProjectileMovementComponent*                ProjectileMovementComponent;                               // 0x0580(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FHitResult                                  ProjectileHit;                                             // 0x0588(0x0088) (BlueprintVisible, Net, IsPlainOldData, RepNotify, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	float                                              LifeSpanAfterDeactivate;                                   // 0x0610(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldHideOnDeactivate;                                   // 0x0614(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bStopped;                                                  // 0x0615(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1ESX[0x2];                                     // 0x0616(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                NumBounces;                                                // 0x0618(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                NumPenetrations;                                           // 0x061C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BKBM[0x10];                                    // 0x0620(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AdditionalPredictionTimeLenience;                          // 0x0630(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AdditionalPredictionArcTime;                               // 0x0634(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HitValidationLenience;                                     // 0x0638(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bValidateHitsWithCollision;                                // 0x063C(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SOBL[0x3];                                     // 0x063D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FHitResult                                  StoppingHit;                                               // 0x0640(0x0088) (BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData, RepNotify, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                               bAttachWhenStopped;                                        // 0x06C8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDetachWhenBumped;                                         // 0x06C9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSimulatePhysicsWhenStopped;                               // 0x06CA(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFreezeProjectileOnStop;                                   // 0x06CB(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S1BZ[0x14];                                    // 0x06CC(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bDealPointDamageAfterDetach;                               // 0x06E0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MIM6[0x3];                                     // 0x06E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DebugDrawLifetime;                                         // 0x06E4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bCreateClusterSegmentsOnStopped;                           // 0x06E8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCreateClusterSegmentsOnExplode;                           // 0x06E9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5SLI[0x6];                                     // 0x06EA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnWeaponAssetSet;                                          // 0x06F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RKNW[0x10];                                    // 0x0700(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponAsset*                              WeaponAsset;                                               // 0x0710(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSWeaponAsset*                              ParentWeaponAsset;                                         // 0x0718(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKSWeaponAsset*                              DamageWeaponAssetOverride;                                 // 0x0720(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AKSWeapon*                                   SpawningWeapon;                                            // 0x0728(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              TimeCooked;                                                // 0x0730(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     SpawnLocation;                                             // 0x0734(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                                    SpawnRotation;                                             // 0x0740(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_W6F1[0x4];                                     // 0x074C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrimitiveComponent*                         PrimitiveCollisionComponent;                               // 0x0750(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     LocationLastFrame;                                         // 0x0758(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bActive;                                                   // 0x0764(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EProjectileExplosionType                DeactivateExplosionType;                                   // 0x0765(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDeactivateInWater;                                        // 0x0766(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_V1TN[0x5];                                     // 0x0767(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bCanBeKilled;                                              // 0x076C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4YE6[0x3];                                     // 0x076D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxHealth;                                                 // 0x0770(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSetInstigatorToKiller;                                    // 0x0774(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZM96[0x3];                                     // 0x0775(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CurrentHealth;                                             // 0x0778(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LifeSpanAfterKilled;                                       // 0x077C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bExplodeOnKilled;                                          // 0x0780(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0NPQ[0x7];                                     // 0x0781(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AController*                                 FriendlyKiller;                                            // 0x0788(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bProjectileKillPending;                                    // 0x0790(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IQH4[0x7];                                     // 0x0791(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnProjectileKilled;                                        // 0x0798(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                               bAffectsFriendly;                                          // 0x07A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowFriendlyPlayersToDamage;                             // 0x07A9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPenetratesFriendly;                                       // 0x07AA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAffectsEnemy;                                             // 0x07AB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPenetratesEnemy;                                          // 0x07AC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasPlayedExplosion;                                       // 0x07AD(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JALV[0x2];                                     // 0x07AE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPlayExplosion;                                           // 0x07B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UParticleSystem*                             DefaultSpang;                                              // 0x07C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<TEnumAsByte<Engine_EPhysicalSurface>, class UParticleSystem*> SurfaceSpangs;                                             // 0x07C8(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              SpinsPerSecond;                                            // 0x0818(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpeedToReachSpinsPerSecond;                                // 0x081C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     SpinAxis;                                                  // 0x0820(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSpinAfterDetaching;                                       // 0x082C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanBreakDestructibles;                                    // 0x082D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4PKP[0x2];                                     // 0x082E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                 // 0x0830(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanReclaim;                                               // 0x0838(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDestroyOnReclaim;                                         // 0x0839(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YFG0[0x2];                                     // 0x083A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InteractionDistanceOffset;                                 // 0x083C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EProjectileReclaimPermission            ReclaimPermissions;                                        // 0x0840(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldRestoreWeaponAssetOnReclaim;                        // 0x0841(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2K2F[0x2];                                     // 0x0842(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ReclaimTime;                                               // 0x0844(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      ReclaimInteractionType;                                    // 0x0848(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSCharacter*                                Reclaimer;                                                 // 0x0850(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bReclaimPending;                                           // 0x0858(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6NUQ[0x3];                                     // 0x0859(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ReclaimStock;                                              // 0x085C(0x0004) (Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnReclaim;                                                 // 0x0860(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                               bShouldModifyVisibilityChecks;                             // 0x0870(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TA78[0x3];                                     // 0x0871(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              VisibilityDistance;                                        // 0x0874(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowOnHud;                                                // 0x0878(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_182B[0x7];                                     // 0x0879(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UObject*                                     WidgetIcon;                                                // 0x0880(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      MinimapDisplayWidget[0x28];                                // 0x0888(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      FullmapDisplayWidget[0x28];                                // 0x08B0(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      OverlayDisplayWidget[0x28];                                // 0x08D8(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	Killstreak_EProjectileVisibilityType               WidgetIconAudience;                                        // 0x0900(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EProjectileVisibilityType               OverlayIconAudience;                                       // 0x0901(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B6O1[0x6];                                     // 0x0902(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FProjectileWidgetInfo>               WidgetInfos;                                               // 0x0908(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                OriginalOwnerId;                                           // 0x0918(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XFPA[0x4];                                     // 0x091C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1601);
		return ptr;
	}



	void UpdateSpinRotation(float DeltaSeconds);
	void TriggerExplosionFromHitResult(const struct FHitResult& HitResult, Killstreak_EProjectileExplosionType ExplosionType);
	void TriggerExplosion(const struct FProjectileExplosionInfo& ExplosionInfo);
	void TakeoverDelayComplete();
	void SpawnSpang(const struct FHitResult& Hit);
	void SimulateExplosion();
	bool ShouldPenetrate(const struct FHitResult& HitResult);
	bool ShouldBounceOff(const struct FHitResult& HitResult);
	void SetWeaponAsset(class UKSWeaponAsset* InAsset);
	void SetSkinObjectParent(class UMultiSkinObject* InParent);
	void SetHorizontalThrowSpeed(float InSpeed);
	void SetFumbled();
	void SetDamageOverrideWeaponAsset(class UKSWeaponAsset* InWeaponAsset);
	void ServerProcessPredictedHits(TArray<struct FLaggedProjectileHit> PredictedHits);
	void RecordPredictedHits(TArray<struct FHitResult>* HitResults, Killstreak_EProjectilePredictionType PredictionType);
	void RecordPredictedHit(const struct FHitResult& HitResult, Killstreak_EProjectilePredictionType PredictionType);
	bool Reclaim(class AKSCharacter* ReclaimingCharacter);
	void PlayFizzle(const struct FProjectileExplosionInfo& ExplosionInfo);
	void PlayExplosion(const struct FProjectileExplosionInfo& ExplosionInfo);
	void OnTimeCookedSet();
	void OnRootComponentDetached(class USceneComponent* DetachedComponent);
	void OnRep_WeaponAsset();
	void OnRep_TimeCooked();
	void OnRep_StoppingHit();
	void OnRep_ReclaimStock();
	void OnRep_ProjectileHit();
	void OnRep_ParentWeaponAsset();
	void OnRep_CurrentHealth();
	bool OnProjectileStopped(const struct FHitResult& HitResult);
	bool OnProjectilePenetrated(const struct FHitResult& HitResult);
	bool OnProjectileBounced(const struct FHitResult& HitResult, const struct FVector& ImpactVelocity);
	void OnKilled(class AController* EventInstigator);
	void NotifyPredictedHitRejected();
	void NativeOnProjectileStopped(const struct FHitResult& HitResult);
	void NativeOnProjectilePenetrated(const struct FHitResult& HitResult);
	void NativeOnProjectileBounced(const struct FHitResult& HitResult, const struct FVector& ImpactVelocity);
	float ModifyDamageDealt(float DamageAmount, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class AActor* DamagedActor);
	bool IsFullyCooked();
	bool IsActive();
	class UKSWeaponComponent* GetWeaponComponent();
	class UKSWeaponAsset* GetWeaponAsset();
	float GetTimeCooked();
	struct FRotator GetSpawnRotation();
	struct FVector GetSpawnLocation();
	class AKSWeapon* GetSpawningWeapon();
	int GetReclaimStock();
	struct FText GetReclaimPromptText(class AKSCharacter* Character);
	struct FText GetReclaimProgressText(class AKSCharacter* Character);
	class USceneComponent* GetProjectileUpdatedComponent();
	void GetOutlineableMeshes(TArray<class UPrimitiveComponent*>* OutMeshes);
	int GetNumPenetrations();
	int GetNumBounces();
	class UProjectileMovementComponent* GetMovementComponent();
	float GetHorizontalThrowSpeed();
	class UKSWeaponAsset* GetDamageWeaponAsset();
	class AController* GetDamageInstigator();
	float GetDamageFalloffRangeScaler();
	class USceneComponent* GetComponentToRotate();
	class UKSProjectileClusterComponent* GetClusterComponent();
	void GetAttachments(TArray<class UKSWeaponAttachment*>* OutWeaponAttachments);
	void FixupWeaponComponent();
	void DoRadialDamageDefault();
	bool DoesPenetrateFriendly();
	bool DoesPenetrateEnemy();
	bool DoesAffectFriendly();
	bool DoesAffectEnemy();
	TArray<class AActor*> DetermineIgnoredActors(const struct FHitResult& HitResult);
	void Deactivate();
	void CreateClusterSegmentsFromStoppingHit();
	float ComponentTakeDamage(class UPrimitiveComponent* HitComponent, float DamageAmount);
	bool CanEverBreakDestructibles();
	bool CanCharacterReclaim(class AKSCharacter* QueriedCharacter);
	void BroadcastExplosion(const struct FProjectileExplosionInfo& ExplosionInfo);
	bool AffectsActor(class AActor* InActor);
	bool AddAttachment(class UKSWeaponAttachment* InAttachment);
};

// Class Killstreak.KSProjectile_Grenade
// 0x00A8 (FullSize[0x09C8] - InheritedSize[0x0920])
class AKSProjectile_Grenade : public AKSProjectile
{
public:
	unsigned char                                      UnknownData_LPT8[0x10];                                    // 0x0920(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      OverlayWarningDisplayWidget[0x28];                         // 0x0920(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	struct FScriptMulticastDelegate                    OnGrenadeProximity;                                        // 0x0958(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	Killstreak_EMarkerTeamVisibility                   MarkerTeamVisibility;                                      // 0x0968(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bTakeOverOnStopped;                                        // 0x0969(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YKBM[0x2];                                     // 0x096A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RepFuseTimeRemaining;                                      // 0x096C(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2YPB[0x4];                                     // 0x0970(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CurrentFuseTime;                                           // 0x0974(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                                FuseTimerHandle;                                           // 0x0978(0x0008) (Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                                FuseCookPauseTimerHandle;                                  // 0x0980(0x0008) (Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ProximityWarningDelay;                                     // 0x0988(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5CWF[0xC];                                     // 0x098C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bSetFuseOnBounce;                                          // 0x0998(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O3CF[0x3];                                     // 0x0999(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BounceFuseTime;                                            // 0x099C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSetFuseOnStopped;                                         // 0x09A0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EIUI[0x3];                                     // 0x09A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StoppedFuseTime;                                           // 0x09A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bExplodesOnStopped;                                        // 0x09A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9MDL[0x7];                                     // 0x09A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USphereComponent*                            DetectionSphere;                                           // 0x09B0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EC6V[0x1];                                     // 0x09B8(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bGeneratesTouchSenseEvents;                                // 0x09B9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6PXT[0x6];                                     // 0x09BA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSItemStimuliSourceComponent*               StimuliSourceComponent;                                    // 0x09C0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1602);
		return ptr;
	}



	void UnregisterTouchEvent(class AKSCharacter* KSCharacter);
	bool ShouldSetFuseOnStopped(const struct FHitResult& HitResult);
	bool ShouldExplodeOnStopped(const struct FHitResult& HitResult);
	bool ShouldExplodeOnBounce(const struct FHitResult& HitResult, const struct FVector& ImpactVelocity);
	void SetOverlayWarningDisplayWidget(bool bForce);
	void SetFuseTime(float InFuseTime);
	void RegisterTouchEvent(class AKSCharacter* KSCharacter);
	void OnRep_FuseTimeRemaining();
	bool IsInProximityOfLocalCharacter();
	bool IsFuseActive();
	Killstreak_EMarkerTeamVisibility GetMarkerTeamVisibility();
	float GetCurrentFuseTime();
	void FuseTimeExpired();
	bool CanSeeProximityWarning(class AController* QueriedPlayer);
	void CallOnLocalViewTargetChanged(class AKSPlayerController* InController, class AActor* OldViewTarget, class AActor* NewViewTarget);
};

// Class Killstreak.KSProjectile_ClusterGrenade
// 0x0038 (FullSize[0x0A00] - InheritedSize[0x09C8])
class AKSProjectile_ClusterGrenade : public AKSProjectile_Grenade
{
public:
	class UKSProjectileClusterComponent*               ProjectileClusterComponent;                                // 0x09C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bInflictDamageOnExplosion;                                 // 0x09D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PF75[0x7];                                     // 0x09D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             ClusterExplosionEffect;                                    // 0x09D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                          ClusterExplosionDecalMaterial;                             // 0x09E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     ClusterDecalScale;                                         // 0x09E8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HFST[0x4];                                     // 0x09F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMesh*                                 StopMesh;                                                  // 0x09F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1603);
		return ptr;
	}



	class UKSProjectileClusterComponent* GetProjectileClusterComponent();
	bool DoesInflictDamageOnExplosion();
};

// Class Killstreak.KSSpreadProjectile
// 0x0040 (FullSize[0x02A0] - InheritedSize[0x0260])
class AKSSpreadProjectile : public AKSLagCompensatedActor
{
public:
	class USceneComponent*                             CollisionComponent;                                        // 0x0260(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProjectileMovementComponent*                ProjectileMovementComponent;                               // 0x0268(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LUAL[0x30];                                    // 0x0270(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1604);
		return ptr;
	}



	bool OnProjectileStopped(const struct FHitResult& HitResult);
	bool OnProjectileBounced(const struct FHitResult& HitResult, const struct FVector& ImpactVelocity);
	void NativeOnProjectileStopped(const struct FHitResult& HitResult);
	void NativeOnProjectileBounced(const struct FHitResult& HitResult, const struct FVector& ImpactVelocity);
};

// Class Killstreak.KSSpikeBallSpreadRule
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSSpikeBallSpreadRule : public UKSGrenadeSpreadRule
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1606);
		return ptr;
	}



};

// Class Killstreak.KSWeapon_Shotgun
// 0x0010 (FullSize[0x0878] - InheritedSize[0x0868])
class AKSWeapon_Shotgun : public AKSWeapon_Aimed
{
public:
	TArray<struct FAimData>                            CachedPelletSpread;                                        // 0x0868(0x0010) (ZeroConstructor, Deprecated, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1743);
		return ptr;
	}



};

// Class Killstreak.KSWeapon_DirectTarget
// 0x0018 (FullSize[0x0740] - InheritedSize[0x0728])
class AKSWeapon_DirectTarget : public AKSWeapon
{
public:
	class AActor*                                      ActiveTarget;                                              // 0x0728(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKSTargeterConfig                           TargeterConfig;                                            // 0x0730(0x000C) (Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UKST[0x4];                                     // 0x073C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1727);
		return ptr;
	}



	void SubmitTargetSelection(class AActor* TargetCandidate);
	void PopulateValidTargets(TArray<class AActor*>* ValidTargetArray);
	void OnActiveTargetDestroyed(class AActor* DestroyedActor);
	bool IsTargetValid(class AActor* TestActor);
	void ClientRejectTargetSelection();
};

// Class Killstreak.KSWeapon_TargetFriendly
// 0x0000 (FullSize[0x0740] - InheritedSize[0x0740])
class AKSWeapon_TargetFriendly : public AKSWeapon_DirectTarget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1744);
		return ptr;
	}



};

// Class Killstreak.KSWeapon_TargetSurface
// 0x0028 (FullSize[0x0890] - InheritedSize[0x0868])
class AKSWeapon_TargetSurface : public AKSWeapon_Aimed
{
public:
	struct FScriptMulticastDelegate                    OnSurfaceTargetFireFailure;                                // 0x0868(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSurfaceValidityChanged;                                  // 0x0878(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               ValidTarget;                                               // 0x0888(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UVJW[0x7];                                     // 0x0889(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1745);
		return ptr;
	}



};

// Class Killstreak.KSWeapon_Zipline
// 0x0038 (FullSize[0x08A0] - InheritedSize[0x0868])
class AKSWeapon_Zipline : public AKSWeapon_Aimed
{
public:
	struct FScriptMulticastDelegate                    OnEndPointUpdated;                                         // 0x0868(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UClass*                                      ZipLineClass;                                              // 0x0878(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AKSZipLine*                                  Zipline;                                                   // 0x0880(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<Engine_ETraceTypeQuery>                PreviewTraceChannel;                                       // 0x0888(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_91T5[0x3];                                     // 0x0889(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxRange;                                                  // 0x088C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinRange;                                                  // 0x0890(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ProjectileSpeed;                                           // 0x0894(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PDEJ[0x8];                                     // 0x0898(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1746);
		return ptr;
	}



};

// Class Killstreak.KSWeaponAnimInstance
// 0x00B8 (FullSize[0x03E8] - InheritedSize[0x0330])
class UKSWeaponAnimInstance : public UKSAnimInstance
{
public:
	bool                                               m_bIsReloading;                                            // 0x0330(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K4J0[0x3];                                     // 0x0331(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              m_fIKAlpha;                                                // 0x0334(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              m_fIKBlendInTime;                                          // 0x0338(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              m_fIKBlendOutTime;                                         // 0x033C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     m_vADSOffset;                                              // 0x0340(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               m_bIsMoving;                                               // 0x034C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9BQ1[0x3];                                     // 0x034D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              m_fMovingAlpha;                                            // 0x0350(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                m_nFireImpulseCounter;                                     // 0x0354(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               m_bFireImpulse;                                            // 0x0358(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6DLI[0x3];                                     // 0x0359(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              m_fADSAlpha;                                               // 0x035C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               m_bIsSprinting;                                            // 0x0360(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ABPF[0x3];                                     // 0x0361(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              m_fLeadingPitch;                                           // 0x0364(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              m_fLeadingYaw;                                             // 0x0368(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              m_fLeadingPitchADS;                                        // 0x036C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              m_fLeadingYawADS;                                          // 0x0370(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWeaponLeadingInfo                          LeadingPitch;                                              // 0x0374(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponLeadingInfo                          LeadingYaw;                                                // 0x0384(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponLeadingInfo                          LeadingPitchADS;                                           // 0x0394(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponLeadingInfo                          LeadingYawADS;                                             // 0x03A4(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_42DL[0xC];                                     // 0x03B4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                m_LandImpulseCounter;                                      // 0x03C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                m_JumpImpulseCounter;                                      // 0x03C4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               m_bFoldIronSights;                                         // 0x03C8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LX1F[0x3];                                     // 0x03C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                WeaponAnimIndex;                                           // 0x03CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayerCrouching;                                          // 0x03D0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_H7NR[0x3];                                     // 0x03D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TempPhoneFlip;                                             // 0x03D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    TargetBarrelRotation;                                      // 0x03D8(0x000C) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bEnableBarrelRotation;                                     // 0x03E4(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M6OM[0x3];                                     // 0x03E5(0x0003) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1747);
		return ptr;
	}



	void SetWeaponState(class UKSWeaponComponent* OwningWeaponComponent, Killstreak_EWeaponStateNew OldState, Killstreak_EWeaponStateNew NewState);
	void SetScopeScaleAlpha(float NewAlpha);
	void SetRevolverChamberRotatae(const struct FRotator& NewRevolverChamberRot);
	void PlayFireAnimationBP();
	void InitSetWeaponState(Killstreak_EWeaponStateNew NewWeaponState);
	void InitSetUseWeaponAdditive(bool bUseAdditive);
	void InitSetScopeMeshScale(float NewAlpha, bool bIsRevolver, bool bIsMultiStageReload);
	void InitSetHideMagazine(float HideMagazineAlpha);
	void InitSetFoldingStock(bool bIsStockFolded, const struct FRotator& StockRotationTarget, const struct FRotator& StockAltRotationTarget);
};

// Class Killstreak.KSWeaponAsset_Build
// 0x0060 (FullSize[0x0960] - InheritedSize[0x0900])
class UKSWeaponAsset_Build : public UKSWeaponAsset
{
public:
	unsigned char                                      SoftBuildActorClass[0x28];                                 // 0x0900(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      SoftBuildPreviewActorClass[0x28];                          // 0x0928(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	float                                              BuildActivationDelay;                                      // 0x0950(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4HTX[0xC];                                     // 0x0954(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1748);
		return ptr;
	}



	void GetSoftBuildPreviewActorClass();
	void GetSoftBuildActorClass();
	float GetBuildActivationDelay();
};

// Class Killstreak.KSWeaponAsset_WithProjectile
// 0x0080 (FullSize[0x0980] - InheritedSize[0x0900])
class UKSWeaponAsset_WithProjectile : public UKSWeaponAsset
{
public:
	unsigned char                                      ProjectileClass[0x28];                                     // 0x0900(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      ProjectileWeaponAsset[0x28];                               // 0x0928(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	TArray<struct FKSProjectileWeaponInfo>             AdditionalProjectileWeaponInfos;                           // 0x0950(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RadialDamageOriginOffsetDistance;                          // 0x0960(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeToFullyCook;                                           // 0x0964(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 CookSpeedMultiplierCurve;                                  // 0x0968(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 CookDamageMultiplierCurve;                                 // 0x0970(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 BounceDamageMultiplierCurve;                               // 0x0978(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1749);
		return ptr;
	}



	float GetTimeToFullyCook();
	float GetRadialDamageOriginOffsetDistance();
	struct FKSProjectileWeaponInfo GetProjectileWeaponInfo(const struct FName& Key);
	void GetProjectileWeaponAsset();
	float GetProjectileRadius();
	float GetProjectileMaxSpeed();
	float GetProjectileMaxSimulationTimeStep();
	float GetProjectileMaxSimulationIterations();
	float GetProjectileInitialSpeed(float PitchAngle);
	float GetProjectileGravityScale();
	void GetProjectileClass();
	float GetCookSpeedMultiplier(float TimeCooked);
	float GetCookDamageMultiplier(float TimeCooked);
	float GetBounceDamageMultiplier(int NumBounces);
};

// Class Killstreak.KSWeaponAsset_Grenade
// 0x0040 (FullSize[0x09C0] - InheritedSize[0x0980])
class UKSWeaponAsset_Grenade : public UKSWeaponAsset_WithProjectile
{
public:
	bool                                               bAllowCooking;                                             // 0x0980(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WWWE[0x3];                                     // 0x0981(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinimumCookTime;                                           // 0x0984(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FuseTime;                                                  // 0x0988(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinHandRemainingFuse;                                      // 0x098C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFuseTicksInHand;                                          // 0x0990(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GHWG[0x7];                                     // 0x0991(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      GrenadeClass[0x28];                                        // 0x0991(0x0028) UNKNOWN PROPERTY: SoftClassProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1750);
		return ptr;
	}



	float GetMinimumCookTime();
	float GetMinHandRemainingFuse();
	float GetFuseTime();
	bool GetFuseTicksInHand();
	bool AllowCooking();
};

// Class Killstreak.KSWeaponAsset_Melee
// 0x0040 (FullSize[0x09C0] - InheritedSize[0x0980])
class UKSWeaponAsset_Melee : public UKSWeaponAsset_WithProjectile
{
public:
	struct FVector                                     MeleeSphereOffset;                                         // 0x0980(0x000C) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MeleeSphereRadius;                                         // 0x098C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MeleeSwingActiveTimeSeconds;                               // 0x0990(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VBMI[0x4];                                     // 0x0994(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TEnumAsByte<Engine_EObjectTypeQuery>>       OverlapObjectTypes;                                        // 0x0998(0x0010) (Edit, ZeroConstructor, Config, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<Engine_ETraceTypeQuery>                TraceChannel;                                              // 0x09A8(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZTG9[0x3];                                     // 0x09A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxLungeDistance;                                          // 0x09AC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxLungeDistanceCorrectionMultiplier;                      // 0x09B0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxLungeDuration;                                          // 0x09B4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LungeConeHalfAngle;                                        // 0x09B8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LungeConeOriginDistanceOffset;                             // 0x09BC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1751);
		return ptr;
	}



	TArray<TEnumAsByte<Engine_EObjectTypeQuery>> GetOverlapObjectTypes();
	TEnumAsByte<Engine_ETraceTypeQuery> GetMeleeTraceChannel();
	float GetMeleeSwingActiveTimeSeconds();
	float GetMeleeSphereRadius();
	struct FVector GetMeleeSphereOffset();
	float GetMaxLungeDuration();
	float GetMaxLungeDistanceCorrectionMultiplier();
	float GetMaxLungeDistance();
	float GetLungeConeHalfAngle();
};

// Class Killstreak.KSWeaponAsset_Pierce
// 0x0030 (FullSize[0x09B0] - InheritedSize[0x0980])
class UKSWeaponAsset_Pierce : public UKSWeaponAsset_WithProjectile
{
public:
	float                                              DamageScalarAfterWalls;                                    // 0x0980(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Q8IS[0x4];                                     // 0x0984(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      PierceClass[0x28];                                         // 0x0984(0x0028) UNKNOWN PROPERTY: SoftClassProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1752);
		return ptr;
	}



	float GetDamageScalarAfterWalls();
};

// Class Killstreak.KSWeaponAsset_Shotgun
// 0x0030 (FullSize[0x0930] - InheritedSize[0x0900])
class UKSWeaponAsset_Shotgun : public UKSWeaponAsset
{
public:
	int                                                PelletsPerShot;                                            // 0x0900(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AimDownSightsAccuracy;                                     // 0x0904(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseSpreadPattern;                                         // 0x0908(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QJTN[0x7];                                     // 0x0909(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FVector2D>                           SpreadPattern;                                             // 0x0910(0x0010) (Edit, ZeroConstructor, Config, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HitPercentageForHeadshot;                                  // 0x0920(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CKSN[0xC];                                     // 0x0924(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1753);
		return ptr;
	}



	void GetSpreadPattern(TArray<struct FVector2D>* OutPattern);
	int GetPelletsPerShot();
	float GetHitPercentageForHeadshot();
	float GetAimDownSightsAccuracy();
	bool DoesUseSpreadPattern();
};

// Class Killstreak.KSWeaponAttachment
// 0x00A8 (FullSize[0x02F8] - InheritedSize[0x0250])
class UKSWeaponAttachment : public UKSItem
{
public:
	unsigned char                                      FunctionalClass[0x28];                                     // 0x0250(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      CosmeticClass[0x28];                                       // 0x0278(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	struct FGameplayTagContainer                       ValidAttachPoints;                                         // 0x02A0(0x0020) (Edit, Config, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UKSAttachmentCompatRules*                    WeaponCompatibilityRules;                                  // 0x02C0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       CompatibleWeaponTypes;                                     // 0x02C8(0x0020) (Deprecated, Protected, NativeAccessSpecifierProtected)
	bool                                               bShouldBeInAttachmentCollection;                           // 0x02E8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_A1VK[0x7];                                     // 0x02E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAttachmentCollection*                       GlobalWeaponAttachmentCollection;                          // 0x02F0(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1754);
		return ptr;
	}



	void GetValidAttachPoints(struct FGameplayTagContainer* OutAttachPoints);
	class UKSWeaponAsset* GetSpecificCompatibleWeapon();
	void GetFunctionalClass();
	void GetCosmeticClass();
	bool CheckCompatibilityRules(class UKSWeaponAsset* InWeaponAsset);
	bool CanAttachTo(class AKSWeapon* InWeapon, struct FGameplayTagContainer* AvailableAttachPoints);
};

// Class Killstreak.KSWeaponAttachment_AccuracyKick
// 0x0028 (FullSize[0x0320] - InheritedSize[0x02F8])
class UKSWeaponAttachment_AccuracyKick : public UKSWeaponAttachment
{
public:
	bool                                               bReplaceKickbackModule;                                    // 0x02F8(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4H4E[0x7];                                     // 0x02F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKickbackModule*                             KickbackModule;                                            // 0x0300(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              KickbackResetTime;                                         // 0x0308(0x0004) (Edit, ExportObject, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bModifyKickbackScale;                                      // 0x030C(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EK7W[0x3];                                     // 0x030D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              KickbackScale;                                             // 0x0310(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bModifyBaseAccuracy;                                       // 0x0314(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5OI2[0x3];                                     // 0x0315(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BaseAccuracyMultiplier;                                    // 0x0318(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FP9I[0x4];                                     // 0x031C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1755);
		return ptr;
	}



};

// Class Killstreak.KSWeaponAttachment_DefaultAmmo
// 0x0008 (FullSize[0x0300] - InheritedSize[0x02F8])
class UKSWeaponAttachment_DefaultAmmo : public UKSWeaponAttachment
{
public:
	int                                                DefaultAmmoIncrease;                                       // 0x02F8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TLV3[0x4];                                     // 0x02FC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1756);
		return ptr;
	}



};

// Class Killstreak.KSWeaponAttachment_ExtMagazine
// 0x0008 (FullSize[0x0300] - InheritedSize[0x02F8])
class UKSWeaponAttachment_ExtMagazine : public UKSWeaponAttachment
{
public:
	int                                                ClipSize;                                                  // 0x02F8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KZH6[0x4];                                     // 0x02FC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1757);
		return ptr;
	}



	int GetClipSize();
};

// Class Killstreak.KSWeaponAttachment_ExtMagPercent
// 0x0008 (FullSize[0x0300] - InheritedSize[0x02F8])
class UKSWeaponAttachment_ExtMagPercent : public UKSWeaponAttachment
{
public:
	float                                              ClipSizeIncreaseMultiplier;                                // 0x02F8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EExtendedMagazineRounding               RoundingType;                                              // 0x02FC(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WA25[0x3];                                     // 0x02FD(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1758);
		return ptr;
	}



};

// Class Killstreak.KSWeaponAttachment_LongBarrel
// 0x0008 (FullSize[0x0300] - InheritedSize[0x02F8])
class UKSWeaponAttachment_LongBarrel : public UKSWeaponAttachment
{
public:
	float                                              FalloffRangeMultiplier;                                    // 0x02F8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TPOF[0x4];                                     // 0x02FC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1759);
		return ptr;
	}



};

// Class Killstreak.KSWeaponAttachment_QuickMag
// 0x0008 (FullSize[0x0300] - InheritedSize[0x02F8])
class UKSWeaponAttachment_QuickMag : public UKSWeaponAttachment
{
public:
	float                                              ReloadPeriodMultiplier;                                    // 0x02F8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DBXM[0x4];                                     // 0x02FC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1760);
		return ptr;
	}



	float GetReloadPeriodMultiplier();
};

// Class Killstreak.KSWeaponAttachment_Reactive
// 0x0078 (FullSize[0x0370] - InheritedSize[0x02F8])
class UKSWeaponAttachment_Reactive : public UKSWeaponAttachment
{
public:
	bool                                               ReactiveWrapPreviewModeActive;                             // 0x02F8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1TZG[0x7];                                     // 0x02F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       ReactiveWrapPreviewDisplayDescription;                     // 0x0300(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FName                                       ProgressionTrackATitle;                                    // 0x0318(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ProgressionTrackBTitle;                                    // 0x0320(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ProgressionTrackCTitle;                                    // 0x0328(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FReactiveWrapMilestoneDisplay>       ReactiveWrapPreviewParameters;                             // 0x0330(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                StartingMilestonePreviewIndex;                             // 0x0340(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UtilizeOnComponentStateChanged;                            // 0x0344(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TriggerOnFire;                                             // 0x0345(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ResetOnReload;                                             // 0x0346(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ResetOnInactive;                                           // 0x0347(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ResetOnHolster;                                            // 0x0348(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ResetOnIdleTimer;                                          // 0x0349(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2EHG[0x2];                                     // 0x034A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              IdleResetTimerDuration;                                    // 0x034C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UtilizeOnAimModeChanged;                                   // 0x0350(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HideOnADS;                                                 // 0x0351(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UtilizeOnAnyPlayerDeath;                                   // 0x0352(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TriggerOnKillingAnEnemyWithAnything;                       // 0x0353(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TriggerOnKillingAnEnemyWithYourReactiveWeapon;             // 0x0354(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ResetOnYourDeath;                                          // 0x0355(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UtilizeOnAnyPlayerDowned;                                  // 0x0356(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TriggerOnDowningAnEnemyWithAnything;                       // 0x0357(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TriggerOnDowningAnEnemyWithYourReactiveWeapon;             // 0x0358(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ResetOnYourDown;                                           // 0x0359(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UtilizeOnOwnedPawnInstigateDamage;                         // 0x035A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TriggerOnDamagingAnEnemyWithAnything;                      // 0x035B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TriggerOnDamagingAnEnemyWithYourReactiveWeapon;            // 0x035C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ResetOnYouTakeDamage;                                      // 0x035D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TriggerOnDamageThresholdWithYourReactiveWeaponOnly;        // 0x035E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R6C8[0x1];                                     // 0x035F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TargetTriggerDamageThreshold;                              // 0x0360(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageThresholdResetTimerDuration;                         // 0x0364(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UtilizeOnMultiDownAchieved;                                // 0x0368(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TriggerOnMutlipleDownsWithAnything;                        // 0x0369(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TriggerOnMutlipleDownsWithYourReactiveWeapon;              // 0x036A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_V4MI[0x1];                                     // 0x036B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                TargetNumberOfDownsToAchieve;                              // 0x036C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1761);
		return ptr;
	}



};

// Class Killstreak.KSWeaponAttachment_Scope
// 0x0000 (FullSize[0x02F8] - InheritedSize[0x02F8])
class UKSWeaponAttachment_Scope : public UKSWeaponAttachment
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1762);
		return ptr;
	}



};

// Class Killstreak.KSWeaponAttachment_ScopeFixedFOV
// 0x0008 (FullSize[0x0300] - InheritedSize[0x02F8])
class UKSWeaponAttachment_ScopeFixedFOV : public UKSWeaponAttachment_Scope
{
public:
	float                                              AimDownSightsFov;                                          // 0x02F8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0SIZ[0x4];                                     // 0x02FC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1763);
		return ptr;
	}



	float GetAimDownSightsFieldOfView();
};

// Class Killstreak.KSWeaponAttachment_ScopeMultiply
// 0x0008 (FullSize[0x0300] - InheritedSize[0x02F8])
class UKSWeaponAttachment_ScopeMultiply : public UKSWeaponAttachment_Scope
{
public:
	float                                              ScopeMultiplier;                                           // 0x02F8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LHE3[0x4];                                     // 0x02FC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1764);
		return ptr;
	}



	float GetScopeMultiplier();
};

// Class Killstreak.KSWeaponAttachment_Silencer
// 0x0010 (FullSize[0x0308] - InheritedSize[0x02F8])
class UKSWeaponAttachment_Silencer : public UKSWeaponAttachment
{
public:
	float                                              AudibleRange;                                              // 0x02F8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bModifyFalloffRange;                                       // 0x02FC(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_K03E[0x3];                                     // 0x02FD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FalloffRangeMultiplier;                                    // 0x0300(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5SZG[0x4];                                     // 0x0304(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1765);
		return ptr;
	}



	float GetAudibleRange();
};

// Class Killstreak.KSWeaponAttachment_VarScope
// 0x0018 (FullSize[0x0310] - InheritedSize[0x02F8])
class UKSWeaponAttachment_VarScope : public UKSWeaponAttachment_Scope
{
public:
	TArray<float>                                      ScopeSettings;                                             // 0x02F8(0x0010) (Edit, ZeroConstructor, Config, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EKSVariableScopeType                    ScopeType;                                                 // 0x0308(0x0001) ELEMENT_SIZE_MISMATCH (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7RCF[0x3];                                     // 0x0308(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData_Q396[0x4];                                     // 0x030C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1766);
		return ptr;
	}



	TArray<float> GetScopeFOVOptions(class UKSWeaponAsset* InAsset);
	float GetScopeFOV(class UKSWeaponAsset* InAsset, int nIndex);
	int GetNumScopeOptions();
};

// Class Killstreak.KSWeaponAttachmentInstance
// 0x0080 (FullSize[0x0130] - InheritedSize[0x00B0])
class UKSWeaponAttachmentInstance : public UActorComponent
{
public:
	unsigned char                                      UnknownData_J9NY[0x20];                                    // 0x00B0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSWeapon*                                   WeaponOwner;                                               // 0x00D0(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSWeaponAttachmentCosmeticInst*             AttachmentCosmeticComponent;                               // 0x00D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JZRK[0x18];                                    // 0x00E0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSEquipRepInfo                             AttachPoint;                                               // 0x00F8(0x0014) (Edit, Net, DisableEditOnTemplate, EditConst, RepNotify, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7O1F[0x14];                                    // 0x010C(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponAttachment*                         AttachmentAsset;                                           // 0x0120(0x0008) (Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPersistsOnWeaponDrop;                                     // 0x0128(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WZUO[0x7];                                     // 0x0129(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1767);
		return ptr;
	}



	void SetPersistsOnWeaponDrop(bool bEnable);
	void OnUnattached();
	void OnRep_AttachPoint();
	void OnRep_AttachmentAsset();
	void OnAttached();
	bool IsAttached();
	bool GetPersistsOnWeaponDrop();
	class AKSWeapon* GetOwningWeapon();
	struct FGameplayTag GetAttachPoint();
	class UKSWeaponAttachment* GetAttachmentAsset();
};

// Class Killstreak.KSWeaponAttachmentInst_Reactive
// 0x0018 (FullSize[0x0148] - InheritedSize[0x0130])
class UKSWeaponAttachmentInst_Reactive : public UKSWeaponAttachmentInstance
{
public:
	unsigned char                                      UnknownData_U0WF[0x10];                                    // 0x0130(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint16_t                                           PersistentStateData;                                       // 0x0140(0x0002) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1L3N[0x6];                                     // 0x0142(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1768);
		return ptr;
	}



};

// Class Killstreak.KSWeaponAttachmentInst_VarScope
// 0x0010 (FullSize[0x0140] - InheritedSize[0x0130])
class UKSWeaponAttachmentInst_VarScope : public UKSWeaponAttachmentInstance
{
public:
	class UKSWeaponAttachment_VarScope*                VariableScopeAsset;                                        // 0x0130(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      ScopeZoomIndex;                                            // 0x0138(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_I57F[0x7];                                     // 0x0139(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1769);
		return ptr;
	}



	void ServerSetScopeZoomIndex(unsigned char NewIndex);
};

// Class Killstreak.KSProjectile_GrenadeSpread
// 0x0368 (FullSize[0x0D30] - InheritedSize[0x09C8])
class AKSProjectile_GrenadeSpread : public AKSProjectile_Grenade
{
public:
	unsigned char                                      UnknownData_GDDL[0x8];                                     // 0x09C8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TimeToStartSpread;                                         // 0x09D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TickSpreadFrequency;                                       // 0x09D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                                TickSpreadTimerHandle;                                     // 0x09D8(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      SpreadRuleClass;                                           // 0x09E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              NormalZMin;                                                // 0x09E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_M4OA[0x4];                                     // 0x09EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FKSSpreadList                               SpreadList;                                                // 0x09F0(0x0120) (Net, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                              MaxSpreadDistance;                                         // 0x0B10(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               PreventCollisionBeneathSpread;                             // 0x0B14(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GMBM[0x3];                                     // 0x0B15(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                SpreadTimerHandle;                                         // 0x0B18(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FTransform>                          QueuedTransforms;                                          // 0x0B20(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FVector>                             SpreadStartLocations;                                      // 0x0B30(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                SpreadProjectileCount;                                     // 0x0B40(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R739[0x4];                                     // 0x0B44(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AKSSpreadProjectile*>                 SpreadProjectiles;                                         // 0x0B48(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      SpreadProjectileToSpawn;                                   // 0x0B58(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpreadProjectileRotationMin;                               // 0x0B60(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpreadProjectileRotationMax;                               // 0x0B64(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SpreadProjectileHeight;                                    // 0x0B68(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B8XL[0x4];                                     // 0x0B6C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class AKSProjectile_GrenadeSpread>> ChildSpreadGrenades;                                       // 0x0B70(0x0010) (ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AKSProjectile_GrenadeSpread>  ParentSpreadGrenade;                                       // 0x0B80(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxHealthPerTransform;                                     // 0x0B88(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_90VF[0x4];                                     // 0x0B8C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<Killstreak_EDamageCategory>                 DamageTypeImmunities;                                      // 0x0B90(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SphereCollisionRadius;                                     // 0x0BA0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bExtinguishable;                                           // 0x0BA4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TL1G[0x3];                                     // 0x0BA5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      OverlapClassFilter;                                        // 0x0BA8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TEnumAsByte<Engine_EObjectTypeQuery>>       OverlapObjectTypes;                                        // 0x0BB0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      ToDestroyOnOverlap[0x10];                                  // 0x0BC0(0x0010) UNKNOWN PROPERTY: ArrayProperty
	bool                                               bUseDestroyOnOverlapList;                                  // 0x0BD0(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_K63Q[0x17];                                    // 0x0BD1(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LingerDuration;                                            // 0x0BE8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MHZG[0x4];                                     // 0x0BEC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AActor*>                              AffectedActors;                                            // 0x0BF0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class AActor*, struct FTimerHandle>           LingeringAffectedActors;                                   // 0x0C00(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FSO8[0x4];                                     // 0x0C50(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TickDamageAmount;                                          // 0x0C54(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      TickDamageClass;                                           // 0x0C58(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TickDamageFrequency;                                       // 0x0C60(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JLXN[0x4];                                     // 0x0C64(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSNavModifierComponent*                     KSNavModifierComponent;                                    // 0x0C68(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UParticleSystemComponent*>            ParticleSystemComponents;                                  // 0x0C70(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UDecalComponent*>                     DecalComponents;                                           // 0x0C80(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UMeshComponent*>                      MeshComponents;                                            // 0x0C90(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                             ParticleSystemTemplate;                                    // 0x0CA0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PreDeactivateTime;                                         // 0x0CA8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ParticleOcclusionRadius;                                   // 0x0CAC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                          DecalMaterial;                                             // 0x0CB0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DecalDepth;                                                // 0x0CB8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0IPN[0x4];                                     // 0x0CBC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UObject*                                     MeshAsset;                                                 // 0x0CC0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                           FriendlyMaterial;                                          // 0x0CC8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                           EnemyMaterial;                                             // 0x0CD0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MeshOutlineThickness;                                      // 0x0CD8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5SH3[0x4];                                     // 0x0CDC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      SkeletalAnimClass;                                         // 0x0CE0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_358B[0x8];                                     // 0x0CE8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  MeshTransform;                                             // 0x0CF0(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_U1UG[0x10];                                    // 0x0D20(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1609);
		return ptr;
	}



	void UnlinkFromParent();
	void SetTimeUntilNextTickDamageSeconds(float NewTimeUntilNextTickDamageSeconds);
	void RemoveChild(class AKSProjectile_GrenadeSpread* RemovingChildSpreadGrenade);
	void ProcessNextSpreadTransform();
	void OnSpreadTransformRemoved(const struct FTransform& RemovedTransform);
	void OnSpreadTransformAdded(const struct FTransform& AddedTransform);
	void OnSpreadTick();
	void OnSpreadProjectileStopped(const struct FHitResult& HitResult);
	void OnLingerEnd(class AActor* LingerActor);
	void OnDamageTick();
	void OnBeginLingering();
	void OnAllSpreadTransformsRemoved();
	void OnAffectedDestroyed(class AActor* AffectedActor);
	void OnActorUnaffected(class AActor* UnaffectedActor);
	void OnActorDamaged(class AActor* DamagedActor, float Amount);
	void OnActorAffected(class AActor* AffectedActor);
	void LinkToParent(class AKSProjectile_GrenadeSpread* NewParentSpreadGrenade);
	bool IsMasterSpreadGrenade();
	bool IsLingering();
	void GiveMasterPrivilegesToOther(class AKSProjectile_GrenadeSpread* NewMasterSpreadGrenade, float NewTimeUntilNextTickDamageSeconds, bool bPassSelf);
	struct FKSSpreadList GetSpreadList();
	TWeakObjectPtr<class AKSProjectile_GrenadeSpread> GetParentSpreadGrenade();
	TArray<TWeakObjectPtr<class AKSProjectile_GrenadeSpread>> GetChildSpreadGrenades();
	TArray<class AActor*> GetAllAffectedActors();
	TArray<class AActor*> GetAffectedActors();
	class AKSProjectile_GrenadeSpread* DetermineNextMasterSpreadGrenade();
	void ConfigureSpreadTransformParticleSystem(class UParticleSystemComponent* ParticleSystem);
	void ConfigureSpreadTransformDecal(class UDecalComponent* Decal);
	void CleanupParticleSystemComponents();
	void CleanupMeshComponents();
	void BeginLingering();
	void AddChild(class AKSProjectile_GrenadeSpread* NewChildSpreadGrenade);
};

// Class Killstreak.KSProjectile_MacGuffin
// 0x0008 (FullSize[0x0928] - InheritedSize[0x0920])
class AKSProjectile_MacGuffin : public AKSProjectile
{
public:
	bool                                               bAutomaticPickup;                                          // 0x0920(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_C8RK[0x7];                                     // 0x0921(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1610);
		return ptr;
	}



};

// Class Killstreak.KSProjectile_Melee
// 0x0018 (FullSize[0x0938] - InheritedSize[0x0920])
class AKSProjectile_Melee : public AKSProjectile
{
public:
	class UClass*                                      ProjectileDamageType;                                      // 0x0920(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                              HitActors;                                                 // 0x0928(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1611);
		return ptr;
	}



	void PredictDamage(float DeltaTime);
	void LookAheadHit(class AActor* HitActor, const struct FHitResult& HitResult);
	void GetIgnoredActors(TArray<class AActor*>* OutIgnoredActors);
	void FlushHitIgnoreActors();
	void AllowFutureHitOnActor(class AActor* PreviouslyHitActor);
};

// Class Killstreak.KSProjectile_Pierce
// 0x0038 (FullSize[0x0958] - InheritedSize[0x0920])
class AKSProjectile_Pierce : public AKSProjectile
{
public:
	float                                              ProjectileEdgeTolerance;                                   // 0x0920(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_ETraceTypeQuery>                TraceChannel;                                              // 0x0924(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_962T[0x3];                                     // 0x0925(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TEnumAsByte<Engine_EObjectTypeQuery>>       ObjectTypes;                                               // 0x0928(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDrawDebugLine;                                            // 0x0938(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L2ZO[0x7];                                     // 0x0939(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AActor*>                              AlreadyHitActors;                                          // 0x0940(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasHitWall;                                               // 0x0950(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasHitEnemy;                                              // 0x0951(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QF22[0x6];                                     // 0x0952(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1612);
		return ptr;
	}



};

// Class Killstreak.KSProjectile_ProximityGrenade
// 0x0010 (FullSize[0x09D8] - InheritedSize[0x09C8])
class AKSProjectile_ProximityGrenade : public AKSProjectile_Grenade
{
public:
	class UKSProximityComponent*                       ProximityComponent;                                        // 0x09C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bInitializeProximityCheckingOnStopped;                     // 0x09D0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_45EI[0x7];                                     // 0x09D1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1613);
		return ptr;
	}



	void ProximityActorUpdated(class AActor* Actor, class UPrimitiveComponent* Component, const struct FKSActorProximityInfo& ProximityInfo);
	struct FVector GetProximityTraceRelativeLocation();
	class UPrimitiveComponent* GetProximityComponent();
};

// Class Killstreak.KSProjectile_RemoteTrigger
// 0x0048 (FullSize[0x0A10] - InheritedSize[0x09C8])
class AKSProjectile_RemoteTrigger : public AKSProjectile_Grenade
{
public:
	unsigned char                                      UnknownData_5WMN[0x18];                                    // 0x09C8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               CanDetonateNow;                                            // 0x09E0(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCanDetonateBeforeStopping;                                // 0x09E1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PIIZ[0x6];                                     // 0x09E2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSPlayerMod*                                DetectionMod;                                              // 0x09E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_G0Z3[0x8];                                     // 0x09F0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bRequiresMatchingDetonator;                                // 0x09F8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LYKF[0x3];                                     // 0x09F9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     RelativeInteractionPoint;                                  // 0x09FC(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_A55V[0x1];                                     // 0x0A08(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               DetectedEnemy;                                             // 0x0A09(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5UNX[0x6];                                     // 0x0A0A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1614);
		return ptr;
	}



	void ReportOwningClientLoaded();
	void OnRealActorStopped(class AKSProjectile_RemoteTrigger* RealProjectile);
	bool IsDetonatable();
};

// Class Killstreak.KSProjectile_ReviveDart
// 0x0048 (FullSize[0x0968] - InheritedSize[0x0920])
class AKSProjectile_ReviveDart : public AKSProjectile
{
public:
	TWeakObjectPtr<class AKSCharacter>                 TargetCharacter;                                           // 0x0920(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_C48J[0x10];                                    // 0x0928(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ReviveTime;                                                // 0x0938(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WJZ7[0x4];                                     // 0x093C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSPlayerMod*                                TargetCharacterMod;                                        // 0x0940(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnSucceed;                                                 // 0x0948(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFailed;                                                  // 0x0958(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1615);
		return ptr;
	}



	void OnReviveEnd(class AKSCharacter* RevivingCharacter, bool SuccessfulRevive);
};

// Class Killstreak.KSProjectile_ZiplineAnchor
// 0x0030 (FullSize[0x0950] - InheritedSize[0x0920])
class AKSProjectile_ZiplineAnchor : public AKSProjectile
{
public:
	unsigned char                                      UnknownData_QUKV[0x20];                                    // 0x0920(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     ProjectileTarget;                                          // 0x0940(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_W9YX[0x4];                                     // 0x094C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1616);
		return ptr;
	}



};

// Class Killstreak.KSProjectileClusterComponent
// 0x0060 (FullSize[0x0110] - InheritedSize[0x00B0])
class UKSProjectileClusterComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_EQEN[0xC];                                     // 0x00B0(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Killstreak_EProjectileClusterSpreadType            ProjectileClusterSpreadType;                               // 0x00BC(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_I04P[0x3];                                     // 0x00BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     ClusterSegmentSpawnOffset;                                 // 0x00C0(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLinkSpreadGrenades;                                       // 0x00CC(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIgnoreZAxisForClusterDirection;                           // 0x00CD(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAlwaysUseInitialClusterDirection;                         // 0x00CE(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_J67I[0x1];                                     // 0x00CF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RandomMinPitch;                                            // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RandomMaxPitch;                                            // 0x00D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RandomMinYaw;                                              // 0x00D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RandomMaxYaw;                                              // 0x00DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FKSProjectileClusterSegment>         ClusterSegmentDefinitions;                                 // 0x00E0(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AKSProjectile*>                       ClusterSegments;                                           // 0x00F0(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnOwnedSegmentKilled;                                      // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1617);
		return ptr;
	}



	void OnSegmentKilled(class AKSProjectile* Segment);
	TArray<class AKSProjectile*> GetSpawnedSegments();
	struct FVector GetInitialClusterDirection();
	struct FTransform GetImpactRelativeSegmentTransform(const struct FHitResult& Hit, const struct FVector& PassThroughVector, const struct FVector& AdditionalOffset);
	struct FVector GetClusterSegmentSpawnOffset();
	TArray<struct FKSProjectileClusterSegment> GetClusterSegmentDefinitions();
	void CreateClusterSegments(const struct FHitResult& Hit, class AKSWeapon* WeaponUsed);
};

// Class Killstreak.KSProjectileMovementComponent
// 0x0030 (FullSize[0x0200] - InheritedSize[0x01D0])
class UKSProjectileMovementComponent : public UProjectileMovementComponent
{
public:
	struct FScriptMulticastDelegate                    OnProjectilePenetrated;                                    // 0x01D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FVector                                     PreStopVelocity;                                           // 0x01E0(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              LifetimeUponStop;                                          // 0x01EC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ProjectileVelocityDeflectDampener;                         // 0x01F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZKFZ[0xC];                                     // 0x01F4(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1619);
		return ptr;
	}



};

// Class Killstreak.KSProjWeaponTargetingModule
// 0x0024 (FullSize[0x0170] - InheritedSize[0x014C])
class UKSProjWeaponTargetingModule : public UKSDefaultAimTargetingModule
{
public:
	float                                              MaxSimTime;                                                // 0x014C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HDR2[0x20];                                    // 0x0150(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1620);
		return ptr;
	}



};

// Class Killstreak.KSProp_Physical
// 0x0018 (FullSize[0x0238] - InheritedSize[0x0220])
class AKSProp_Physical : public AActor
{
public:
	class UStaticMeshComponent*                        StaticMesh;                                                // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               CollisionAkEvent;                                          // 0x0228(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ImpactSoundThreshold;                                      // 0x0230(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DGJ8[0x4];                                     // 0x0234(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1621);
		return ptr;
	}



};

// Class Killstreak.KSProximityComponent
// 0x00B0 (FullSize[0x0160] - InheritedSize[0x00B0])
class UKSProximityComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnProximityInfoUpdated;                                    // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FKSProximityFilter                          ProximityFilter;                                           // 0x00C0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                              MaxTimeBetweenUpdates;                                     // 0x00E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<Engine_ECollisionChannel>              LOSChannel;                                                // 0x00E4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O74Z[0x3];                                     // 0x00E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class AActor*, struct FKSActorProximityInfo>  ActorProximityInfoMap;                                     // 0x00E8(0x0050) (Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5ISQ[0x18];                                    // 0x0138(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrimitiveComponent*                         RegisteredShape;                                           // 0x0150(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bProximityCheckingEnabled;                                 // 0x0158(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_524P[0x7];                                     // 0x0159(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1622);
		return ptr;
	}



	void UnregisterOverlapShape(class UPrimitiveComponent* OverlapShape);
	bool ShouldTrackActor(class AActor* InActor);
	void SetProximityTraceOffset(const struct FVector& Offset);
	void SetProximityFilter(const struct FKSProximityFilter& InProximityFilter);
	void SetProximityCheckingEnabled(bool Enabled);
	void RegisterOverlapShape(class UPrimitiveComponent* OverlapShape);
	void ProximityOverlapStart(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ProximityOverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnProximityActorDestroyed(class AActor* DestroyedActor);
};

// Class Killstreak.KSQueuesSettingsDefault
// 0x03A0 (FullSize[0x03C8] - InheritedSize[0x0028])
class UKSQueuesSettingsDefault : public UObject
{
public:
	TArray<struct FKSQueueRow>                         QueueConfigRow;                                            // 0x0028(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0G78[0x50];                                    // 0x0038(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FKSMapListRow>                       MapListBaseConfigRow;                                      // 0x0088(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P2W2[0x50];                                    // 0x0098(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FKSMapRow>                           MapBaseConfigRow;                                          // 0x00E8(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IY7M[0x50];                                    // 0x00F8(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FKSBonusProgressionRow>              BonusProgressionBaseConfigRow;                             // 0x0148(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UD2P[0x50];                                    // 0x0158(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FKSSurrenderRow>                     SurrenderBaseConfigRow;                                    // 0x01A8(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FQ9C[0x50];                                    // 0x01B8(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FKSQueueGroupRow>                    QueueGroupBaseConfigRow;                                   // 0x0208(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GHK0[0x50];                                    // 0x0218(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FKSRankedProgressionRow>             RankedProgressionBaseConfigRow;                            // 0x0268(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R5C0[0x50];                                    // 0x0278(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FKSLimitedTimeEventRow>              LimitedTimeEventBaseConfigRow;                             // 0x02C8(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WJ2M[0x50];                                    // 0x02D8(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FKSRankedSeasonRow>                  RankedSeasonBaseConfigRow;                                 // 0x0328(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9MZK[0x50];                                    // 0x0338(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             ActiveLimitedTimeEventNames;                               // 0x0388(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     ActiveRankedSeasonKey;                                     // 0x0398(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FKSQueueSectionSort>                 QueueSectionSortConfigRow;                                 // 0x03A8(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FKSQueuePlatformFilter>              QueuePlatformFilter;                                       // 0x03B8(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1626);
		return ptr;
	}



};

// Class Killstreak.KSQuip
// 0x0030 (FullSize[0x02E8] - InheritedSize[0x02B8])
class UKSQuip : public UKSRadialMenuItem
{
public:
	struct FName                                       OverriddenAudioEventName;                                  // 0x02B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      QuipAudioEvent[0x28];                                      // 0x02C0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1627);
		return ptr;
	}



};

// Class Killstreak.KSQuipInstance
// 0x0010 (FullSize[0x02D8] - InheritedSize[0x02C8])
class AKSQuipInstance : public AKSRadialMenuItemInstance
{
public:
	Killstreak_EKSVoicelineAudience                    VoicelineAudience;                                         // 0x02C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4BDH[0x3];                                     // 0x02C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                QuipCooldownGroup;                                         // 0x02CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              QuipCooldownDuration;                                      // 0x02D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QSX2[0x4];                                     // 0x02D4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1628);
		return ptr;
	}



};

// Class Killstreak.KSRadialMenuManager
// 0x0020 (FullSize[0x00D0] - InheritedSize[0x00B0])
class UKSRadialMenuManager : public UActorComponent
{
public:
	class AKSPlayerController*                         CachedOwner;                                               // 0x00B0(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bThrottleQuipsAndComms;                                    // 0x00B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KMDI[0x3];                                     // 0x00B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                QuipsAndCommsAllowedBeforeThrottle;                        // 0x00BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              QuipAndCommThrottleDetectionPeriod;                        // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              QuipAndCommThrottleCooldown;                               // 0x00C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                CurrentQuipsAndCommsBeforeThrottle;                        // 0x00C8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bQuipsAndCommsCurrentlyThrottled;                          // 0x00CC(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H8AX[0x3];                                     // 0x00CD(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1629);
		return ptr;
	}



	bool IsThrottled(Killstreak_EMercCosmeticSlot CosmeticSlot);
	void IncreaseUseCount(Killstreak_EMercCosmeticSlot CosmeticSlot);
	void EndThrottle(Killstreak_EMercCosmeticSlot CosmeticSlot);
	void DecreaseUseCount(Killstreak_EMercCosmeticSlot CosmeticSlot);
};

// Class Killstreak.KSRankedManager
// 0x0000 (FullSize[0x0210] - InheritedSize[0x0210])
class UKSRankedManager : public UKSActivityManagerBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1630);
		return ptr;
	}



	int GetRequiredPlacementMatches(const struct FString& SeasonKey);
	bool GetRankedSeasonKeyForQueue(int QueueId, struct FString* OutKey);
	int GetAllowedPartyRankRange(const struct FString& SeasonKey);
};

// Class Killstreak.KSRefillZone
// 0x0130 (FullSize[0x0350] - InheritedSize[0x0220])
class AKSRefillZone : public AActor
{
public:
	unsigned char                                      UnknownData_A0BU[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagQuery                           ReequipWeaponsTypeQuery;                                   // 0x0228(0x0048) (Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                           ReloadWeaponsTypeQuery;                                    // 0x0270(0x0048) (Edit, NativeAccessSpecifierPublic)
	int                                                AbilityChargeToRestore;                                    // 0x02B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HealthToRestore;                                           // 0x02BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRefundAllShopPurchases;                                   // 0x02C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SQBX[0x3];                                     // 0x02C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InteractTime;                                              // 0x02C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      InteractionType;                                           // 0x02C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	Killstreak_EKSInteractableGroup                    InteractableGroup;                                         // 0x02D0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2741[0x3];                                     // 0x02D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       InteractionMode;                                           // 0x02D4(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bCanInteractFromBehind;                                    // 0x02DC(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bForceLOS;                                                 // 0x02DD(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5GXJ[0x2];                                     // 0x02DE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       InteractPromptText;                                        // 0x02E0(0x0018) (Edit, NativeAccessSpecifierPrivate)
	unsigned char                                      CurrentZoneUsers[0x50];                                    // 0x02F8(0x0050) UNKNOWN PROPERTY: SetProperty
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                 // 0x0348(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1631);
		return ptr;
	}



};

// Class Killstreak.KSRemoteReviverInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSRemoteReviverInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1634);
		return ptr;
	}



};

// Class Killstreak.KSResourceManagerComponent
// 0x0180 (FullSize[0x0230] - InheritedSize[0x00B0])
class UKSResourceManagerComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnResourceAddedDel;                                        // 0x00B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnResourceRemovedDel;                                      // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnResourceValueChangedDel;                                 // 0x00D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnResourceFilledDel;                                       // 0x00E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnResourceDepletedDel;                                     // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FKSResourceInfo>                     StartingResources;                                         // 0x0100(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKSResourceInfoSerializerContainer          ActiveResourceInfoContainer;                               // 0x0110(0x0120) (Net, Transient, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1635);
		return ptr;
	}



	bool SpendResource(const struct FName& InResourceKeyName, float InSpentAmount);
	bool SetResource(const struct FName& InResourceKeyName, float InSetAmount);
	void Server_RemoveResource(const struct FName& InResourceKeyName);
	void Server_ForceUpdateResource(const struct FName& InResourceKeyName);
	void Server_AddNewResource(const struct FKSResourceInfo& InResourceInfo);
	void RequestServerForceUpdateResource(const struct FName& InResourceKeyName);
	void RemoveResource(const struct FName& InResourceKeyName);
	bool HasResource(const struct FName& InResourceKeyName);
	bool HasAmountOfResource(const struct FName& InResourceKeyName, float CheckAmount);
	bool GiveResource(const struct FName& InResourceKeyName, float InGivenAmount);
	float GetResourceValue(const struct FName& InResourceKeyName);
	void GetResourceInfo(const struct FName& InResourceKeyName, struct FKSResourceInfo* OutResourceInfo);
	float GetResourceFillPercent(const struct FName& InResourceKeyName);
	bool FillResource(const struct FName& InResourceKeyName);
	bool DepleteResource(const struct FName& InResourceKeyName);
	void AddNewResource(const struct FKSResourceInfo& InResourceInfo);
};

// Class Killstreak.KSRevealable
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSRevealable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1636);
		return ptr;
	}



	void BPI_UnrevealObject();
	void BPI_RevealObject(const struct FLinearColor& NewRevealColor);
	bool BPI_IsRevealed();
	bool BPI_IsHiddenFromReveals();
	float BPI_GetRevealTimeMultiplier();
};

// Class Killstreak.KSRevealManager
// 0x01C8 (FullSize[0x03E8] - InheritedSize[0x0220])
class AKSRevealManager : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnServerRevealAdded;                                       // 0x0220(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FLinearColor                                FriendlyColor;                                             // 0x0230(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                EnemyColor;                                                // 0x0240(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                NeutralColor;                                              // 0x0250(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                FriendlyObjectiveColor;                                    // 0x0260(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                EnemyObjectiveColor;                                       // 0x0270(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                NeutralObjectiveColor;                                     // 0x0280(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AKSGameState*                                GameStateRef;                                              // 0x0290(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKSRevealInfoSerializerContainer            ActiveRevealInfoContainer;                                 // 0x0298(0x0120) (Net, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FKSRevealInfo>                       LocalActiveRevealInfos;                                    // 0x03B8(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UCF8[0x20];                                    // 0x03C8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1637);
		return ptr;
	}



	void SetGameStateRef(class AKSGameState* NewGameState);
	void ReevaluateRevealedStatusForActor(class AActor* ActorToCheck);
	void Local_RemoveAllRevealsOfSourceForActor(Killstreak_EKSRevealSource RevealSourcesToRemove, class AActor* ActorToRemove);
	void Local_RemoveAllRevealsOfActor(class AActor* ActorToRemove);
	void Local_AddRevealInfo(const struct FKSRevealInfo& NewRevealInfo, float RevealTimeSeconds, float RevealDelaySeconds);
	bool HasMatchingRevealInfo(class AActor* RevealedActor, class AKSPlayerState* Revealer, Killstreak_EKSRevealSource RevealSource);
	void HandOffReveals(class AKSPlayerState* OriginalRevealer, class AKSPlayerState* NewRevealer);
	class AKSGameState* GetGameStateRef();
	TArray<class AKSPlayerState*> GetAllRevealersForRevealedActor(class AActor* RevealedActor, bool bIncludeSelfOnlyReveals);
	void DetermineRevealParameters(class AActor* RevealTargetToCheck, class AKSPlayerState* PlayerStateToCheck, bool* bRevealTargetToPlayer, struct FLinearColor* OutRevealColor, bool* bShowPlayerRevealedUI, bool* bShowEnemyDetectedUI);
	void Authority_RequestReevaluateRevealedStatusForAllActorsOnAllClients();
	void Authority_RequestReevaluateRevealedStatusForActorOnAllClients(class AActor* ActorToCheck);
	void Authority_RemoveRevealInfo(const struct FKSRevealInfo& RevealInfoToRemove);
	void Authority_RemoveAllRevealsOfSourceForPlayer(Killstreak_EKSRevealSource RevealSourcesToRemove, class AKSPlayerState* PlayerStateToRemove);
	void Authority_RemoveAllRevealsOfActorForInstigator(class AActor* ActorToRemove, class UObject* OwningInstigator);
	void Authority_RemoveAllRevealsOfActorAtPriority(class AActor* ActorToRemove, Killstreak_EKSRevealPriority MaxRemovePriority);
	void Authority_RemoveAllRevealsOfActor(class AActor* ActorToRemove);
	void Authority_RemoveAllRevealsForPlayerById(const struct FKSPersistentPlayerId& PlayerId);
	void Authority_RemoveAllRevealsForPlayer(class AKSPlayerState* PlayerStateToRemove);
	void Authority_RemoveAllRevealsForInstigator(class UObject* OwningInstigator);
	void Authority_AddRevealInfo(const struct FKSRevealInfo& NewRevealInfo, float RevealTimeSeconds, float RevealDelaySeconds);
};

// Class Killstreak.KsReverbVolume
// 0x0000 (FullSize[0x0290] - InheritedSize[0x0290])
class AKsReverbVolume : public AAkReverbVolume
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1638);
		return ptr;
	}



};

// Class Killstreak.KSWeapon_Projectile
// 0x0008 (FullSize[0x0870] - InheritedSize[0x0868])
class AKSWeapon_Projectile : public AKSWeapon_Aimed
{
public:
	unsigned char                                      UnknownData_N76O[0x8];                                     // 0x0868(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1728);
		return ptr;
	}



	void OnFullyCooked();
	struct FName GetProjectileInfoKey();
};

// Class Killstreak.KSWeapon_GrenadeThrow
// 0x0038 (FullSize[0x08A8] - InheritedSize[0x0870])
class AKSWeapon_GrenadeThrow : public AKSWeapon_Projectile
{
public:
	unsigned char                                      UnknownData_59F2[0x18];                                    // 0x0870(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnGrenadeThrown;                                           // 0x0888(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UOJ1[0x10];                                    // 0x0898(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1729);
		return ptr;
	}



	void OnFuseTimerExpired(float MinHandRemainingFuse);
	void DoFumble();
};

// Class Killstreak.KSWeapon_MacGuffin
// 0x0010 (FullSize[0x0878] - InheritedSize[0x0868])
class AKSWeapon_MacGuffin : public AKSWeapon_Aimed
{
public:
	bool                                               bDropOffSuccess;                                           // 0x0868(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHasBeenDropped;                                           // 0x0869(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NQ56[0x2];                                     // 0x086A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DropThrowSpeed;                                            // 0x086C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DropPositionOffset;                                        // 0x0870(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_K0ZA[0x4];                                     // 0x0874(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1730);
		return ptr;
	}



};

// Class Killstreak.KSWeapon_Melee
// 0x0098 (FullSize[0x0900] - InheritedSize[0x0868])
class AKSWeapon_Melee : public AKSWeapon_Aimed
{
public:
	struct FScriptMulticastDelegate                    OnMeleeHit;                                                // 0x0868(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T1GH[0x18];                                    // 0x0878(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnProjectileSpawned;                                       // 0x0890(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GDMD[0x20];                                    // 0x08A0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSProjectile*                               Projectile;                                                // 0x08C0(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AKSProjectile*                               FakeProjectile;                                            // 0x08C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSWeaponAsset_Melee*                        MeleeWeaponAsset;                                          // 0x08D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bMeleeSwinging;                                            // 0x08D8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_U1E4[0x7];                                     // 0x08D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                MeleeSwingingTimerHandle;                                  // 0x08E0(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AActor>>               DamagedTargetsInSwing;                                     // 0x08E8(0x0010) (ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsInQuickMelee;                                           // 0x08F8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_I13O[0x7];                                     // 0x08F9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1731);
		return ptr;
	}



	bool ShouldThrowWeapon();
	void OnRep_Projectile();
	void OnOwnerAimStateChanged(Killstreak_EKSCharacterAimMode WeaponStateChange);
	void OnLungingChanged(bool Lunging);
	void JumpToFire(Killstreak_EWeaponStateNew PreviousState);
	void IncPrefireSkipWindow();
	class AKSProjectile* GetProjectile();
	void EndMeleeSwing();
	void BeginMeleeSwing();
};

// Class Killstreak.KSWeapon_Proximity
// 0x0068 (FullSize[0x0790] - InheritedSize[0x0728])
class AKSWeapon_Proximity : public AKSWeapon
{
public:
	class UClass*                                      ProximityComponentClass;                                   // 0x0728(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSProximityComponent*                       ProximityComponent;                                        // 0x0730(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCacheProximityActorsWhileFiring;                          // 0x0738(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bProximityActiveOnlyInHand;                                // 0x0739(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R97J[0x6];                                     // 0x073A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AActor*>                              ProximityActors;                                           // 0x0740(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                              CachedProximityActors;                                     // 0x0750(0x0010) (Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UPrimitiveComponent*>                 ProximityComponents;                                       // 0x0760(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UPrimitiveComponent*>                 CachedProximityComponents;                                 // 0x0770(0x0010) (ExportObject, Net, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnCachedProximityActorsUpdatedDel;                         // 0x0780(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1732);
		return ptr;
	}



	void ProximityActorUpdated(class AActor* Actor, class UPrimitiveComponent* Component, const struct FKSActorProximityInfo& ProximityInfo);
	void OnCachedProximityActorsUpdated();
	struct FVector GetProximityTraceRelativeLocation();
	class UPrimitiveComponent* GetProximityComponent();
	TArray<class AActor*> GetCachedProximityActors();
};

// Class Killstreak.KSWeapon_RemoteRocket
// 0x0040 (FullSize[0x0768] - InheritedSize[0x0728])
class AKSWeapon_RemoteRocket : public AKSWeapon
{
public:
	float                                              CameraBlendTime;                                           // 0x0728(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TEnumAsByte<Engine_EViewTargetBlendFunction>       CameraBlendFunction;                                       // 0x072C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XLXY[0x3];                                     // 0x072D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CameraBlendExp;                                            // 0x0730(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               CameraLockOutgoing;                                        // 0x0734(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_A24N[0x3];                                     // 0x0735(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PostDestroyDelay;                                          // 0x0738(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O1RU[0x4];                                     // 0x073C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      RemoteRocketToSpawn;                                       // 0x0740(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     RemoteRocketRelativeLocation;                              // 0x0748(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NEHX[0x4];                                     // 0x0754(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSRocket*                                   SpawnedRemoteRocket;                                       // 0x0758(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AController*                                 RocketController;                                          // 0x0760(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1733);
		return ptr;
	}



	void OnRocketDestroyed(class AActor* RocketActor);
	void OnPostDestroyDelayComplete();
	class AKSRocket* GetSpawnedRocket();
	struct FTransform GetRocketSpawnWorldTransform();
};

// Class Killstreak.KSWeapon_RemoteThrow
// 0x0030 (FullSize[0x08D8] - InheritedSize[0x08A8])
class AKSWeapon_RemoteThrow : public AKSWeapon_GrenadeThrow
{
public:
	struct FScriptMulticastDelegate                    OnDetonatorEquipped;                                       // 0x08A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IZCJ[0x10];                                    // 0x08B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponAsset*                              DetonatorAsset;                                            // 0x08C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ReadyForDetonator;                                         // 0x08D0(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FWE5[0x7];                                     // 0x08D1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1734);
		return ptr;
	}



	void SwapToDetonator();
	void OnProjectileReleased();
	void OnAttachedChargeDestroyed(class AActor* DestroyedCharge);
	void GetAttachedCharges(TArray<class AKSProjectile_RemoteTrigger*>* OutCharges);
};

// Class Killstreak.KSWeapon_RemoteThrowAndTrigger
// 0x0010 (FullSize[0x08E8] - InheritedSize[0x08D8])
class AKSWeapon_RemoteThrowAndTrigger : public AKSWeapon_RemoteThrow
{
public:
	bool                                               bUseSequentialDetonation;                                  // 0x08D8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZVW9[0x3];                                     // 0x08D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       AltFireSubWeaponName;                                      // 0x08DC(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N9XU[0x4];                                     // 0x08E4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1735);
		return ptr;
	}



};

// Class Killstreak.KSWeapon_RemoteTrigger
// 0x0060 (FullSize[0x0788] - InheritedSize[0x0728])
class AKSWeapon_RemoteTrigger : public AKSWeapon
{
public:
	struct FScriptMulticastDelegate                    OnRemoteThrowEquipped;                                     // 0x0728(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_828A[0x20];                                    // 0x0738(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class AKSProjectile_RemoteTrigger>> AttachedCharges;                                           // 0x0758(0x0010) (Net, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxDetonationRange;                                        // 0x0768(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EPWE[0x4];                                     // 0x076C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnDetonationReady;                                         // 0x0770(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UKSWeaponAsset>               RemoteThrowAsset;                                          // 0x0780(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1736);
		return ptr;
	}



	void SwapOffDetonator();
	void OnAttachedChargeKilled(class AKSProjectile* KilledProjectile);
	void OnAttachedChargeDestroyed(class AActor* DestroyedCharge);
	void GetAttachedCharges(TArray<class AKSProjectile_RemoteTrigger*>* OutCharges);
	void Detonate();
};

// Class Killstreak.KSWeapon_RemoteVehicle
// 0x0048 (FullSize[0x0770] - InheritedSize[0x0728])
class AKSWeapon_RemoteVehicle : public AKSWeapon
{
public:
	class UClass*                                      RemoteVehicleToSpawn;                                      // 0x0728(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTransform                                  RemoteVehicleRelativeTransform;                            // 0x0730(0x0030) (Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class AKSVehicle_Remote*                           SpawnedRemoteVehicle;                                      // 0x0760(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UEKE[0x8];                                     // 0x0768(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1737);
		return ptr;
	}



	void VehicleDestroyed();
};

// Class Killstreak.KSWeapon_ReviveDirect
// 0x0000 (FullSize[0x0740] - InheritedSize[0x0740])
class AKSWeapon_ReviveDirect : public AKSWeapon_DirectTarget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1738);
		return ptr;
	}



};

// Class Killstreak.KSWeapon_ReviveDartDirect
// 0x0028 (FullSize[0x0768] - InheritedSize[0x0740])
class AKSWeapon_ReviveDartDirect : public AKSWeapon_ReviveDirect
{
public:
	TWeakObjectPtr<class AKSProjectile_ReviveDart>     DartProjectile;                                            // 0x0740(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnSucceed;                                                 // 0x0748(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFailed;                                                  // 0x0758(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1739);
		return ptr;
	}



	void OnReviveSucceed();
	void OnReviveFailed();
};

// Class Killstreak.KSWeapon_Targeted
// 0x0040 (FullSize[0x0768] - InheritedSize[0x0728])
class AKSWeapon_Targeted : public AKSWeapon
{
public:
	struct FScriptMulticastDelegate                    DisplayTargetList;                                         // 0x0728(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    TargetSelectCancelled;                                     // 0x0738(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class AActor*>                              PotentialTargets;                                          // 0x0748(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               SelectTargetOnRetrieve;                                    // 0x0758(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_V4QS[0x3];                                     // 0x0759(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AActor>                       TargetedActor;                                             // 0x075C(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N3K9[0x4];                                     // 0x0764(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1740);
		return ptr;
	}



	bool TargetCurrentlyValid(class AActor* TestTarget);
	void SubmitTargetedActor(class AActor* TargetActor);
	void ConfirmTargetSelection(class AActor* TargetActor);
	void CancelTargetSelection();
};

// Class Killstreak.KSWeapon_ReviveDrone
// 0x0010 (FullSize[0x0778] - InheritedSize[0x0768])
class AKSWeapon_ReviveDrone : public AKSWeapon_Targeted
{
public:
	class UClass*                                      DroneClass;                                                // 0x0768(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AKSAgent_RevivalDrone>        DroneActor;                                                // 0x0770(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1741);
		return ptr;
	}



};

// Class Killstreak.KSWeapon_ReviveDroneDirect
// 0x0080 (FullSize[0x07C0] - InheritedSize[0x0740])
class AKSWeapon_ReviveDroneDirect : public AKSWeapon_ReviveDirect
{
public:
	struct FScriptMulticastDelegate                    OnDroneReviveBegin;                                        // 0x0740(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDroneReviveComplete;                                     // 0x0750(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDroneAbort;                                              // 0x0760(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDroneTargetRevive;                                       // 0x0770(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDroneTargetDied;                                         // 0x0780(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDroneDestroyed;                                          // 0x0790(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDroneSpawned;                                            // 0x07A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UClass*                                      DroneClass;                                                // 0x07B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AKSAgent_RevivalDrone>        DroneActor;                                                // 0x07B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1742);
		return ptr;
	}



	void OnRep_DroneActor();
	void OnDroneDestroy(class AActor* SupposedDroneActor);
	void OnDroneAborted();
	void GetDesiredSpawnLocationAndRotation(struct FVector* OutLocation, struct FRotator* OutRotation);
};

// Class Killstreak.KSSeasonalEventLoader
// 0x0080 (FullSize[0x02A0] - InheritedSize[0x0220])
class AKSSeasonalEventLoader : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnFinishedSublevelLoadEvent;                               // 0x0220(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<struct FString, struct FSeasonalSublevels>    SeasonalEventNamesAndSublevels;                            // 0x0230(0x0050) (Edit, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PHYF[0x20];                                    // 0x0280(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1655);
		return ptr;
	}



	bool IsAnySeasonalEventActive();
};

// Class Killstreak.KSSeasonalItem
// 0x0000 (FullSize[0x0270] - InheritedSize[0x0270])
class UKSSeasonalItem : public UKSLootItem
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1656);
		return ptr;
	}



};

// Class Killstreak.KSSeasonalItemSpawnLocation
// 0x0028 (FullSize[0x0248] - InheritedSize[0x0220])
class AKSSeasonalItemSpawnLocation : public AActor
{
public:
	class USceneComponent*                             SceneRootComponent;                                        // 0x0220(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4POF[0x10];                                    // 0x0228(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnSpawnLocationCleared;                                    // 0x0238(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1657);
		return ptr;
	}



	void SpawnedActorDestroyed(class AActor* DestroyedActor);
};

// Class Killstreak.KSVOPriorityManager
// 0x0018 (FullSize[0x00C8] - InheritedSize[0x00B0])
class UKSVOPriorityManager : public UActorComponent
{
public:
	Killstreak_EKSVoiceOverPriority                    AnnouncerSquelchThreshold;                                 // 0x00B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EKSVoiceOverPriority                    AnnouncerDuckThreshold;                                    // 0x00B1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EKSVoiceOverPriority                    CharacterSquelchThreshold;                                 // 0x00B2(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EKSVoiceOverPriority                    CharacterDuckThreshold;                                    // 0x00B3(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1L94[0x4];                                     // 0x00B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FPriorityVoiceLine>                  PlayingLines;                                              // 0x00B8(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1719);
		return ptr;
	}



};

// Class Killstreak.KSWeaponAttachmentSkinDetails
// 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
class UKSWeaponAttachmentSkinDetails : public UPrimaryDataAsset
{
public:
	unsigned char                                      Weapon[0x28];                                              // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      AttachmentCosmetic[0x28];                                  // 0x0058(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	TArray<struct FDataTableInfo>                      AssetOverrideTables;                                       // 0x0080(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1770);
		return ptr;
	}



};

// Class Killstreak.KSWeaponCategoryAsset
// 0x0168 (FullSize[0x0200] - InheritedSize[0x0098])
class UKSWeaponCategoryAsset : public UItemCollection
{
public:
	struct FGameplayTag                                CategoryTag;                                               // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                                WrapTag;                                                   // 0x00A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bExcludeUpgrades;                                          // 0x00A8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bRequireItemId;                                            // 0x00A9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O84X[0x6];                                     // 0x00AA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       DisplayName;                                               // 0x00B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       DisplayNameSingular;                                       // 0x00C8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       DisplayNameCategory;                                       // 0x00E0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      SoftSymbolIcon[0x28];                                      // 0x00F8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      SoftFlatSymbolIcon[0x28];                                  // 0x0120(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      SoftMasteryIcon[0x28];                                     // 0x0148(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      SoftVerticalSplash[0x28];                                  // 0x0170(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      SoftHorizontalSplash[0x28];                                // 0x0198(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	bool                                               ShowsMasteryUI;                                            // 0x01C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ShowsWeaponUnlockUI;                                       // 0x01C1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ShowsRelatedJobsUI;                                        // 0x01C2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UYOK[0x15];                                    // 0x01C3(0x0015) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      DefaultPreviewWeapon[0x28];                                // 0x01C3(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1771);
		return ptr;
	}



	struct FGameplayTag GetWrapTag();
	void GetWeaponsForCategory();
	void GetVerticalSplash();
	void GetSymbolIcon();
	bool GetShowsWeaponUnlockUI();
	bool GetShowsRelatedJobsUI();
	bool GetShowsMasteryUI();
	void GetMasteryIcon();
	void GetHorizontalSplash();
	void GetFlatSymbolIcon();
	struct FText GetDisplayNameSingular();
	struct FText GetDisplayNameCategory();
	struct FText GetDisplayName();
	class UKSWeaponAsset* GetDefaultPreviewWeapon();
	struct FGameplayTag GetCategoryTag();
};

// Class Killstreak.KSWeaponComponent
// 0x0518 (FullSize[0x0638] - InheritedSize[0x0120])
class UKSWeaponComponent : public UKSEquipmentCosmeticComponent
{
public:
	unsigned char                                      UnknownData_JF5Y[0x8];                                     // 0x0120(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Killstreak_EWeaponComponentTickType                WeaponComponentTickType;                                   // 0x0128(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowTickingOnItemDropActor;                              // 0x0129(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      ForcedWeaponLODWhenLocallyViewed;                          // 0x012A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bForceResidentFlagOnWeaponTextures;                        // 0x012B(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowAnimationAsItemDrop;                                 // 0x012C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Killstreak_EWeaponStateNew                         WeaponState;                                               // 0x012D(0x0001) (Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	Killstreak_EWeaponStateNew                         InitialState;                                              // 0x012E(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8JB7[0x1];                                     // 0x012F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponAsset*                              WeaponAsset;                                               // 0x0130(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bPendingFire;                                              // 0x0138(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      InitialAmmoInClip;                                         // 0x0139(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      AmmoInClip;                                                // 0x013A(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bInitializationStarted;                                    // 0x013B(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bInitializationCompleted;                                  // 0x013C(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DTCQ[0x3];                                     // 0x013D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnAmmoChangedDel;                                          // 0x0140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ERJA[0x18];                                    // 0x0150(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnFireRateChangedDel;                                      // 0x0168(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XONU[0x8];                                     // 0x0178(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnWeaponComponentInitializationCompletedDel;               // 0x0180(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K7I9[0x19];                                    // 0x0190(0x0019) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bCachedWeaponVisibility;                                   // 0x01A9(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TKTD[0x2];                                     // 0x01AA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MeshMaxDrawDistance;                                       // 0x01AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUseMaxDistForCharacterOwnedWeapons;                       // 0x01B0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHideAncillaryMagazine;                                    // 0x01B1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_H6G7[0x2];                                     // 0x01B2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                AncillaryMagazineIndex;                                    // 0x01B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsGrenade;                                                // 0x01B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsesHeavyGadget;                                          // 0x01B9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BJY3[0x2];                                     // 0x01BA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       MeleeComboTarget;                                          // 0x01BC(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               FlaggedForThrownMelee;                                     // 0x01C4(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	Killstreak_EWeaponComponentAttachmentType          WeaponAttachType;                                          // 0x01C5(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XTJA[0x2];                                     // 0x01C6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMesh*                               SkeletalMesh;                                              // 0x01C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPhysicsAsset*                               PhysicsAsset;                                              // 0x01D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       WeaponSkeletalMeshCollisionProfileName;                    // 0x01D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bLoadWeaponSkeletalMeshComponentOnServer;                  // 0x01E0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BAUH[0x7];                                     // 0x01E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               ActiveRequiredDedicatedServerCharacterBoneNames;           // 0x01E8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	Engine_EVisibilityBasedAnimTickOption              MeshComponentVisibilityBasedAnimTickOption;                // 0x01F8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowMeshCompositing;                                     // 0x01F9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Z058[0x6];                                     // 0x01FA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMesh*                               ScopeMesh;                                                 // 0x0200(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                                ScopeAttachmentTag;                                        // 0x0208(0x0008) (Edit, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMesh*                               MagazineMesh;                                              // 0x0210(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                                MagazineAttachmentTag;                                     // 0x0218(0x0008) (Edit, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMesh*                               StockMesh;                                                 // 0x0220(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                                StockAttachmentTag;                                        // 0x0228(0x0008) (Edit, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMesh*                               SilencerMesh;                                              // 0x0230(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                                SilencerAttachmentTag;                                     // 0x0238(0x0008) (Edit, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMesh*                               GripMesh;                                                  // 0x0240(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                                GripAttachmentTag;                                         // 0x0248(0x0008) (Edit, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               KeywordsForCompositingMesh;                                // 0x0250(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       BaseMeshOverrideKeyword;                                   // 0x0260(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       MeshNeedsCPUAccessKeyword;                                 // 0x0268(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       PhysicsAssetOverrideKeyword;                               // 0x0270(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      AnimInstance;                                              // 0x0278(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       AnimInstanceOverrideKeyword;                               // 0x0280(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       EquipSocketOverride;                                       // 0x0288(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSWeaponSkeletalMeshComponent*              WeaponSkeletalMeshComponent;                               // 0x0290(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UKSWeaponSkeletalMeshComponent> PropWeaponSkeletalMeshComponent;                           // 0x0298(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHideOnCreation;                                           // 0x02A0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDuplicate;                                                // 0x02A1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_47QS[0x2];                                     // 0x02A2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       DuplicateSocket;                                           // 0x02A4(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BUC5[0x4];                                     // 0x02AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponSkeletalMeshComponent*              DuplicateSkeletalMeshComponent;                            // 0x02B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bWeaponLoweringEnabled;                                    // 0x02B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S22K[0x3];                                     // 0x02B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       CharacterRightShoulderBoneName;                            // 0x02BC(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       CharacterRightElbowBoneName;                               // 0x02C4(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       CharacterLeftShoulderBoneName;                             // 0x02CC(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       CharacterLeftElbowBoneName;                                // 0x02D4(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       CharacterChestBoneName;                                    // 0x02DC(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       WeaponBarrelBoneName;                                      // 0x02E4(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WeaponLowerSphereTraceRadius;                              // 0x02EC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WeaponLowerTestDistanceAdjustment;                         // 0x02F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4Z0W[0x4];                                     // 0x02F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FAncillaryWeaponMeshInfo>            AncillaryMeshData;                                         // 0x02F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WeaponLowerViewDotThreshold;                               // 0x0308(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bResetLocked;                                              // 0x030C(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NM9D[0x3];                                     // 0x030D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint32_t                                           NextBroadcastId;                                           // 0x0310(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32_t                                           LastBroadcastReceived;                                     // 0x0314(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class USkeletalMeshComponent*>              AncillaryMeshes;                                           // 0x0318(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bPreventRetreive;                                          // 0x0328(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceDisableLHIK;                                         // 0x0329(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAttachHandWhileSprinting;                                 // 0x032A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAttachHandWhileMoving;                                    // 0x032B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAttachHandWhileCrouching;                                 // 0x032C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAttachHandMelee;                                          // 0x032D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAttachHandWhileIdle;                                      // 0x032E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAttachHandWhileZiplining;                                 // 0x032F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceAttachHandIfNotNonCom;                               // 0x0330(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceDisableRHIK;                                         // 0x0331(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAttachRightHand;                                          // 0x0332(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAttachRightHandWhileZiplining;                            // 0x0333(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasMirroredReloadAnim;                                    // 0x0334(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasMirroredQuickReloadAnim;                               // 0x0335(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHasMirroredFireAnim;                                      // 0x0336(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReplicateWeaponStateAsVariable;                           // 0x0337(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bForceBroadcastAllWeaponStateChanges;                      // 0x0338(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bForceReliableWeaponStateBroadcast;                        // 0x0339(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ISEV[0x2];                                     // 0x033A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ShotsFiredSinceLastReload;                                 // 0x033C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFirstReload;                                              // 0x0340(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldBroadcastEmptyFire;                                 // 0x0341(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldReliablyBroadcastEmptyFire;                         // 0x0342(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldReliablyBroadcastAmmoChanges;                       // 0x0343(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HNAS[0x4];                                     // 0x0344(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnWeaponComponentStateChangedDel;                          // 0x0348(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CIRS[0x18];                                    // 0x0358(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bIsInAction;                                               // 0x0370(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bNonComUseLimitedMovement;                                 // 0x0371(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bComUseLimitedMovement;                                    // 0x0372(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEngUseLimitedMovement;                                    // 0x0373(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bEnableTurnInPlaceForAOS;                                  // 0x0374(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IE01[0x3];                                     // 0x0375(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    ZoomFOVChanged;                                            // 0x0378(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	Killstreak_EKSCharacterAimMode                     CachedAimMode;                                             // 0x0388(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RFJ5[0x3];                                     // 0x0389(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DefaultAimCameraTransitionTime;                            // 0x038C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AimOverShoulderCameraTransitionTime;                       // 0x0390(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AimDownSightsCameraTransitionTime;                         // 0x0394(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnWeaponComponentAimModeChangedDel;                        // 0x0398(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S2OO[0x38];                                    // 0x03A8(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UKSWeaponAttachmentCosmeticInst*>     AttachmentCosmetics;                                       // 0x03E0(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	Killstreak_ESkinObjectParentingType                SkinObjectParenting;                                       // 0x03F0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6GIQ[0x3];                                     // 0x03F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ActiveIndex;                                               // 0x03F4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnEquipmentBecomeActiveDel;                                // 0x03F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2ZZ1[0x18];                                    // 0x0408(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnEquipmentEndActiveDel;                                   // 0x0420(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Y7OQ[0x28];                                    // 0x0430(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                ActiveReloadMontage;                                       // 0x0458(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                ActiveWeaponReloadMontage;                                 // 0x0460(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMultiStageReload;                                         // 0x0468(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSpeedloaded;                                              // 0x0469(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               PostReloadTimerIsActive;                                   // 0x046A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               EnableAimsDuringReload;                                    // 0x046B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShieldIsActive;                                           // 0x046C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MY4T[0x3];                                     // 0x046D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       MuzzleSocketKeyword;                                       // 0x0470(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CRYA[0x30];                                    // 0x0478(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               ApparelObjectsToListenTo;                                  // 0x04A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FDataTableInfo>                      BaseAssetDataTables;                                       // 0x04B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCreateDataTableForLegacyAssets;                           // 0x04C8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TXUC[0x7];                                     // 0x04C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDynamicSkinTable*                           AssetDataTableManager;                                     // 0x04D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMultiSkinObject*                            SkinObject;                                                // 0x04D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSkinObjectAdded;                                          // 0x04E0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HUMS[0x17];                                    // 0x04E1(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     ViewModelScale;                                            // 0x04F8(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    ViewModelRotation;                                         // 0x0504(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     ViewModelLocationOffset;                                   // 0x0510(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4HY4[0x4];                                     // 0x051C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              WeaponCombatStateCooldown;                                 // 0x0520(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ForceNonCombatShotBlockDistance;                           // 0x0524(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      TargetingVisualizationClass;                               // 0x0528(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsTargeting;                                              // 0x0530(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_W8M1[0x7];                                     // 0x0531(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSWeaponTargetingModule*                    TargetingVisualizerInstance;                               // 0x0538(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UForceFeedbackEffect*                        VibrationEffect;                                           // 0x0540(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UForceFeedbackEffect*                        AlternateVibrationEffect;                                  // 0x0548(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UForceFeedbackAttenuation*                   AlternativeVibrationAttenuation;                           // 0x0550(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URecoilProfileAsset*                         RecoilProfileAsset;                                        // 0x0558(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsMeleeWeaponComponent;                                   // 0x0560(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VK3K[0x7];                                     // 0x0561(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     VFXSpangKeywordPrefix;                                     // 0x0568(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     DecalSpangKeywordPrefix;                                   // 0x0578(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       VFXSpangDefaultKeyword;                                    // 0x0588(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<TEnumAsByte<Engine_EPhysicalSurface>, struct FName> VFXSpangKeywordMap;                                        // 0x0590(0x0050) (Transient, NativeAccessSpecifierPrivate)
	struct FName                                       DecalSpangDefaultKeyword;                                  // 0x05E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<TEnumAsByte<Engine_EPhysicalSurface>, struct FName> DecalSpangKeywordMap;                                      // 0x05E8(0x0050) (Transient, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1772);
		return ptr;
	}



	bool UsingAccuracyLoss();
	void UpdateOwnerLocallyViewed(bool bIsLocallyViewed);
	void UpdateAimDownSightsBlurValues();
	void TriggerEngagement();
	void TriggerCombat();
	void TickViewerAim(float DeltaTime);
	void TickNonViewerAim(float DeltaTime);
	void StopDefaultAim();
	void StopAimOverShoulder();
	void StopAimDownSights();
	void StopAimAlternate();
	void StartDefaultAim();
	void StartAimOverShoulder();
	void StartAimDownSights();
	void StartAimAlternate();
	bool ShouldBroadcastWeaponStateChange(const struct FKSWeaponDataUpdateContainer& OldState, const struct FKSWeaponDataUpdateContainer& NewState, bool* bReliable);
	void SetWeaponVisibility(bool Visible);
	void SetViewModelScale(const struct FVector& newVal);
	void SetViewModelRotation(const struct FRotator& newVal);
	void SetViewModelLocationOffset(const struct FVector& newVal);
	void SetGamepadTriggerEffect(TEnumAsByte<Killstreak_EGamepadTriggerType> TriggerType, unsigned char TriggerStartPosition, unsigned char TriggerStopPosition, unsigned char TriggerHapticStrength);
	void ReportNewWeaponLowerAlpha(float NewAlpha, float DeltaTime, bool ForceReset);
	void PostCreateWeaponSkeletalMeshComponent(class UKSWeaponSkeletalMeshComponent* CreatedWeaponSkeletalMeshComponent);
	void OnWeaponStateChanged(Killstreak_EWeaponStateNew OldState, Killstreak_EWeaponStateNew NewState);
	void OnUnsetAsActivePrimaryWeapon();
	void OnSkyDiveStarted(class AKSCharacter* SkyDiver);
	void OnSkyDiveSkipped(class AKSCharacter* SkyDiver);
	void OnSkyDiveEnded(class AKSCharacter* SkyDiver);
	void OnSetAsActivePrimaryWeapon();
	void OnRep_WeaponState();
	void OnRep_WeaponAsset();
	void OnRep_InitialState();
	void OnRep_AmmoInClip(unsigned char OldAmmoInClip);
	void OnMirrorPoseChanged();
	void OnInvalidFire();
	void OnInitialize();
	void OnFireWeaponFull(const struct FFullFireRepData& Data);
	void OnFireWeapon(const struct FAimData& Aim);
	void OnEmptyFire();
	void OnActiveMaterialsApplied(class USkinnableSkeletalMeshComponent* SkinnableSkelComp);
	void NotifyStopFireReceived();
	bool IsWeaponSilenced();
	bool IsWeaponPendingFireWithValidAmmo();
	bool IsUsingPropWeapon();
	bool IsTargetingEnabled();
	bool IsReloading();
	bool IsPrimaryActiveWeapon();
	bool IsModelViewer();
	bool IsClipEmpty();
	bool IsAimingOverShoulder();
	bool IsAimingDownSights();
	bool IsAimingAlternate();
	bool IsAiming();
	bool IsAimedAtFriendly();
	bool IsAimedAtEnemy();
	bool IsActiveWeapon();
	void InitiateMountedWeaponState();
	Killstreak_EWeaponStateNew GetWeaponState();
	void GetWeaponSkeletalMeshComponents(TArray<class UKSWeaponSkeletalMeshComponent*>* OutKSWeaponSkeletalMeshComponents);
	class UKSWeaponSkeletalMeshComponent* GetWeaponSkeletalMeshComponentNew();
	class USkeletalMeshComponent* GetWeaponSkeletalMeshComponent();
	struct FVector GetWeaponCameraOffset();
	class UKSWeaponAsset* GetWeaponAsset();
	class UAnimInstance* GetWeaponAnimInstance();
	float GetWalkSpeedModifier();
	struct FVector GetViewModelScale();
	struct FRotator GetViewModelRotation();
	struct FVector GetViewModelLocationOffet();
	class UForceFeedbackEffect* GetVibrationEffect();
	struct FName STATIC_GetVFXSpangKeyword(TEnumAsByte<Engine_EPhysicalSurface> SurfaceType);
	class UClass* GetTargetingVisualizationClass();
	class UKSWeaponTargetingModule* GetTargetingModuleInstance();
	struct FName GetScopeSocketName();
	float GetRetrieveTime();
	float GetReloadTime();
	bool GetReactiveAttachmentCosmeticInstance(class UKSAttachCosmeticInst_Reactive** OutWeaponReactiveCometic);
	float GetPostFireTime();
	struct FName GetMuzzleSocketName();
	float GetMovementAccuracyPenalty();
	float GetMaxHipFireAccuracy();
	float GetMaxFiringAccuracyLoss();
	float GetMaxFiringAccuracyGain();
	float GetMaxAimedFiringAccuracyGain();
	float GetMaxAimedAccuracy();
	float GetMagnifierValue();
	void GetLoadedAccumulatedAttachmentOverrideData(struct FLoadedWeaponAttachmentAnimationData* OutData);
	float GetInAirAccuracyModifier();
	float GetFiringTime();
	class UKSWeaponSkeletalMeshComponent* GetDuplicateSkeletalMeshComponentNew();
	class USkeletalMeshComponent* GetDuplicateSkeletalMeshComponent();
	struct FName STATIC_GetDecalSpangKeyword(TEnumAsByte<Engine_EPhysicalSurface> SurfaceType);
	float GetDamageModifier(class UClass* DamageTypeClass);
	Killstreak_EVariableFireRateState GetCurrentFireRateState();
	float GetCurrentFireRate();
	float GetCurrentAccuracy();
	float GetCrouchAccuracyModifier();
	unsigned char GetClipSize();
	class UKSWeaponSkeletalMeshComponent* GetBestWeaponSkeletalMeshComponent();
	float GetBaseRetrieveTime();
	float GetBaseReloadTime();
	float GetBaseFiringTime();
	float GetBaseAccuracy();
	void GetAttachments(TArray<class UKSWeaponAttachment*>* OutWeaponAttachments);
	void GetAttachmentCosmeticInstances(TArray<class UKSWeaponAttachmentCosmeticInst*>* OutWeaponAttachmentCosmetics);
	TArray<class USkeletalMeshComponent*> GetAncillaryMeshes();
	int GetAmmoInOwnerInventory();
	unsigned char GetAmmoInClip();
	class UForceFeedbackEffect* GetAlternativeVibrationEffect();
	class UForceFeedbackAttenuation* GetAlternativeVibrationAttenuation();
	float GetAimOverShoulderAccuracyModifier();
	Killstreak_EKSCharacterAimMode GetAimMode();
	float GetAdjustedRetrieveRate();
	float GetAdjustedReloadRate();
	float GetAdjustedFiringRate();
	int GetActiveIndex();
	float GetAccuracyReturnRate();
	float GetAccuracyReturnDelay();
	float GetAccuracyLossPerShot();
	float GetAccuracyGainPerShot();
	float GetAccuracyDecayRate();
	struct FName STATIC_GenerateSurfaceBasedKeyword(const struct FString& Prefix, TEnumAsByte<Engine_EPhysicalSurface> SurfaceType);
	void ForceRetrieveWeapon();
	void ForceRetrieveState();
	void ForceHolsterWeapon();
	void ForceAttachWeaponToHolsterSocket();
	void ForceAttachWeaponToActiveSocket();
	void ForceAimUpdate();
	void EventUpdateOwnerLocallyViewed(bool bIsLocallyViewed);
	float EvaluateWeaponLowering(float DeltaTime);
	void EndMountedWeaponState();
	void DropMagazine();
	void DisableGamepadTriggerEffect();
	void STATIC_DisableAllGamepadTriggerEffects();
	void DetatchWeaponSkeletalMeshComponentAttachedChildren();
	bool CanUseCombatState(Killstreak_ECombatState TestState);
	bool CanReceiveAttachment(class UKSWeaponAttachment* InAttachment, struct FGameplayTagContainer* AvailableAttachPoints);
	bool CanLowerWeaponNow();
	void CancelReloadCosmetic();
	int CalcAmmoToBeReloaded();
	void BroadcastWeaponStateChange(uint32_t BroadcastId, const struct FKSWeaponDataUpdateContainer& NewState);
	void BroadcastReliableWeaponStateChange(uint32_t BroadcastId, const struct FKSWeaponDataUpdateContainer& NewState);
	void BroadcastReliablePostReload(uint32_t BroadcastId, unsigned char InAmmoInClip);
	void BroadcastReliablePostFireWithAmmo(uint32_t BroadcastId, unsigned char InAmmoInClip);
	void BroadcastReliableEmptyFire(uint32_t BroadcastId);
	void BroadcastReliableAmmoChange(uint32_t BroadcastId, unsigned char InAmmoInClip, bool bBonusAmmo);
	void BroadcastReliableAimedPostFireWithAmmo(uint32_t BroadcastId, const struct FAimData& Aim, unsigned char InAmmoInClip);
	void BroadcastReliableAimedPostFireFull(uint32_t BroadcastId, const struct FFullFireRepData& Data);
	void BroadcastReliableAimedPostFire(uint32_t BroadcastId, const struct FAimData& Aim);
	void BroadcastPostReload(uint32_t BroadcastId, unsigned char InAmmoInClip);
	void BroadcastPostFireWithAmmo(uint32_t BroadcastId, unsigned char InAmmoInClip);
	void BroadcastEmptyFire(uint32_t BroadcastId);
	void BroadcastCurrentFireRateStateHasChanged(Killstreak_EVariableFireRateState State, float Timestamp, float PostFireTime);
	void BroadcastAmmoChange(uint32_t BroadcastId, unsigned char InAmmoInClip, bool bBonusAmmo);
	void BroadcastAimedPostFireWithAmmo(uint32_t BroadcastId, const struct FAimData& Aim, unsigned char InAmmoInClip);
	void BroadcastAimedPostFireFull(uint32_t BroadcastId, const struct FFullFireRepData& Data);
	void BroadcastAimedPostFire(uint32_t BroadcastId, const struct FAimData& Aim);
	void BlueprintPrepareKillCamPlayback();
	void BlueprintPersistentCosmeticsUpdate();
	void BlueprintFinishKillCamPlayback();
	void BlueprintFillLegacyDataTable(class UDataTable* LegacyDataTable);
	void AimDownSightsCheckpoint();
};

// Class Killstreak.KSWeaponFunctionLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKSWeaponFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1773);
		return ptr;
	}



	void OnTraceReactionDelay__DelegateSignature(bool bBlockingHit, TArray<struct FHitResult> OutHits, const struct FVector& start, const struct FVector& end);
	bool STATIC_MultiLineWeaponTraceByObjectType(class UObject* WorldContextObject, class UKSWeaponAsset* Weapon, const struct FVector& start, const struct FVector& end, TArray<TEnumAsByte<Engine_EObjectTypeQuery>> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<Engine_EDrawDebugTrace> DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	bool STATIC_MultiLineWeaponTraceByChannel(class UObject* WorldContextObject, class UKSWeaponAsset* Weapon, const struct FVector& start, const struct FVector& end, TEnumAsByte<Engine_ETraceTypeQuery> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<Engine_EDrawDebugTrace> DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	bool STATIC_MeleeSphereOverlapComponents(class UObject* WorldContextObject, class UKSWeaponAsset* Weapon, const struct FVector& SpherePos, float SphereRadius, TArray<TEnumAsByte<Engine_EObjectTypeQuery>> ObjectTypes, class UClass* ComponentClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class UPrimitiveComponent*>* OutComponents, TEnumAsByte<Engine_EDrawDebugTrace> DrawDebugType, const struct FLinearColor& TraceColor, float DrawTime, float Thickness);
	bool STATIC_MeleeSphereOverlapActors(class UObject* WorldContextObject, class UKSWeaponAsset* Weapon, const struct FVector& SpherePos, float SphereRadius, TArray<TEnumAsByte<Engine_EObjectTypeQuery>> ObjectTypes, class UClass* ActorClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class AActor*>* OutActors, TEnumAsByte<Engine_EDrawDebugTrace> DrawDebugType, const struct FLinearColor& TraceColor, float DrawTime, float Thickness);
	bool STATIC_MeleeBoxOverlapComponents(class UObject* WorldContextObject, class UKSWeaponAsset* Weapon, const struct FVector& BoxPos, const struct FRotator& BoxRot, const struct FVector& Extent, TArray<TEnumAsByte<Engine_EObjectTypeQuery>> ObjectTypes, class UClass* ComponentClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class UPrimitiveComponent*>* OutComponents, TEnumAsByte<Engine_EDrawDebugTrace> DrawDebugType, const struct FLinearColor& TraceColor, float DrawTime, float Thickness);
	bool STATIC_MeleeBoxOverlapActors(class UObject* WorldContextObject, class UKSWeaponAsset* Weapon, const struct FVector& BoxPos, const struct FRotator& BoxRot, const struct FVector& BoxExtent, TArray<TEnumAsByte<Engine_EObjectTypeQuery>> ObjectTypes, class UClass* ActorClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class AActor*>* OutActors, TEnumAsByte<Engine_EDrawDebugTrace> DrawDebugType, const struct FLinearColor& TraceColor, float DrawTime, float Thickness);
	float STATIC_GetGadgetThrowSpeedMultiplier(class APawn* Instigator);
	float STATIC_GetGadgetOuterRadiusMultiplier(class APawn* Instigator);
	float STATIC_GetGadgetInnerRadiusMultiplier(class APawn* Instigator);
	float STATIC_GetGadgetFXSizeMultiplier(class APawn* Instigator);
	struct FTransform STATIC_GetAimRelativeTransform(const struct FVector& AimOrigin, const struct FVector& InitialDirection, const struct FVector& AdditionalOffset, const struct FRotator& AdditionalRotation, bool bIgnoreZAxisForDirection);
	void STATIC_GenerateShotgunSpreadAimDataV2Exact(int PelletCount, float Accuracy, const struct FAimData& InAim, struct FRandomStream* RandomStream, class UKSWeaponAsset* InWeaponAsset, class AActor* InWeaponOwner, float InRange, class UObject* WorldContextObject, struct FAimData* OutAim);
	void STATIC_GenerateShotgunSpreadAimDataV2(int PelletCount, float Accuracy, const struct FAimData& InAim, struct FRandomStream* RandomStream, class UKSWeaponAsset* InWeaponAsset, struct FAimData* OutAim);
	void STATIC_GenerateShotgunSpreadAimData(int PelletCount, float Accuracy, const struct FAimData& Aim, struct FRandomStream* RandomStream, TArray<struct FAimData>* OutSpread);
	void STATIC_FrameDelayForTrace(class UObject* WorldContextObject, int NumFramesToDelay, bool bBlockingHit, TArray<struct FHitResult> Hits, const struct FVector& start, const struct FVector& end, const struct FScriptDelegate& OnDelayComplete, const struct FLatentActionInfo& LatentInfo);
	void STATIC_FindShotgunPelletHitData(class AKSWeapon* InWeapon, TArray<struct FHitResult> ShotgunHits, struct FShotgunHitData* PelletHitData);
	bool STATIC_EventSingleShotgunLineTraceByChannelV2(class UObject* WorldContextObject, const struct FAimData& InAim, float PelletRange, TEnumAsByte<Engine_ETraceTypeQuery> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<Engine_EDrawDebugTrace> DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	bool STATIC_EventSingleShotgunLineTraceByChannel(class UObject* WorldContextObject, TArray<struct FAimData> Spread, float PelletRange, TEnumAsByte<Engine_ETraceTypeQuery> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<Engine_EDrawDebugTrace> DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	void STATIC_EventMultiShotgunLineTraceByChannelV3(class UObject* WorldContextObject, int ShotPenetrationCount, const struct FAimData& InAim, float PelletRange, TEnumAsByte<Engine_ETraceTypeQuery> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<Engine_EDrawDebugTrace> DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLatentActionInfo& LatentInfo, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	bool STATIC_EventMultiShotgunLineTraceByChannelV2(class UObject* WorldContextObject, class UKSWeaponAsset* Weapon, int ShotPenetrationCount, const struct FAimData& InAim, float PelletRange, TEnumAsByte<Engine_ETraceTypeQuery> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<Engine_EDrawDebugTrace> DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	bool STATIC_EventMultiShotgunLineTraceByChannel(class UObject* WorldContextObject, class UKSWeaponAsset* Weapon, int ShotPenetrationCount, TArray<struct FAimData> Spread, float PelletRange, TEnumAsByte<Engine_ETraceTypeQuery> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<Engine_EDrawDebugTrace> DrawDebugType, TArray<struct FHitResult>* OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime);
	bool STATIC_DoRadialDamageWithPreventionChannel(class UObject* WorldContextObject, const struct FVector& Origin, class UKSWeaponAsset* InAsset, TArray<class AActor*> IgnoreActors, class UClass* DamageTypeClass, class AController* DamageInstigator, class AActor* DamageCauser, TEnumAsByte<Engine_ECollisionChannel> DamagePreventionChannel);
	bool STATIC_DoRadialDamage(class UObject* WorldContextObject, const struct FVector& Origin, class UKSWeaponAsset* InAsset, TArray<class AActor*> AdditionalIgnoreActors, class AController* DamageInstigator, class AActor* DamageCauser);
	float STATIC_DoPointDamage(class AActor* DamagedActor, float BaseDamage, const struct FVector& HitFromDirection, const struct FHitResult& HitInfo, class AController* EventInstigator, class AActor* DamageCauser, class UClass* DamageTypeClass, bool bSkipFriendlyFireDamageTracking);
	void STATIC_CongregateShotgunHits(class AKSWeapon* InWeapon, TArray<struct FHitResult> ShotgunHits, TArray<struct FCongregatedShotgunHit>* CongregatedResults);
};

// Class Killstreak.KSWeaponManager
// 0x00D0 (FullSize[0x00F8] - InheritedSize[0x0028])
class UKSWeaponManager : public UObject
{
public:
	unsigned char                                      UnknownData_92CO[0xD0];                                    // 0x0028(0x00D0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1774);
		return ptr;
	}



	void Uninitialize();
	void Initialize();
	class UKSWeaponCategoryAsset* GetWeaponCategoryAssetByXPInstance(class UKSActivityInstance* MasteryProgressInstance);
	class UKSWeaponAsset* GetWeaponAssetByActivityInstance(class UKSActivityInstance* MasteryProgressInstance);
	class UKSWeaponCategoryAsset* GetCategoryByTag(const struct FGameplayTag& CategoryTag);
};

// Class Killstreak.KSWeaponMasteryManager
// 0x0008 (FullSize[0x0218] - InheritedSize[0x0210])
class UKSWeaponMasteryManager : public UKSActivityManagerBase
{
public:
	class UDataTable*                                  MiscRewardsTable;                                          // 0x0210(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1775);
		return ptr;
	}



	bool IsWeaponUnlockedInStore(class UKSWeaponAsset* WeaponAsset, class AKSPlayerState* PlayerState);
	bool IsWeaponMastered(class UKSWeaponAsset* WeaponAsset, class AKSPlayerState* PlayerState);
	bool IsWeaponFullyMastered(class UKSWeaponAsset* WeaponAsset, class AKSPlayerState* PlayerState);
	void GetWeaponMasteryRewardDisplayData(Killstreak_EKSWeaponMasteryType MasteryType, const struct FActivityTier& RewardTier, TArray<struct FText> RewardItemsTypeTexts, class UObject* MasteryContextObject, TArray<struct FWeaponMasteryRewardDisplayData>* RewardData);
	bool GetWeaponMasteryLevel(class UKSWeaponAsset* WeaponAsset, int* OutLevel);
	int GetLockedMilestonesCount(class UKSWeaponAsset* WeaponAsset);
	bool GetAllObjectiveProgressInstances(class UKSWeaponAsset* WeaponAsset, TArray<class UKSActivityInstance*>* OutObjectiveInstances, class AKSPlayerState* PlayerState);
	class UKSActivityInstance* FindActivityInstanceByProgressLootId(int64_t ProgressLootId, class AKSPlayerController* Player);
};

// Class Killstreak.KSWeaponMilestoneUnlock
// 0x0028 (FullSize[0x0278] - InheritedSize[0x0250])
class UKSWeaponMilestoneUnlock : public UKSItem
{
public:
	unsigned char                                      WeaponReference[0x28];                                     // 0x0250(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1776);
		return ptr;
	}



};

// Class Killstreak.KSWeaponPropManagerComponent
// 0x01E0 (FullSize[0x0290] - InheritedSize[0x00B0])
class UKSWeaponPropManagerComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_X3K8[0xD8];                                    // 0x00B0(0x00D8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FActiveWeaponProp>                   ActiveNamelessProps;                                       // 0x0188(0x0010) (ZeroConstructor, Transient, DuplicateTransient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FPropIdentifier, struct FActiveWeaponProp> ActiveProps;                                               // 0x0198(0x0050) (Transient, DuplicateTransient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<struct FPropIdentifier, struct FLegacyWeaponProp> LegacyProps;                                               // 0x01E8(0x0050) (Transient, DuplicateTransient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LQ74[0x50];                                    // 0x0238(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bAllowAnimNotifyStatesToCreatePropSpawners;                // 0x0288(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_749L[0x7];                                     // 0x0289(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1777);
		return ptr;
	}



};

// Class Killstreak.KSWeaponSkeletalMeshComponent
// 0x0040 (FullSize[0x0DE0] - InheritedSize[0x0DA0])
class UKSWeaponSkeletalMeshComponent : public UKSSkeletalMeshComponent
{
public:
	bool                                               bApplySkeletalMeshBoundsParameterToMaterials;              // 0x0DA0(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZWXJ[0x3];                                     // 0x0DA1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       SkeletalMeshBoundsParameterName;                           // 0x0DA4(0x0008) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bApplySkeletalLengthParameterToMaterials;                  // 0x0DAC(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DBT1[0x3];                                     // 0x0DAD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       SkeletalMeshLengthParameterName;                           // 0x0DB0(0x0008) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bApplySkeletalWidthParameterToMaterials;                   // 0x0DB8(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6IJX[0x3];                                     // 0x0DB9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       SkeletalMeshWidthParameterName;                            // 0x0DBC(0x0008) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bApplySkeletalHeightParameterToMaterials;                  // 0x0DC4(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OPRE[0x3];                                     // 0x0DC5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       SkeletalMeshHeightParameterName;                           // 0x0DC8(0x0008) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5XE3[0x10];                                    // 0x0DD0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1778);
		return ptr;
	}



};

// Class Killstreak.KSWingSuitCosmeticComponent
// 0x0080 (FullSize[0x0230] - InheritedSize[0x01B0])
class UKSWingSuitCosmeticComponent : public UKSWeaponAttachmentCosmeticInst
{
public:
	struct FName                                       SocketAttachPoint;                                         // 0x01B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FString                                     AssetPrefix;                                               // 0x01B8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldDodgeRollOnLanding;                                 // 0x01C8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldUseFootIKDuringFreefall;                            // 0x01C9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Q9DP[0x6];                                     // 0x01CA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FDataTableInfo>                      BaseAssetDataTables;                                       // 0x01D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     ViewModelScale;                                            // 0x01E0(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    ViewModelRotation;                                         // 0x01EC(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                                     ViewModelLocationOffset;                                   // 0x01F8(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N814[0x4];                                     // 0x0204(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UParticleSystemComponent*>            WingSuitVFXList;                                           // 0x0208(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               StartSFX;                                                  // 0x0218(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               LoopSFX;                                                   // 0x0220(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               StopSFX;                                                   // 0x0228(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1779);
		return ptr;
	}



	void OnWingSuitCosmeticInitialized();
	void OnFreeFallStartedNative();
	void OnFreeFallStarted();
	void OnFreeFallEndedNative();
	void OnFreeFallEnded();
	struct FVector GetViewModelScale();
	struct FRotator GetViewModelRotation();
	struct FVector GetViewModelLocationOffet();
};

// Class Killstreak.KSWorldSettings
// 0x01C8 (FullSize[0x0598] - InheritedSize[0x03D0])
class AKSWorldSettings : public APGame_WorldSettings
{
public:
	unsigned char                                      UnknownData_DA4T[0x10];                                    // 0x03D0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               bUseLowDrainBatteryMode;                                   // 0x03E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DHZ4[0x7];                                     // 0x03E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystemPoolComponent*                ParticleSystemPoolComponent;                               // 0x03E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDecalPoolComponent*                         DecalPoolComponent;                                        // 0x03F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGunshotDecalPoolComponent*                  GunshotDecalPoolComponent;                                 // 0x03F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFootprintDecalPoolComponent*                FootprintDecalPoolComponent;                               // 0x0400(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshPoolComponent*                  SkeletalMeshPoolComponent;                                 // 0x0408(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshPoolComponent*                    StaticMeshPoolComponent;                                   // 0x0410(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTracerParticlePoolComponent*                TracerParticlePoolComponent;                               // 0x0418(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTracerStaticMeshPoolComponent*              TracerStaticMeshPoolComponent;                             // 0x0420(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkPoolComponent*                            AkPoolComponent;                                           // 0x0428(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                EchoRequestCount;                                          // 0x0430(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7N82[0x14];                                    // 0x0434(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     FriendlyAudioName;                                         // 0x0448(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     FriendlyAchievementName;                                   // 0x0458(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                        MapTags;                                                   // 0x0468(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      AudioPlayerToSpawn[0x28];                                  // 0x0478(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	class UBakedOcclusionLUT*                          AudioOcclusionLUT;                                         // 0x04A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FName, bool>                           BoolPropertyMap;                                           // 0x04A8(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TMap<struct FName, int>                            IntPropertyMap;                                            // 0x04F8(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TMap<struct FName, float>                          FloatPropertyMap;                                          // 0x0548(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1780);
		return ptr;
	}



	void LevelActorDestroyed(class AActor* TheActor);
};

// Class Killstreak.KSZipLineStart
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UKSZipLineStart : public UKSInteractionState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1781);
		return ptr;
	}



};

// Class Killstreak.KSZipLine
// 0x0080 (FullSize[0x02A0] - InheritedSize[0x0220])
class AKSZipLine : public AActor
{
public:
	unsigned char                                      UnknownData_H76A[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AKSCharacter*>                        ZipLiners;                                                 // 0x0230(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     ZipStart;                                                  // 0x0240(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     ZipEnd;                                                    // 0x024C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     ZipHangOffset;                                             // 0x0258(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ZipSpeed;                                                  // 0x0264(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bReadyToRide;                                              // 0x0268(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O5QH[0x3];                                     // 0x0269(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CooldownTime;                                              // 0x026C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinimumInteractTime;                                       // 0x0270(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InteractTime;                                              // 0x0274(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LengthToEndToIgnore;                                       // 0x0278(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUpline;                                                   // 0x027C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bGrabFromBehind;                                           // 0x027D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bForgivingInteractionAngle;                                // 0x027E(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UKZD[0x1];                                     // 0x027F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      InteractionType;                                           // 0x0280(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AutoReleaseDistance;                                       // 0x0288(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AutoReleaseSpeed;                                          // 0x028C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AutoReleasePitchAngle;                                     // 0x0290(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bSupportsPreHold;                                          // 0x0294(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N9HK[0x3];                                     // 0x0295(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                 // 0x0298(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1782);
		return ptr;
	}



	void SetReadyToRide(bool bIsReadyToRide);
	void OnPlayerZiplineCooldownEnd(class AKSCharacter* Character);
	void OnPlayerStopZiplining(class AKSCharacter* Character);
	void OnPlayerStartZiplining(class AKSCharacter* Character);
	bool IsUpline();
	float GetAutoReleaseDistance();
	struct FVector ComputeAutoReleaseVelocity(const struct FRotator& CharRotation);
};

// Class Killstreak.KSZipLine_Dynamic
// 0x0000 (FullSize[0x02A0] - InheritedSize[0x02A0])
class AKSZipLine_Dynamic : public AKSZipLine
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1783);
		return ptr;
	}



	void SetDynamicAnchors(const struct FVector& StartAnchor, const struct FVector& EndAnchor);
};

// Class Killstreak.KSZiplineAnimInst
// 0x0038 (FullSize[0x1120] - InheritedSize[0x10E8])
class UKSZiplineAnimInst : public UKSCharacterAnimInst
{
public:
	unsigned char                                      UnknownData_I9H1[0x4];                                     // 0x10E8(0x0004) Fix Super Size
	float                                              WheelCurrentSpeed;                                         // 0x10EC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    UpperWheelRotator;                                         // 0x10F0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    LowerWheelRotator;                                         // 0x10FC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    ZiplineTopLockRot;                                         // 0x1108(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              ZiplineTopLockRotModifierPitch;                            // 0x1114(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ZiplineTopLockRotModifierRoll;                             // 0x1118(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ZiplineTopLockRotModifierYaw;                              // 0x111C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1784);
		return ptr;
	}



};

// Class Killstreak.KSZiplineMeshComponent
// 0x0000 (FullSize[0x0DA0] - InheritedSize[0x0DA0])
class UKSZiplineMeshComponent : public UKSSkeletalMeshComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1785);
		return ptr;
	}



	void StartZiplining();
	void EndZiplining();
};

// Class Killstreak.LoadingScreenImageManager
// 0x0070 (FullSize[0x00A0] - InheritedSize[0x0030])
class ULoadingScreenImageManager : public UDataAsset
{
public:
	struct FLoadingScreenImageInfo                     FailSafeLoadingScreen;                                     // 0x0030(0x0070) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1786);
		return ptr;
	}



};

// Class Killstreak.LoadoutClassCollection
// 0x0050 (FullSize[0x00E8] - InheritedSize[0x0098])
class ULoadoutClassCollection : public UItemCollection
{
public:
	struct FText                                       CollectionName;                                            // 0x0098(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       CollectionDescription;                                     // 0x00B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JZRJ[0x20];                                    // 0x00C8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1787);
		return ptr;
	}



};

// Class Killstreak.LobbyPlayerController
// 0x0010 (FullSize[0x06C0] - InheritedSize[0x06B0])
class ALobbyPlayerController : public APGame_PlayerController
{
public:
	unsigned char                                      UnknownData_7T7M[0x8];                                     // 0x06B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      PendingHUDClass;                                           // 0x06B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1788);
		return ptr;
	}



	void UIX_FlushPressedKeys();
	void LoadRoute(const struct FName& RouteName, bool ForceTransition);
	void ClearDeserterPenalty();
};

// Class Killstreak.ParticleSystemChannelComponent
// 0x0000 (FullSize[0x06B0] - InheritedSize[0x06B0])
class UParticleSystemChannelComponent : public UParticleSystemComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1790);
		return ptr;
	}



	void UpdateChannels();
};

// Class Killstreak.PerkCategory
// 0x00B0 (FullSize[0x0148] - InheritedSize[0x0098])
class UPerkCategory : public UItemCollection
{
public:
	struct FText                                       PerkCategoryName;                                          // 0x0098(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       PerkCategoryDescription;                                   // 0x00B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      AssociatedPerkTree[0x28];                                  // 0x00C8(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	struct FLinearColor                                ThemeColorLight;                                           // 0x00F0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                ThemeColorDark;                                            // 0x0100(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FC7U[0x10];                                    // 0x0110(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      PerkCategoryIcon[0x28];                                    // 0x0110(0x0028) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1791);
		return ptr;
	}



	void GetSoftCategoryIcon();
};

// Class Killstreak.PersistentPlayerLoadoutComponent
// 0x0068 (FullSize[0x0120] - InheritedSize[0x00B8])
class UPersistentPlayerLoadoutComponent : public UPreviewActorLoadoutComponent
{
public:
	unsigned char                                      UnknownData_REFD[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UKSItem*, class UKSItem*>               SkinMap;                                                   // 0x00C8(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	class UKSJobItem*                                  JobToUse;                                                  // 0x0118(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1792);
		return ptr;
	}



	void OwnerChangedPersistentPlayerData();
};

// Class Killstreak.PlayerInfoPrevwLoadoutComponent
// 0x0098 (FullSize[0x0150] - InheritedSize[0x00B8])
class UPlayerInfoPrevwLoadoutComponent : public UPreviewActorLoadoutComponent
{
public:
	class UKSJobItem*                                  CurrentJob;                                                // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      FailSafeJob[0x28];                                         // 0x00C0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	TMap<class UKSItem*, class UKSItem*>               SkinMap;                                                   // 0x00E8(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UKSPlayerInfo>                WeakPlayerInfo;                                            // 0x0138(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QH7Q[0x10];                                    // 0x0140(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1793);
		return ptr;
	}



};

// Class Killstreak.PreviewActorLoadoutComponentDirect
// 0x0060 (FullSize[0x0118] - InheritedSize[0x00B8])
class UPreviewActorLoadoutComponentDirect : public UPreviewActorLoadoutComponent
{
public:
	class UKSJobItem*                                  CurrentJob;                                                // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UKSSkinBundle*                               CurrentSkin;                                               // 0x00C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class UKSItem*, class UKSItem*>               SkinMap;                                                   // 0x00C8(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1794);
		return ptr;
	}



};

// Class Killstreak.SafeToCookAssetLabel
// 0x0000 (FullSize[0x0068] - InheritedSize[0x0068])
class USafeToCookAssetLabel : public UPrimaryAssetLabel
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1795);
		return ptr;
	}



};

// Class Killstreak.SkinBundleCollection
// 0x00D0 (FullSize[0x0168] - InheritedSize[0x0098])
class USkinBundleCollection : public UItemCollection
{
public:
	struct FText                                       SkinBundleCollectionName;                                  // 0x0098(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       SkinBundleCollectionDescription;                           // 0x00B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UI8F[0xA0];                                    // 0x00C8(0x00A0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1796);
		return ptr;
	}



};

// Class Killstreak.SmoothRepTimelineActor
// 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
class ASmoothRepTimelineActor : public AActor
{
public:
	struct FTimelineSimulationHandler                  SmoothTimeline;                                            // 0x0220(0x0014) (Edit, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_X5M3[0x4];                                     // 0x0234(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTimelineComponent*                          TimelineComponentToSimulate;                               // 0x0238(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1797);
		return ptr;
	}



	void SetTimelineComponentToSimulate(class UTimelineComponent* InTimelineComponent);
	void OnRep_SmoothTimeline();
};

// Class Killstreak.SplineMovementComponent
// 0x0088 (FullSize[0x0178] - InheritedSize[0x00F0])
class USplineMovementComponent : public UMovementComponent
{
public:
	unsigned char                                      bPauseOnImpact : 1;                                        // 0x00F0(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8AMX[0x3];                                     // 0x00F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	Killstreak_ESplineBehaviourType                    BehaviourType;                                             // 0x00F4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PP54[0x3];                                     // 0x00F5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bForceSubStepping : 1;                                     // 0x00F8(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_24C4[0x7];                                     // 0x00F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnSplineReverse;                                           // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSplineStop;                                              // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWaitBeginDelegate;                                       // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWaitEndDelegate;                                         // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnResetDelegate;                                           // 0x0140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              MaxSimulationTimeStep;                                     // 0x0150(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxSimulationIterations;                                   // 0x0154(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineComponent*                            Spline;                                                    // 0x0158(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Speed;                                                     // 0x0160(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NMCR[0x14];                                    // 0x0164(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1798);
		return ptr;
	}



	void StopSimulating(const struct FHitResult& HitResult);
	void SetInitialOffsetOnSpline(float Distance);
	void RestartMovement(float InitialDirection);
	void OnSplineWaitEndDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);
	void OnSplineWaitBeginDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);
	void OnSplineStopDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);
	void OnSplineReverseDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);
	void OnSplineResetDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);
	void GoToTime(float Time);
	float GetAlpha();
};

// Class Killstreak.ThermalScopeManagerComponent
// 0x0050 (FullSize[0x0100] - InheritedSize[0x00B0])
class UThermalScopeManagerComponent : public UActorComponent
{
public:
	class UClass*                                      ThermalScopePPComponentClass;                              // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4SG6[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AKSCharacter*                                CharacterOwner;                                            // 0x00C0(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FActiveThermalPPComponentInfo>       ActiveThermals;                                            // 0x00C8(0x0010) (ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O8LD[0x28];                                    // 0x00D8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1799);
		return ptr;
	}



	class UThermalScopeManagerComponent* STATIC_CreateThermalManagerComponent(class AKSCharacter* InCharacter, class UKSWeaponComponent* InWeaponComponent, class UClass* ThermalPostProcessClass);
};

// Class Killstreak.ThermalScopePPComponent
// 0x0028 (FullSize[0x00D8] - InheritedSize[0x00B0])
class UThermalScopePPComponent : public UActorComponent
{
public:
	class UThermalScopeManagerComponent*               ManagerComponent;                                          // 0x00B0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AKSPlayerCameraManager*                      CameraManagerOwner;                                        // 0x00B8(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                          ThermalPostProcessMaterial;                                // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    ThermalPostProcessMaterialDynamic;                         // 0x00C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MAE7[0x8];                                     // 0x00D0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1800);
		return ptr;
	}



};

// Class Killstreak.TracerParticlePoolComponent
// 0x0000 (FullSize[0x0150] - InheritedSize[0x0150])
class UTracerParticlePoolComponent : public UParticleSystemPoolComponentBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1801);
		return ptr;
	}



	void OnTracerDestinationReached(class USceneComponent* TracerComponent);
};

// Class Killstreak.TracerParticleSystemComponent
// 0x0030 (FullSize[0x06E0] - InheritedSize[0x06B0])
class UTracerParticleSystemComponent : public UParticleSystemComponent
{
public:
	struct FVector                                     start;                                                     // 0x06B0(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     end;                                                       // 0x06BC(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TravelSpeed;                                               // 0x06C8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDestroyOnDestinationReached;                              // 0x06CC(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDeactivateOnDestinationReached;                           // 0x06CD(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableTravel;                                             // 0x06CE(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6BAM[0x1];                                     // 0x06CF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnTracerParticleReachedDestiniationDel;                    // 0x06D0(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1802);
		return ptr;
	}



};

// Class Killstreak.TracerStaticMeshComponent
// 0x0048 (FullSize[0x0530] - InheritedSize[0x04E8])
class UTracerStaticMeshComponent : public UStaticMeshComponent
{
public:
	unsigned char                                      UnknownData_JKI5[0x8];                                     // 0x04E8(0x0008) Fix Super Size
	struct FVector                                     start;                                                     // 0x04F0(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     end;                                                       // 0x04FC(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TravelSpeed;                                               // 0x0508(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDestroyOnDestinationReached;                              // 0x050C(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableTravel;                                             // 0x050D(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E7I4[0x2];                                     // 0x050E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnTracerParticleReachedDestiniationDel;                    // 0x0510(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YZIV[0x10];                                    // 0x0520(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1803);
		return ptr;
	}



};

// Class Killstreak.TracerStaticMeshPoolComponent
// 0x0078 (FullSize[0x0148] - InheritedSize[0x00D0])
class UTracerStaticMeshPoolComponent : public UBasePoolComponent
{
public:
	unsigned char                                      UnknownData_PCO0[0x8];                                     // 0x00D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      PooledTraceStaticMeshComponentClass;                       // 0x00D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTracerStaticMeshComponent*>          UnusedComponentsArray;                                     // 0x00E0(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UsedComponentsSet[0x50];                                   // 0x00F0(0x0050) UNKNOWN PROPERTY: SetProperty
	class UTracerStaticMeshComponent*                  PeekedTracerStaticMeshComponent;                           // 0x0140(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1804);
		return ptr;
	}



	void OnTracerDestinationReached(class USceneComponent* TracerComponent);
};

// Class Killstreak.ViewDependentRules_1PCamera
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UViewDependentRules_1PCamera : public UViewDependentAkEventRules
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1805);
		return ptr;
	}



};

// Class Killstreak.WeaponCollection
// 0x0040 (FullSize[0x00D8] - InheritedSize[0x0098])
class UWeaponCollection : public UItemCollection
{
public:
	struct FText                                       WeaponCollectionName;                                      // 0x0098(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       WeaponCollectionDescription;                               // 0x00B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5WC5[0x10];                                    // 0x00C8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::GetObjectCasted<UClass>(1806);
		return ptr;
	}



};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
